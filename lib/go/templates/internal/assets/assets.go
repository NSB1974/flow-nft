// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../scripts/borrow_nft.cdc (769B)
// ../../../scripts/get_collection_data.cdc (249B)
// ../../../scripts/get_collection_ids.cdc (502B)
// ../../../scripts/get_collection_length.cdc (652B)
// ../../../scripts/get_contract_storage_path.cdc (518B)
// ../../../scripts/get_nft_metadata.cdc (6.032kB)
// ../../../scripts/get_nft_view.cdc (4.896kB)
// ../../../transactions/destroy_nft.cdc (1.227kB)
// ../../../transactions/mint_nft.cdc (2.872kB)
// ../../../transactions/nft-forwarding/change_forwarder_recipient.cdc (1.298kB)
// ../../../transactions/nft-forwarding/create_forwarder.cdc (1.573kB)
// ../../../transactions/nft-forwarding/transfer_nft_to_receiver.cdc (2.015kB)
// ../../../transactions/nft-forwarding/unlink_forwarder_link_collection.cdc (1.103kB)
// ../../../transactions/setup_account.cdc (1.342kB)
// ../../../transactions/setup_account_from_nft_reference.cdc (1.351kB)
// ../../../transactions/setup_account_to_receive_royalty.cdc (1.509kB)
// ../../../transactions/test/upgrade_nft_contract.cdc (172B)
// ../../../transactions/transfer_nft.cdc (2.226kB)
// ../../../transactions/unlink_collection.cdc (518B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xc1\x6a\xdb\x40\x10\xbd\xef\x57\xbc\xea\x50\x24\x28\xf2\xa5\xf4\x10\xe2\x98\x34\xad\xa1\x87\x9a\x12\xd4\x5e\xcb\x78\x35\x8a\x87\xae\x77\x97\xdd\x55\xdc\x10\xf2\xef\xc5\x5e\x4b\x96\xd2\x42\xf7\x24\x0d\xef\xcd\x7b\x6f\x66\x16\x0b\x34\x3b\x89\x88\x3a\x88\x4f\xd8\xba\x10\xdc\x21\x82\x2c\x36\xeb\x06\x5d\x70\x7b\x10\xb4\x33\x86\x75\x12\x67\x95\x92\xbd\x77\x21\x61\xe3\xec\xba\xb7\x0f\xb2\x35\xdc\xb8\x5f\x6c\x33\xb4\x78\x5d\x2e\x06\xfc\x57\x4e\xd4\x52\xa2\x1f\xc2\x87\x78\x06\xcf\x6a\x23\xf2\xf3\x6f\xda\x7b\xc3\xa3\x7c\x71\x29\x14\x4a\x91\xd6\x1c\x63\x49\xc6\x54\xe8\x7a\x8b\x3d\x89\x2d\xa9\x6d\x03\xc7\x78\x85\xdb\xfc\xf1\x0e\xd2\x5e\xe1\xfb\x17\x9b\x3e\xbc\xaf\xf0\xac\x00\xc0\x70\x02\x69\xed\x7a\x9b\xb0\xc4\x03\xa7\xdb\xfc\x33\x90\x2b\x35\xc2\x2e\x71\x3f\x51\x22\x2c\x27\x96\xea\xc0\xd1\x99\x47\x3e\x5a\x2e\x9b\x27\xcf\xd7\xb3\x10\xf5\x66\xdd\xdc\xcd\xd8\x37\x65\x55\x81\xe2\x1b\xfc\x07\xb7\x3a\xa9\x1f\xdf\x6a\x05\x4f\x56\x74\x59\x1c\xa1\xf7\x59\x2f\xa0\x75\x1c\x61\x5d\xc2\xd9\x01\xfe\x6a\x81\x47\xe1\x43\xf1\xcf\x1c\xf7\xdc\x61\x39\xc4\xaf\x35\x79\xda\x8a\x91\x24\x1c\xeb\xbc\xf1\xeb\xb7\xcf\xaf\x57\x57\x5f\xba\xbf\xdc\x94\xa3\xbd\xe3\x9b\x0f\xa8\xf6\xfd\xd6\x88\xfe\x46\x69\x37\xa2\xaa\x49\x8c\x3b\xd7\x9b\xf6\x64\x3d\x6b\x61\xd4\x7f\xca\x1b\xce\xfc\x49\xd7\x21\xc4\x62\x81\x8f\x99\x42\x08\xdc\x71\x60\xab\x19\xc9\x81\x10\x3d\x6b\xe9\x44\x9f\xce\x54\x2c\xd2\x8e\xa7\x67\x3a\x8c\xe0\x27\x96\xf3\x31\x9c\xf3\x6e\xd6\x4d\x29\x6d\xa5\x5e\xd4\x9f\x00\x00\x00\xff\xff\x0b\xc0\x5f\xb4\x01\x03\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0x3e, 0xc4, 0xab, 0x2f, 0xe, 0xbe, 0x4c, 0x83, 0x2a, 0x6f, 0x85, 0xfb, 0x4c, 0xcb, 0x7f, 0x26, 0x64, 0xb8, 0x72, 0xc4, 0x67, 0xf0, 0x97, 0xf7, 0x81, 0xa6, 0x4b, 0x37, 0xbe, 0x2c, 0xeb}}
	return a, nil
}

var _scriptsGet_collection_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\xbf\x0a\xc2\x30\x10\xc7\xf1\x3d\x4f\xf1\xa3\x53\xb2\xf4\x01\x8a\xa8\xa0\x76\xb3\x53\x70\x3f\xea\x55\x02\xf9\x53\x92\x2b\x2a\xe2\xbb\x8b\x50\xb0\x9d\x5c\x6e\xf8\xf1\xe1\xbe\x2e\x8c\x29\x0b\xce\x2c\x74\x25\xa1\x8b\xe3\x7b\xc1\x90\x53\x40\xb5\xda\x2a\x35\xcb\xd3\x83\xc2\xe8\xb9\x6b\xed\xcc\x7e\x43\xa5\x14\xf5\x3d\x97\xa2\xc9\x7b\x83\x61\x8a\x08\xe4\xa2\x36\xcd\xfa\x7f\xdd\xb5\xf6\x90\xbc\xe7\x5e\x5c\x8a\x47\x12\xda\xe1\xa5\x00\x20\xb3\x4c\x39\x2e\x1a\xf5\x8d\x65\x4d\x75\x1c\xc4\x3e\x47\x6e\xf0\xbd\x9b\xfd\xc2\x76\xad\xdd\x6a\x63\x40\xe5\x6f\x4f\xbd\x3f\x01\x00\x00\xff\xff\xb1\x9c\x4d\xb5\xf9\x00\x00\x00"

func scriptsGet_collection_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_dataCdc,
		"scripts/get_collection_data.cdc",
	)
}

func scriptsGet_collection_dataCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0x65, 0x71, 0xe4, 0x18, 0xa1, 0xec, 0x42, 0xe9, 0x76, 0xea, 0xa0, 0x89, 0x8f, 0x83, 0xeb, 0x97, 0xd8, 0x6e, 0x93, 0x33, 0x3a, 0xa8, 0x2c, 0xe3, 0x97, 0xee, 0xac, 0xd4, 0x88, 0xdc, 0x15}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x4b\xfb\x40\x10\xc5\xef\xfb\x29\x1e\x39\xfc\xff\x09\x48\x7a\x11\x0f\xc5\x5a\x4a\x6b\xa1\x97\x52\xb4\x9e\xc4\xc3\x66\x33\x49\x17\x37\xbb\xcb\xee\x04\x95\xd2\xef\x2e\x35\x26\xd1\xe2\x9e\x66\x87\x37\xef\xcd\x6f\x26\x93\x09\x1e\x55\xd0\x9e\xc1\x0e\x35\x31\xb6\xeb\x3d\x36\xab\x08\x6d\x21\x2d\xa4\x52\xae\xb5\xfc\x3f\x42\x39\x63\x48\xb1\x76\x56\x08\xdd\x78\x17\x18\x5b\x67\xd7\xad\xad\x75\x61\x68\xef\x5e\xc9\xa2\x0a\xae\x41\x72\xd9\x4e\x7a\xfd\xfd\xbb\x6c\xbc\xa1\x73\x42\xa7\x1c\x1b\x89\x10\x52\x29\x8a\x31\x95\xc6\x64\xa8\x5a\x8b\x46\x6a\x9b\xca\xb2\x0c\x14\xe3\x14\x8b\xae\xb8\xfa\xb1\xc7\xae\x2d\x8c\x56\x3b\xc9\x87\x29\xc6\x3a\x9b\xe2\xf9\x69\x63\xf9\xe6\xfa\x05\x47\x01\x00\x86\xb8\xe7\xc0\xec\xcc\xb8\xe8\x3e\xbd\x79\x26\x06\xd9\x68\xfe\x40\x15\x66\xfd\x58\xae\xa4\x97\x85\x36\x9a\x35\xc5\xbc\x70\x21\xb8\xb7\xdb\x7f\xc7\x4b\xd0\x7c\x39\x8c\x9f\xee\xd2\x2f\xd3\xfe\xfd\xb5\xf5\x20\xc8\x30\x9f\xc3\x4b\xab\x55\x9a\x2c\x5d\x6b\x4a\x58\xc7\xe8\x62\x30\x44\x7f\x74\x47\x1b\x9d\x20\x19\xd1\x93\xd2\x95\xa6\x12\x5e\xf2\x21\xf9\x46\x09\xc4\x6d\xb0\xbf\x69\xf2\x9a\x78\xb3\x8a\x69\x26\x4e\xe2\x33\x00\x00\xff\xff\x05\xde\x4f\xb0\xf6\x01\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x34, 0x4, 0xb3, 0xc9, 0xc2, 0x99, 0x53, 0x45, 0x50, 0x54, 0x1e, 0x13, 0xa9, 0x6d, 0x48, 0x2a, 0xf5, 0xfb, 0x77, 0x68, 0xce, 0xa7, 0xde, 0x9d, 0x5b, 0x76, 0xfa, 0xac, 0xa1, 0xdc, 0x6d, 0x48}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcf\x6e\xc2\x30\x0c\xc6\xef\x7d\x0a\xaf\x87\xa9\xb9\xe4\x01\x10\x7f\x84\x60\x48\x1c\x86\x26\x54\xed\xee\xa6\xa6\x44\x4b\x93\x2a\x71\x61\x08\xf1\xee\x53\x69\x29\x94\x4d\x9a\x4f\xad\xf5\xb3\xbf\xef\x8b\x75\x59\x39\xcf\xb0\x71\x76\x55\xdb\x42\x67\x86\x52\xf7\x45\x16\x76\xde\x95\x10\x3f\xb7\xe3\xa8\xe3\xdf\x89\x31\x47\xc6\x4f\x4d\xc7\xd0\xc1\x83\x5e\x4f\xbe\x7d\x63\x59\x19\xda\xac\xd2\x0e\xbb\x37\xe2\x28\x42\xa5\x28\x84\x04\x8d\x11\xb0\xab\x2d\x94\xa8\x6d\x82\x79\xee\x29\x84\x11\xcc\xdb\x0f\x31\x82\xb5\x65\x38\x47\x00\x00\x86\x18\x50\x29\x57\x5b\x86\x09\x14\xc4\xf3\xf6\xe7\x36\x25\xa2\x1e\x53\xce\x18\x52\xac\x9d\x5d\x22\x23\x4c\x1e\xbc\x48\x4f\xc1\x99\x03\x35\x5e\x93\xf4\x54\xd1\x78\xe0\x5e\x6e\x56\xe9\x62\x30\x3d\x4d\x84\x00\x0c\x2f\xf0\x0f\x37\xbb\xaa\x37\x35\x9b\x41\x85\x56\xab\x24\x6e\xd0\x6d\xab\xe7\x21\x77\x14\xc0\x3a\x86\xce\x01\xfc\x5a\x01\x07\x4d\xc7\xf8\xcf\x1c\x5b\xda\xc1\xe4\x16\x5f\x2a\xac\x30\xd3\x46\xb3\xa6\x20\x33\xe7\xbd\x3b\x8e\x5f\xcf\xcf\x37\x93\xf7\xed\x97\x69\xd2\xdb\x6b\x6a\xf8\x40\xb2\xaa\x33\xa3\xd5\x07\xf2\xbe\xa7\xc4\x43\x8c\x85\xab\x4d\x7e\xb5\xde\x6a\x41\xaf\x7f\x6a\x4f\xdb\xce\x3f\x6c\xbd\x85\xf0\xc4\xb5\xb7\xc3\x1c\xb2\x20\x5e\x2f\x43\x22\xa4\x21\x5b\xf0\x3e\xba\x44\x3f\x01\x00\x00\xff\xff\x7d\x73\x90\x46\x8c\x02\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x63, 0x3, 0x48, 0x55, 0xbc, 0xfc, 0x14, 0x7e, 0x67, 0x8e, 0xb2, 0xfe, 0xe3, 0xeb, 0x94, 0x79, 0xd2, 0x11, 0xd7, 0x2d, 0xcf, 0xf3, 0x28, 0xa5, 0xf1, 0x99, 0xb8, 0xb3, 0x7a, 0x1, 0x4e}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x50\xcd\x6a\xf3\x30\x10\xbc\xeb\x29\x26\x3e\x7c\xc8\xf0\xe1\x07\x08\x71\x42\x48\xe9\xad\xa5\xb4\xa1\xf7\x8d\xb4\x49\x05\xb2\x14\xa4\x75\x42\x29\x79\xf7\xa2\xd8\xcd\x0f\x3d\x74\x0f\xc6\x1a\xcd\xce\x8c\xc6\x75\xfb\x98\x04\x4f\x2c\x64\x49\xe8\xdd\xf1\x31\x63\x9b\x62\x87\xea\x0e\xab\xd4\xc8\x2c\xa7\x57\xce\xd1\x1f\x38\x8d\xc4\x5b\xa8\x52\x8a\x8c\xe1\x9c\x35\x79\x5f\x63\xdb\x07\x74\xe4\x82\x26\x6b\xd3\x14\x4b\x6b\x13\xe7\xfc\x1f\x81\x3a\x9e\xe2\x4d\x92\x0b\xbb\xba\xfc\xc4\x44\x3b\x7e\x21\xf9\x58\xe0\x4b\x01\x80\x67\x81\xa0\xc5\xfa\x73\xcf\xb3\xbb\x28\xcd\xf3\xe3\x7a\x15\xbd\x67\x23\x2e\x86\x07\x12\x9a\xeb\xfa\xb2\xb3\x89\x29\xc5\x23\xdb\x55\x0c\x92\xc8\x14\x89\x1d\xcb\xd2\x98\xd8\x07\x39\xc7\xa8\x1b\x33\xde\xe5\x66\x60\xcf\xfe\xdd\x3e\x61\xae\x87\x74\xe5\x3b\xe8\x96\x59\x2c\xb0\xa7\xe0\x8c\xae\x7e\xb6\x61\x62\xef\x2d\x42\x14\x6c\xf8\xe2\x5b\xd5\xea\x92\xe5\xe0\xf8\x88\xf6\x57\xa4\x26\x0d\x4e\xc5\x54\xcb\x60\xe1\xb6\x23\xbb\x45\x70\x7e\xec\xa0\x4c\x62\xe9\x53\x28\xe0\x19\x3a\x5d\xd5\x8d\x45\x7b\x5e\x9a\x80\xf2\x04\x7f\x74\xa4\x6e\xc4\x8c\x6d\xf2\xb5\x71\x75\x52\xdf\x01\x00\x00\xff\xff\x1c\xb3\xdf\xba\x06\x02\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x10, 0x8f, 0x22, 0x60, 0x1, 0xbf, 0x20, 0xfc, 0xa6, 0x24, 0x47, 0xb7, 0x59, 0x12, 0x10, 0x5, 0xd7, 0xf3, 0xeb, 0xdc, 0xcf, 0xc2, 0xfc, 0xce, 0xc7, 0xf4, 0x80, 0x1d, 0xff, 0xd7, 0xad, 0xf}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x4d\x6f\xdb\x38\x13\xbe\xfb\x57\x4c\x72\x78\x61\x01\xef\x2a\x7b\x58\xec\xc1\xa8\x1a\x74\xdb\x64\x51\x20\x35\x8a\xc4\xdd\x4b\xd1\x03\x2d\x8d\x1c\x22\x32\xe5\x25\xe9\xa4\x46\x91\xff\xbe\x20\x29\x89\xa4\x48\x4a\x4e\x2e\x96\x66\x9e\xf9\xa0\x38\xcf\x90\x93\xab\xab\x2b\xd8\x3c\x52\x01\xa2\xe4\xf4\x20\x61\x87\x52\x00\x69\x1a\x90\x8f\x08\xcf\x14\x5f\x7e\xdb\x12\x81\x15\xec\x51\x92\x8a\x48\x02\x44\x88\xb6\xa4\x44\x62\x05\x2f\x54\x3e\x6a\x9c\x38\x60\x49\x6b\x8a\x15\xac\x6f\x37\x0b\xe5\x92\xb0\x0a\x38\xca\x23\x67\x02\xa8\x04\x22\x80\x80\xa0\x6c\xd7\x20\x08\xc9\x8f\xa5\x5c\x2c\xe8\xfe\xd0\x72\x09\x37\x3f\xc9\xfe\xd0\xe0\xfa\x76\x03\x35\x6f\xf7\x70\x69\x05\x97\x3d\xe6\x4b\x17\xfc\x1f\x8a\x2f\xa2\x83\x79\xb2\xcb\xc5\x82\x94\x25\x0a\xb1\x24\x4d\x93\x75\x21\x54\x32\xf0\x6b\x01\x00\xe0\x2a\x1b\x94\xc0\xc8\x1e\x57\xf0\x20\x39\x65\xbb\x28\xa0\x42\xf3\x3d\x68\xcb\x26\x71\xf2\xf1\xb8\xdf\x32\x42\x9b\x49\x54\xfb\xc2\x90\xaf\xe0\x43\x55\x71\x14\x22\xee\xe8\x74\x98\xce\x88\xb7\x27\xd2\x48\x8a\x62\x05\xdf\xbd\xb5\xe7\xf7\x5a\x73\xfa\x11\x35\xc3\x9f\x12\x39\x23\xcd\xb7\xfb\xbb\x49\xf7\x02\x39\x25\xcd\xfa\xb8\xdf\xaa\x4c\xbf\x7d\x66\xf2\xcf\x3f\xa2\xc0\xb2\x6d\x1a\x2c\xd5\x87\xf9\x7a\xdc\x36\xb4\xfc\x4a\xe4\xe3\x0a\xec\xf3\x8c\xd1\x83\x6c\x39\xd9\xa1\xb1\x72\x5e\xe6\x62\xf1\xf6\x99\x56\xc8\xbb\x68\x9c\x3e\x13\x79\x96\x9d\xce\x6b\x72\xe5\x63\xf0\x1d\x65\x4f\x58\x6d\xe6\xf6\x23\xcc\xed\xcd\x86\xeb\xb9\x2a\xb4\xd0\x4f\x67\xd6\xa3\xb5\xb8\x39\x73\xe3\x9d\xad\xf9\xf7\x48\x38\x7e\xde\x93\xdd\xb9\x59\xfd\x45\x18\x43\xfe\x16\x8b\x07\xd5\x3b\x1a\xb1\x82\x5f\x06\xde\x9b\xbd\xc6\x8b\xb7\xa2\x66\xc5\x7e\xc1\xdf\x18\x71\x9c\x47\x9c\x50\x29\xc6\x16\x1b\x2d\x8d\x1a\xec\xb1\xa2\x24\x30\xf8\xa2\xa5\xd7\x51\x8b\x86\x96\xc8\x04\x8e\x4d\xee\x8c\xf8\x7a\xa1\x8d\x28\xa3\x72\xa9\x9f\xd4\x9f\xdb\x6f\xfe\x3f\x48\x23\x4d\xc6\x2a\x83\xce\x62\x55\x7e\x3b\xb1\x72\x56\x4b\xb7\xfa\xac\x62\xbe\x77\x58\x6c\xa4\x61\x58\x65\xac\x4b\x58\xed\x5c\x6b\x88\x21\x53\xfd\x20\xea\x35\xd5\x04\xd2\x29\x84\x4b\x98\xa7\xfb\x54\xe8\xf3\xd0\xeb\xe8\x76\x4f\xb2\x39\x06\x8b\x50\x38\xfa\x09\x43\xde\xc6\x60\x11\xb2\x46\xbd\xa5\x18\xea\x94\xc8\x24\x2d\x9d\x12\x9e\xe0\xa2\x45\x75\x04\x8c\xf2\xcf\xa2\x7a\xd2\x25\x38\xa7\x20\x59\x77\xd8\x9b\x42\x6d\xea\x5c\xb1\x0e\x0a\x4d\x3e\x5f\xe1\x10\x0f\x0a\x97\x86\x3e\x6c\xa0\x20\x14\x96\x8e\x3e\x44\x53\x11\x0a\x43\xc9\x91\xf5\xe9\xa0\xa3\x1b\x52\xfa\xba\x81\x90\x50\x58\x72\xfa\x10\x87\x87\x50\xb8\xac\xf4\x61\x2e\x23\xa1\xf0\x08\xea\x03\x63\xe4\x84\x22\xca\xd9\x94\xa1\x43\x4f\xcf\x72\x7c\x8c\xc7\x62\x3a\xd4\xf5\xa3\x3a\x8a\xe9\x84\x23\xc9\x4e\x1b\x58\xae\x46\x4c\xad\x72\x2e\xe5\x94\x9b\x40\x9d\x72\xb4\x36\x65\xe8\x0b\x52\xe0\x4f\x5e\x69\x46\xe5\x29\xd3\x1b\xaf\x62\xa2\xf2\xe4\xce\xda\x16\xe2\xef\xac\x95\xa7\x4c\x9d\xb6\xe2\x99\x3a\xf2\x64\x54\xd3\x6a\xfc\x88\x46\x36\xe2\x82\xe9\x2c\x8a\x07\xce\xd1\x6f\x99\xa6\x3b\x8a\x22\xa9\x3d\xe6\x07\xa5\x69\x2f\x85\xf9\xf1\x55\x5d\x4f\x29\xba\x5f\xad\x7c\x5d\xbc\xfa\xb3\x44\x7d\x64\xb0\x27\x94\x2d\x89\x39\x6e\xed\xb9\x0b\xb4\xea\xcf\xc0\x6c\xe5\x0c\x1b\xea\x8e\x40\xca\xb2\x3d\x32\x09\x85\x1a\xa8\x3e\x98\x97\xde\x43\xb6\x18\x60\xce\xfe\xaa\xd9\xaa\x70\xa6\xa1\x9c\xa3\x68\x9b\x67\x54\x8d\x6e\xa9\xca\xeb\x9d\xdf\xfa\xd6\xb7\x9b\x8f\x9e\xf5\xfb\x65\x96\x01\x11\x17\x30\x83\xbb\x1e\x3e\xc2\xf5\x35\x1c\x08\xa3\xe5\xf2\x52\x41\xef\x4d\x3c\x0e\x55\x8b\x02\x58\x2b\xa1\xcb\x00\x02\x17\x7a\x30\xbc\xcc\xb4\xa3\xc8\x5a\xa0\xe8\xd7\x9f\x97\xe4\x40\xb6\xb4\xa1\xaa\xbf\xe5\xdb\x96\xf3\xf6\xe5\xdd\xff\x9c\x45\x5a\xbf\xef\xed\x6d\x09\xfc\xc3\x92\x48\x92\x1f\xc2\xe6\x94\x39\xf9\x7f\x6c\x8f\x4d\xa5\x73\x36\x31\x80\x00\xc7\x1a\x39\xb2\x12\x41\xb6\x7a\x48\xb5\x1e\x2f\x9d\x1d\x60\xb5\xf4\xea\xaf\x4b\x72\x7d\xbb\x59\xd2\xaa\xc3\x5d\x5d\xc1\xdf\x7a\xd6\x43\xd8\x12\x41\x4b\xa8\xa8\x38\x34\xe4\x04\x94\xd5\x2d\xdf\x13\xbd\xe6\xba\xe5\x20\xd5\x20\xad\x46\xe0\xde\x7b\x0f\x2c\x46\x9b\xb2\x43\xf9\xc9\xa8\x96\xac\x96\xd9\x45\x10\xc7\x1c\x0a\xb1\x08\x08\x3b\xfa\x8c\xcc\x0b\xd3\xa1\x95\xef\x58\xa8\xfb\xfe\x84\x71\x83\x8d\x86\xc3\x98\x9d\xd3\x38\xc6\x96\xce\xf6\xa4\x97\xe8\xd7\x8d\xb7\x5e\xe7\xf3\x5b\x48\x2a\xff\xa0\xfe\xc6\xd9\xb0\x5a\x76\x97\x8f\x94\x8b\x4e\x2d\x46\xe1\xdd\xe3\x32\x65\xfa\xa0\x31\xe3\x90\xfe\x1d\xdc\x9c\xf3\xe6\x36\x70\x91\x77\x3c\xf7\x56\xb9\x19\x6e\x03\xca\xa7\x7a\x5b\x46\xfb\x40\xf2\xfa\x05\x05\xfc\x32\x53\x92\xaa\x83\x27\x54\xb5\x11\x6e\x43\x2e\x8c\x7d\xfe\x84\x27\xe1\xdc\x87\x82\x00\xdf\x9f\xf0\xf4\xc3\x3f\x61\x7c\x0f\x1a\x70\x91\x1f\x79\xd3\xf5\xc5\x21\xd9\xa1\xdd\x06\x9f\xca\x5c\xed\xc6\x9f\xaa\xeb\xc0\x01\xda\xdc\xf1\x34\x7a\xc0\xf6\x2d\x39\x00\x77\x37\x3d\x83\xd6\x70\xf3\xef\x25\xc5\x83\xf1\x9c\xd5\xb1\x4e\xdf\xff\x12\xd3\x56\x0f\x71\x84\xd1\xd1\xab\xc7\x0d\xa2\xfc\xc8\xe9\x32\x0b\x66\x31\xfd\x13\x99\xc4\xba\x87\x9c\x56\xc8\x24\xad\xa9\x0b\x72\xa6\x32\x87\xc0\x3e\x61\xb3\xc4\x60\xe6\xbc\xa8\x2d\x4a\x4d\x68\xe3\xfa\xce\x99\x7e\x9c\x1b\xd9\x02\x56\x3a\xfd\x77\x76\x88\x0b\x8d\xc5\x5b\xc6\xba\x48\x6c\x47\x3f\x35\xe9\xa5\xb2\xb6\xc2\xe8\x36\x4c\x0d\x84\x29\x97\x16\x33\xe7\x32\x32\x37\xa6\x57\x78\xb6\x5b\x33\x60\x86\xdc\xf5\x2b\x3e\x31\x70\x86\x66\x51\x16\x24\xe6\xd0\xd0\x3a\x59\x8b\x89\x11\x35\xd2\x72\xac\x3a\xaf\x69\x83\x63\x92\x25\x86\xd8\xd0\xd1\xd6\xaa\x67\x1c\x0d\x7d\x36\x10\x45\xe6\x5c\xff\x7c\xc9\xd5\xa1\x7c\x47\x85\xfc\xfe\xfb\x8f\x70\xd8\x95\xf1\xf1\xd6\xfc\x84\xf3\xac\x7b\xf7\xcc\x16\xaf\x8b\xff\x02\x00\x00\xff\xff\xc7\x90\x5a\xb5\x90\x17\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x46, 0xb, 0xf1, 0x8c, 0x27, 0xe7, 0xc, 0xa9, 0x53, 0x7b, 0xc1, 0xd2, 0x9d, 0x77, 0xa5, 0x6c, 0xda, 0x8b, 0x80, 0x5c, 0x48, 0xc8, 0xba, 0xcc, 0x65, 0x3e, 0x93, 0x9b, 0xaf, 0x6d, 0xd5, 0xd4}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x8c\x73\x58\xd8\x40\xa0\xd3\x62\x0f\x42\xd5\xa0\xdb\x26\x40\x81\xae\x51\x24\xe9\x5e\x8a\x1e\x68\x69\xec\x0c\x42\x53\x5e\x92\x72\x6a\x04\xfe\xef\x0b\xea\x8b\xa4\x45\x4a\x76\x4e\xe6\xcc\x9b\x0f\x8a\xef\x91\x13\xda\xed\x4b\xa9\xe1\x5f\xc2\xb7\x47\x54\x25\x3f\xa0\x84\x8d\x2c\x77\x70\xe3\x9a\x6e\x66\x2d\xee\x1f\xd4\xac\x60\x9a\x19\xa7\x6a\x81\x9e\xad\x47\xde\xff\x66\xbb\x3d\xc7\xd5\xc3\x73\x0b\xb3\x86\x9b\xd9\x8c\xe5\x39\x2a\xb5\x60\x9c\x2f\x41\x69\x59\xe5\x1a\x56\x0f\xcf\x26\x03\xbc\xcf\x00\x00\x5c\x00\x47\x0d\x54\xa4\xf0\xe3\xab\xd0\x7f\xfd\x19\x74\x57\xd5\x04\x40\xb0\x1d\xa6\xf0\xa4\x25\x89\x6d\x10\x50\xa0\xca\x25\xed\x35\x95\x62\x14\xa7\x5f\xaa\xdd\x5a\x30\xe2\xa3\x28\x59\x1e\x19\xd7\x84\x2a\x85\x9f\xde\xf7\x49\x1e\x6b\xcf\xf1\x57\x30\x0c\x7f\x6b\x94\x82\xf1\x1f\x8f\xdf\x46\xd3\xe7\x25\xe7\x98\x9b\x5e\xbf\x57\x6b\x4e\xf9\x77\xa6\x5f\x52\xb0\xbf\x27\x82\x9e\x74\x29\xd9\x16\x9b\x28\x67\x31\x55\x4b\x96\x07\x2a\x50\xb6\xd5\x24\x1d\x98\xbe\x28\xae\xee\xeb\xaa\x0d\x7d\x23\xf1\x8a\xc5\xf3\x71\x3f\x7e\x68\xc3\xde\xae\x0e\x5c\x4d\x11\xc3\x42\xbf\x5c\x48\x11\x1b\x71\x7f\xf5\x79\x3e\xfd\x57\x31\x89\x5f\x77\x6c\x7b\x69\x57\x7f\x33\x21\x50\x5e\x13\xf1\x54\xe6\xc4\xb8\x4a\xe1\xbd\x81\x77\x61\xa7\x30\xe1\x25\x23\xad\x52\x5f\xfa\xc9\x73\x6d\x9d\xd5\x11\x24\x48\x2f\xea\x5f\xf5\xaa\x17\xe2\x6d\x6f\x73\xe5\x69\xad\xae\x26\xad\x35\x20\x44\xeb\x1c\xa8\xcf\xba\xa6\x25\x67\xb1\x01\x9d\x59\xe7\x94\xb8\x42\xc8\x98\xa2\x82\x59\x63\x32\x8a\xb7\x30\xdd\xe4\x90\xf7\x63\xa5\x2f\x43\xaf\x82\xe7\x33\xaa\x87\x10\x2c\x20\x82\xe0\x27\x1c\x32\x3f\x04\x0b\xd0\x3d\x98\x2d\xc6\x71\x87\x4b\x63\xc4\x36\x80\x65\xfb\x16\x99\x3f\x85\x7c\x93\x50\x01\x19\x50\xe1\x1b\x0d\xb7\x21\xab\x29\xee\x3b\x0c\xbd\x21\xab\x59\xee\x3b\x1c\x86\x43\xe6\xf2\xdd\x87\xf5\x5c\x87\xcc\xf2\xde\x87\xf4\x9c\x87\xcc\xf2\xdf\x87\x38\x54\x87\xcc\x25\xbe\x0f\x0b\x91\x1e\xb2\xa0\x16\x62\x81\x0e\xed\xbd\xc8\xf3\x07\x26\x54\xd3\x91\x84\x5f\xd5\x71\x8c\x37\x1c\x68\x76\x3c\xc0\x6a\x20\x10\x6a\x9d\x53\x2d\xc7\xd2\x0c\xdc\xb1\x44\xab\x86\x26\xbe\x21\x06\xfe\xe2\x51\x27\x68\x8f\x85\xde\x7b\x44\x08\xda\xa3\x27\x6b\xa5\xe9\x9f\xac\xb5\xc7\x42\x1d\xb9\x7a\xa1\x8e\x3d\x5a\xb5\x91\xb0\x5f\xb1\xb1\x9d\x09\xa5\x96\xac\x51\x89\xd5\xee\x69\x76\xf2\xa7\xcc\x4d\x25\x60\xc7\x48\x2c\x58\x51\x48\x54\x2a\x85\x4f\xcd\x8f\x5b\xe7\xc5\x5a\xa6\x67\x63\xa8\x79\x00\x59\x9e\x97\x95\xd0\x90\xc1\x16\xf5\xa7\x66\xd1\x65\x59\xce\x7a\x98\x73\x18\x4c\x33\xc8\x9c\x09\x38\x91\xcd\x1c\x6d\x12\x2f\x0c\x17\x3e\xf8\x77\xce\xea\xe1\xf9\xb3\x17\xfd\x71\xb1\x5c\x02\x53\x73\x98\xc0\xdd\xf5\x1f\xe2\xee\x0e\xf6\x4c\x50\xbe\xf0\xe6\x76\x28\x4a\x54\x20\x4a\x0d\x6d\x07\x30\x48\x01\x07\xc2\xb7\x9b\xe0\x3e\x20\xeb\xf6\x9e\xe4\x6c\xcf\xd6\xc4\xc9\xdc\x2f\xc9\xba\x94\xb2\x7c\xfb\xf0\xc7\xbb\x5b\x2a\xe9\x7e\xd8\xf4\xa7\x8f\x76\x2a\xf0\x6f\x67\x53\x38\xd9\x0f\x6f\x94\xa5\xb3\x8f\xcf\x65\xc5\x8b\xba\xf7\xa6\x1e\x30\x90\xb8\x41\x89\x22\x47\xd0\x25\xe8\x17\x74\x32\xba\x3b\x38\xb8\x5f\xc0\x65\x4f\xdb\xb9\xdb\xf6\xc2\x1c\x3e\x15\xa3\x85\x65\x97\xeb\x8d\xf4\x0b\x6c\xe9\x80\x02\xa8\x70\x2b\x8a\x8d\xae\x49\x93\x9d\x1d\xd8\x16\x75\xcb\xa7\xb6\xce\xad\xdf\x5c\xea\x2d\x83\x87\x10\x7d\xc8\x20\x83\xf7\x66\x62\xdb\x94\x12\x5e\xf1\x08\x24\xba\x46\xdc\x1b\x83\xd4\x9e\xb3\xe3\x3c\x51\x4d\xa2\xe4\x15\x8f\xca\x79\xd8\x06\x95\x7e\xbe\xe2\xf1\x97\x79\xb7\x26\x53\xd5\xc8\x79\x52\x49\xde\x4a\xae\xe9\x5f\xa2\xae\xa4\xe8\x84\xe4\x0f\x86\x5d\x52\x2a\xce\x87\xc3\xce\x63\x56\xe7\x23\x62\xe7\x2b\xba\x06\x8c\x39\x32\x31\x0e\xb0\x8e\x37\x38\x47\x0e\x02\x7a\x5f\x52\x49\x5a\x2c\x83\x13\x66\x17\xd4\x9b\xe6\xe6\xac\x1f\xbb\x95\x1b\xe5\xcd\x9a\x5d\x9c\x63\xac\x3f\xe0\xd4\xf4\x19\x38\x0c\xa6\xd9\xdc\xd1\xd0\xe4\x54\x1a\x4b\xa1\xae\x99\x56\xa3\x7d\x38\xa8\xb1\x31\x76\x7c\x1f\xf6\xea\x48\xa8\x40\xa1\x69\x43\x28\x2f\x9b\x79\xc7\x13\x5b\xe4\x54\xe2\xc0\x80\x3c\xb5\xe7\x8b\x93\xaf\x3c\x32\x07\x74\xe5\xd3\x3a\x32\x68\x8f\xc4\x07\xa9\x1e\x19\xc4\x47\xd2\x38\xe4\x8c\x71\xd3\x1b\xd6\xc7\x6e\x0a\x8b\x4b\x36\xc4\xf1\x5c\x52\x91\xb9\x7e\x24\xe3\xda\xe2\x26\x32\xf6\x37\xe7\xc0\x34\xfc\x1f\xa0\x2b\xd8\xac\xe7\x0d\x60\x39\x3b\xcd\xfe\x0f\x00\x00\xff\xff\xf2\x0c\x0a\x5d\x20\x13\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4, 0xf2, 0x86, 0x9f, 0xb7, 0x2b, 0x93, 0xc5, 0xd6, 0x6c, 0x15, 0x37, 0xa5, 0xbe, 0x3b, 0xf8, 0x77, 0x8, 0xaa, 0x83, 0x8e, 0x6e, 0x1f, 0x93, 0xf4, 0xa1, 0xac, 0x40, 0x6a, 0x2, 0x77, 0x7d}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x53\x4d\x6f\x9c\x40\x0c\xbd\xf3\x2b\x5e\x39\xb4\x70\x28\x7b\xa9\x7a\x40\xf9\x68\x9b\xed\x4a\x7b\xe8\xaa\x8a\x68\x7a\x9e\x65\xcc\x32\xed\x64\x06\xcd\x98\x90\xa8\xca\x7f\xaf\x66\x81\x05\xb6\x51\x0e\xf5\x01\x90\xb1\x9f\xfd\x9e\xed\xd5\x6a\x85\xa2\x56\x1e\xec\x84\xf1\xa2\x64\x65\x0d\x3a\xc5\xb5\x74\xa2\xf3\x10\x06\xbb\x4d\x81\xca\xd9\x7b\x70\x4d\xf0\xea\x60\xc8\x79\x94\x56\x6b\xea\x83\x85\x91\x90\xe4\xd9\xd9\x27\x0f\xc5\x51\xa4\xee\x1b\xeb\x18\x3b\x6b\x36\xad\x39\xa8\xbd\xa6\xc2\xfe\x26\xd3\x83\xc4\xe7\xee\x78\x8c\xff\x46\x2c\xa4\x60\x71\xa7\xa8\xf3\x43\xf0\xc2\x77\x8a\xfc\xfa\x28\xee\x1b\x4d\xa7\xc6\xe2\xc9\x11\x47\xd1\x8c\x48\xa2\x64\x8e\x1f\x5b\xc3\x1f\x3f\xa4\xf8\x13\x45\x00\x10\x08\xdf\x52\x45\x8e\x4c\x49\xe0\x5a\x30\x3a\xa5\x35\xf6\x84\xd6\x93\x44\x65\xdd\x91\xa9\xed\x0c\xb9\x77\x73\xa6\xc7\x74\x4d\x3c\x73\xdd\x52\x95\x43\xb4\x5c\x27\xe7\xb4\xb2\x9f\x83\x86\x62\xaf\x29\xc5\xdb\xa9\xc5\xec\x66\x42\x3c\x42\x36\x8e\x1a\xe1\x28\xe9\xb5\x1d\xf0\xbe\x58\xe7\x6c\x77\x27\x74\x1b\xb2\x3f\x97\xa5\x6d\x0d\x07\x12\x18\x6c\xd9\xc8\x5a\xb0\xc8\x97\x12\x66\xbb\x4d\x71\xb3\x08\xc0\xe5\x4c\xba\xec\x40\xbc\xfc\x9d\x98\x8a\x8b\xa7\x86\x72\x84\xe7\xc5\xa7\x59\xec\x6e\x53\x5c\x25\x69\x7a\x2a\x1e\xec\xfa\x1a\x8d\x30\xaa\x4c\x66\xf2\x43\x2a\x09\x63\x19\x8e\xbc\xd5\x0f\x84\x7f\x7b\x78\x50\xd4\xc5\x13\xd2\x6a\x85\xfd\x91\x2a\x04\xdc\x34\x16\xfb\xda\x0c\x82\x79\xd2\x55\xb6\x18\x04\x2e\x87\xed\xcc\x3c\x5b\x27\x0e\x94\xf5\xc0\x17\xff\x3f\x9f\xab\x64\xc1\x38\x58\x58\xb8\xfc\x4c\xf8\xb1\xe0\x77\xc1\xf5\x22\x21\x9d\x89\x34\x8c\x10\xd2\x92\x3f\x4a\x14\x92\x28\x1c\x98\xdd\xff\xa2\x92\x21\xb8\xbf\xb0\x86\x4a\x55\x29\x92\x68\x04\xd7\x71\xda\xef\xc8\x73\xff\xa2\x47\x2a\x5b\xa6\x71\x97\x07\x01\xc7\x73\x3d\xe6\x2f\xce\xf5\x15\x01\xc3\xfe\x98\x8a\x71\xf1\xfe\x05\x2d\xb3\x11\x32\x19\x3f\xb6\xeb\x1c\x4a\xa6\x53\xdd\xe1\xe4\x03\xc6\xbc\xc3\xc6\x7a\x9e\x6d\xe9\x9b\x17\xb0\x0f\xc4\xdb\xb5\x4f\xd2\xac\xb4\x86\x85\x32\x3e\x51\x32\xcd\x11\x17\x43\xf7\xa1\xe4\x99\x14\xdb\x35\x7c\x6d\x5b\x2d\x51\x8b\x07\xc2\x9e\xc8\x40\x92\x26\x26\x19\x0f\xd5\x9f\xa3\xbf\x01\x00\x00\xff\xff\xe4\xba\x35\x8c\xcb\x04\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0x96, 0xc8, 0xed, 0x7e, 0x57, 0x59, 0xb4, 0xf6, 0xa0, 0x4, 0x9, 0x8e, 0xe2, 0xbe, 0x33, 0x72, 0xcb, 0x80, 0xf0, 0x20, 0x74, 0xf6, 0x7, 0xd3, 0x92, 0x16, 0x64, 0x6d, 0xa6, 0x92, 0x3e}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x56\xc1\x6e\xe3\x36\x10\xbd\xeb\x2b\xa6\x3e\x78\x65\x34\x6b\xb7\x40\xd1\x83\x10\x27\x48\xb2\x0d\xd0\xc3\x06\x8b\xac\xbb\x97\x20\x87\xb1\x34\x96\xd8\xca\xa4\x4a\x8e\xec\x18\x46\xfe\xbd\xa0\x48\xd1\xa2\xa3\xa4\x3e\xd8\x32\xf9\x66\x86\xf3\xe6\xcd\x50\x8b\xc5\x02\x56\x95\x30\x60\x72\x2d\x1a\x86\xd6\x90\x01\xae\x08\x1e\xee\x57\x5f\x85\x64\xd2\xa0\xc9\xa8\x56\xe7\x04\xac\x60\x2b\x24\x03\x82\xa4\xbd\x05\x24\xd6\xfa\x4f\x86\x6d\x6b\x18\xd6\x04\xba\x95\xb0\x17\x5c\x75\x0e\x30\xcf\x55\x2b\x19\xb8\x42\x86\x0a\x9d\xd7\x6d\xec\xb2\x73\x60\x58\x69\x2a\x40\x48\x58\xd8\x47\x2c\x69\x11\x82\x27\x89\xd8\x36\x4a\x33\x3c\x28\x79\xdf\xca\x52\xac\x6b\x5a\xa9\x7f\x48\xc2\x46\xab\x2d\x4c\xce\x97\x27\x3d\xfe\x8f\x17\xdc\x36\x35\x3d\xdc\xaf\x3c\xf2\xb4\x10\x30\x5f\x89\xb1\x40\xc6\x1f\x82\xf6\xc6\xc3\xa2\xb5\x80\x1c\x0b\x7d\x16\x37\x61\x8d\xd2\x60\xce\x42\xc9\x34\x01\x00\xd0\x94\x8b\x46\x90\xe4\x0c\x6e\x8a\x42\x93\x31\x17\xdd\xba\xc4\x2d\x65\xf0\x9d\xb5\x90\xa5\x5b\x29\xc8\xb1\x2f\x94\x8c\x37\xb8\x6a\xb7\x6b\x89\xa2\x8e\x97\xf3\x96\x4d\x06\x4f\x7f\xdd\x8b\x97\xdf\x7f\x7b\x76\x6b\x5a\x1d\xb0\xe6\xc3\x97\x93\x2b\x0b\x71\x56\x31\xe4\x96\x24\x6d\x44\x2e\x50\x0b\xb2\x18\x7f\xb8\xe7\x64\x06\xc7\xa4\x03\xda\xaa\xd4\x2a\xc7\x1a\x76\xa8\x05\xae\x6b\x82\x8d\xd2\x5d\xa1\x84\x2c\xe3\x42\x6e\x48\x93\xcc\xa9\xb3\xab\x89\xfd\x46\x06\xd3\x13\xe1\xf3\x41\x39\x7b\xf7\x8f\xbd\xa1\x55\x95\x75\xa8\x29\x27\xb1\x23\xfd\xc9\x40\xae\xea\x9a\x3a\x22\x83\xd7\xc0\xe5\x5d\xd8\x7b\xa4\x4d\x06\xd3\xe3\xb9\x02\xe6\x27\xc4\xab\x0b\xd7\x68\x6a\x50\x53\x6a\x44\x29\xed\xc9\xb0\xe5\x2a\xbd\x55\x5a\xab\xfd\x0f\xac\x5b\x9a\xc1\xf4\xc6\x69\x35\x10\xd0\x87\x3d\x9d\xe4\x0b\x32\xc2\x72\x20\xab\xb9\xd5\x70\xbd\x23\x2b\x94\x74\x75\x68\xe8\x32\x92\x8e\xcd\xf9\x2e\xb2\xbe\x4a\x67\x33\x40\xf3\x13\xfc\x0f\xee\x3a\x9c\xc0\x7e\xae\xaf\xa1\x41\x29\xf2\x74\x62\xe1\x8f\x2e\xa6\x86\x42\x91\x01\xa9\x18\xfc\x29\xe0\x8d\x1b\xd8\x09\xda\x4f\x66\xc1\x59\x78\x58\x2c\x60\xdd\x25\x0f\x78\x2a\x5f\x5f\x85\x91\xae\x17\x12\x7c\x5b\x06\x17\x86\xea\xcd\xdc\x2b\x60\x09\x8e\xd7\xb9\x07\xcd\x9d\xf3\xcb\xd1\xfa\x5f\xa5\xb6\x77\xb2\x21\x8d\x6e\xe3\xbb\x33\xfe\x86\x5c\xcd\xde\xc9\xdf\xd7\xe8\x94\x7a\x37\x37\x00\x25\xa8\xf5\xdf\x94\x33\x20\x77\x29\x98\x86\x72\xb1\x11\x54\x40\x83\x5c\x4d\x66\xc9\x30\x73\x57\xf6\x5e\x70\x4e\x52\x9f\x0c\x34\xed\xba\x16\xb9\xcd\x7e\x50\xf2\x33\x71\x87\xc4\xc7\xb5\x08\x4b\x28\x89\xfd\x21\xd3\x80\x99\xcd\x73\x6c\x70\x2d\x6a\xc1\x82\x4c\x20\xe7\x43\xd9\x5e\xa5\x11\x05\x5d\xc7\x47\xb5\x9d\xbb\xf3\x5a\xb6\x22\xe4\x6c\x40\xd7\x9d\x6a\xeb\xa2\xe3\xa9\x74\xfd\xd3\x75\xd7\x68\xc5\xe1\x14\xdb\x0b\xe6\xd4\x39\x70\x0c\x11\xec\xd4\x99\xd7\x24\x4b\xae\x60\xb9\x1c\x1b\x38\xfd\xee\x74\xfa\x0e\x38\x1a\x3d\x7e\x3b\x83\xc9\x8d\xd6\x78\x00\x8f\x36\x55\x77\xf2\x35\x01\xfd\xdb\x62\xdd\x4d\x1e\x6f\x0e\x9a\x6a\x64\x2a\xa0\x20\x46\x51\x9b\xc9\xf0\xb0\xf4\x42\x79\xcb\x34\x6c\xe1\xc5\x02\xee\x34\x21\x93\x2b\xb8\x77\xe2\x8d\x03\x6a\x87\x1a\x9c\xb4\x96\xf0\x4b\xb4\xea\x2c\xdc\x94\x8c\xbb\xf6\xd1\xf9\x7a\x86\x25\x3c\x3d\x07\x9b\x7d\x25\x6a\xfa\x28\x57\xb8\xf2\x91\x8e\x51\xdd\xec\xa8\x59\x07\xf8\x01\xc6\xf9\x7a\xea\x4c\x9f\x3f\xb2\xbc\xeb\xb5\x76\x88\xe5\x38\x80\x9c\x09\xb2\x24\xbe\x9c\x1e\x63\x29\x3e\x7a\xb1\x8c\x09\xd1\x7e\x62\x2a\x4a\x62\xcf\x46\x6f\xf7\x2d\xa8\x33\x9d\xbd\x71\x30\xd4\xe8\xed\x20\xe7\xd0\xd6\x15\xee\x08\x7a\x57\x90\x2b\xb9\x11\x65\x6b\x5f\x10\x90\xe1\xdd\x40\xc3\x36\x87\x70\xd5\xd9\x04\xb1\x69\x48\x16\x6f\x13\x19\xad\xe7\x78\xbe\x7d\xf3\x64\xe3\x54\x5f\x8c\x1a\xe5\x2d\x67\x5d\x17\xf8\xb2\x8d\xa3\xa2\x9b\x7f\xa4\xa3\xc6\x6a\xde\xb1\x98\xbc\xff\xaf\xd7\xb2\xfb\xfd\x19\x7e\x0d\xbb\xaf\x49\xd4\x1b\x76\xf4\x86\x19\x80\xd2\xb6\x55\xa3\x8c\x60\x10\x3c\xb8\x95\xc3\x90\x3c\xbb\x96\x61\x78\xe1\x17\xd6\xc5\xe5\xe7\xe1\xcd\xd0\xfd\x3c\xdc\xaf\x62\x4e\xdd\xcb\x8f\xfd\x8e\x09\x89\x88\x18\xfc\x89\x51\x83\xf7\xa1\xf0\x78\x31\x5e\xf8\xec\xf4\x98\xbc\xe5\xe9\x83\x41\x3e\xf7\x2c\xa4\x6c\x9b\x21\x83\xcb\xcf\x21\xc3\x30\x1c\x5f\x93\xff\x02\x00\x00\xff\xff\xb6\x12\x62\xd1\x38\x0b\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0xc4, 0x17, 0x64, 0xdc, 0x7c, 0x4f, 0xdb, 0x86, 0x39, 0x53, 0x3f, 0x79, 0x4f, 0x4b, 0xd9, 0x44, 0xf9, 0x4b, 0x5e, 0x34, 0xc0, 0xc4, 0x43, 0xc5, 0x3c, 0x12, 0xdf, 0xd9, 0xa5, 0x20, 0x70}}
	return a, nil
}

var _transactionsNftForwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x8f\x9b\x30\x10\xc5\xef\x7c\x8a\x11\x87\x15\x48\x15\xdc\xd1\xfe\xd1\x36\x52\x6e\xad\x56\x69\xd4\xbb\x31\x03\x58\xf5\xda\xc8\x1e\x97\x56\xab\x7c\xf7\xca\x80\x89\xa1\x51\xb7\x5a\x5f\x12\x99\xd1\xbc\x79\xbf\x79\x16\xaf\x83\x36\x04\x5f\xb5\x3a\x3a\xd5\x89\x5a\xe2\x59\xff\x40\x05\xad\xd1\xaf\x90\xee\xaf\xd3\x24\xd4\x1f\xcf\x47\x6d\x46\x66\x1a\xa1\xba\x50\x1c\xdf\xa5\x49\x52\x96\x25\x9c\x7b\x61\x81\x0c\x53\x96\x71\x12\x5a\x81\x1b\x1a\x46\x68\x81\x7a\x8c\x9a\xa0\x01\x83\x5c\x0c\x02\x15\x01\xe9\xe9\xab\x56\x08\x9d\xf8\x89\x0a\x18\x4d\x17\x76\x40\x2e\x5a\x81\x0d\xbc\xb8\x5a\x0a\xfe\xc2\xa8\xf7\x22\x49\xd4\x3f\x53\x38\x9e\x42\xa7\xe7\xa6\x31\x68\x6d\x05\xcb\x9f\x4f\xc0\xb5\x94\x38\x15\x5e\x5b\x54\x51\xbb\x1c\xde\x92\x04\x00\xa0\x2c\xc1\x60\x8b\x06\x15\xc7\x30\xd0\x34\xee\x32\xed\x09\xad\x76\x86\xe3\x54\x2c\x91\xa0\x0d\x46\x4e\xd8\x56\xc0\x1c\xf5\xd9\x86\x47\xf1\xc5\x11\xab\x25\xe6\x70\xb7\xbd\x8f\x21\x04\xe9\xc3\x3a\x26\x8c\x08\xa3\x90\x12\x1a\xb4\xa2\x53\x8c\x10\x98\x0d\x62\x1e\xfd\x8a\x6d\x9d\x24\x26\x70\x6d\x54\xc1\x81\x0d\xac\x16\x52\xd0\xef\xfb\xbb\xb7\xfd\x62\x8b\x6b\xe5\xe5\x71\x46\x30\x18\x1c\x98\xc1\xcc\xeb\xa2\x59\x3c\x7d\xd6\xc6\xe8\xf1\x3b\x93\xce\x3b\x79\xe6\x5c\x3b\x45\x9e\x1a\x2c\xa7\x2c\xa1\x9e\x6a\xb6\xfc\x76\xab\x8e\xe0\xf9\x63\x51\xb6\x45\x4c\x10\x1e\x60\x96\x2d\x2c\x69\xc3\x3a\x2c\xe6\xa6\xf7\x1f\x04\xfb\x98\xad\x5a\xe1\xf8\xcc\x56\xdb\x1c\x17\xdf\x66\xb1\x29\x58\x71\x6d\x0e\x4f\x4f\x30\x30\x25\x78\x96\x1e\xb4\x93\x0d\x28\x4d\xef\xfa\x4c\xf3\x24\xc6\xd2\x21\xc5\x8b\xbd\xae\x63\x7e\x3e\x3e\x61\x66\x97\x5c\x60\x33\xe0\x2d\xa8\xdb\x0b\x86\x07\xaf\xb0\x6c\xe4\xd6\x33\xc8\x0b\x1e\x24\x05\xda\xa2\x43\x7a\x2f\x07\x7f\x43\xbb\xf5\x7e\xfe\x83\xd4\xce\x3a\xdf\x59\x5f\x6d\x07\x62\x97\xf9\x07\x7f\x21\x77\x84\xdb\x74\xd9\x39\xe2\xbb\xe0\xdf\x4c\x51\xc1\x7b\xa6\x3a\x5c\x41\x64\xff\xc0\x97\x2f\xc2\x97\xe4\x4f\x00\x00\x00\xff\xff\x3b\x07\xa6\x67\x12\x05\x00\x00"

func transactionsNftForwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingChange_forwarder_recipientCdc,
		"transactions/nft-forwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftForwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0x22, 0x7d, 0x1, 0xf3, 0x90, 0xde, 0xec, 0xd2, 0x6a, 0xb0, 0x4f, 0xb7, 0xe5, 0xa0, 0xa9, 0x97, 0xf6, 0x8f, 0x22, 0xbe, 0xa7, 0xf9, 0x69, 0x69, 0x4c, 0x74, 0x1, 0xcf, 0x7f, 0x60, 0x8d}}
	return a, nil
}

var _transactionsNftForwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4f\x6f\xe2\x3e\x10\xbd\xe7\x53\x8c\x38\xd0\x20\xa5\x70\x47\xfd\xb5\xea\x0f\x09\x69\x0f\x8b\xaa\x16\xf5\x3e\x24\x43\x62\x6d\xb0\xa3\xf1\x98\x2c\xaa\xf8\xee\x2b\x93\x7f\x0e\x9b\x6d\x4e\xc6\x99\xbc\xf7\xfc\xde\x33\xea\x54\x19\x16\xd8\x19\xbd\x75\x3a\x57\x87\x92\xf6\xe6\x17\x69\x38\xb2\x39\xc1\xec\x7e\x7b\x16\xb5\xf3\x3f\x49\x30\x43\xc1\x4f\x45\xb5\x6d\x87\x47\x7b\xfd\xe4\x6e\xbb\xdf\x1a\xae\x91\x33\xa5\xf3\x0e\x36\xdc\x9b\x45\xd1\x6a\xb5\x82\x7d\xa1\x2c\x08\xa3\xb6\x98\x8a\x32\x1a\x94\x85\xba\x40\x01\xd4\x80\x69\x6a\x9c\x16\xa8\x8d\x2b\x33\x60\xa7\x41\x0c\x58\x12\x50\x62\xa9\x3c\x82\xab\xfc\xc6\xb1\x81\xf4\x8c\xd6\xff\x46\xc8\xc8\xaa\x5c\xa3\x50\x06\x4c\xa9\xaa\x14\x69\x79\xb0\x70\xe3\xdb\x6d\xf7\xcb\x8d\x29\x4b\x6a\xd8\xd0\x5a\x77\xf2\x0a\xa5\xa0\x61\xd8\x8b\x48\x8d\x3e\xaa\xdc\x31\x65\x9e\xe1\xf6\x3e\x57\x67\xd2\x1e\x01\x06\x04\x0f\x1a\x05\xfa\xe3\x1e\xe4\x35\xcb\x98\xac\x5d\x43\xbb\x48\x20\xed\xbf\x7a\x73\x87\x52\xa5\x6f\x28\xc5\x1a\x86\xf5\x02\xbe\xa2\x08\x00\xa0\x62\xaa\x90\x29\xf6\xc7\x20\x5e\x03\x3a\x29\xe2\xff\x0d\xb3\xa9\x3f\xb1\x74\x94\xc0\x0f\x6b\x1d\x7d\x88\x61\xcc\x69\x83\x15\x1e\x54\xa9\xe4\xb2\x31\x5a\xd8\x93\x70\xd2\xc0\xda\x62\x78\x99\xc0\x07\x9e\xe9\xf6\xfd\x02\xe6\xaf\x8d\xb7\x9e\x12\xda\xa7\x5f\xac\x56\x90\x93\x04\x87\x84\x01\xa5\x89\x72\xe4\x56\x7b\xbe\x2e\xae\x1e\xa6\x24\x19\x86\x06\xb0\x0d\x56\xf0\x9f\x27\x68\x25\xfc\xe5\xd8\x62\x99\x76\x74\x8a\xec\x32\x27\x79\x9a\x7f\xdd\x57\x32\x08\xf1\xfa\x1c\xf7\x9c\xdd\x33\x65\xf5\x68\x68\x01\x2f\x2f\x50\xa1\x56\x69\x3c\x7b\x0f\x73\xd7\x46\xc2\xec\x6b\x25\xc5\x5d\xe4\x80\x12\xd4\xa1\x42\x29\x66\x8b\x28\x34\x2f\x65\x42\x21\x40\xd0\x54\x07\x17\x81\x18\x98\xac\x71\x9c\x12\xcc\xc1\xe2\x99\x40\x69\xb0\x4d\x88\x49\xd7\xe3\x5b\x19\xcd\xd8\xe1\x07\x1b\x36\x2e\xf4\xf7\xd8\x43\x3f\x3d\x8e\xef\xdc\xb2\x51\xb1\xa3\x3a\x54\x30\x98\xbd\xfe\x47\x36\x8b\x1e\xbf\x69\xdf\xb2\x15\xb8\xf4\x82\xe3\xa7\xc7\x9e\x31\x01\x31\xeb\x3b\xce\xb6\x91\xb7\x32\x8f\x2c\x71\xba\x6a\xfa\x08\xf4\x5b\x59\xf1\x87\x0c\x0c\x0d\xf3\x6e\x0a\x36\x91\x5a\x2b\x67\xd4\x8d\x1e\x36\x9e\x0a\x7c\x32\x95\x39\x74\x4a\x70\xe0\xbd\xf4\x77\x7c\x30\xb4\x2e\x88\xe9\xb6\x37\x60\xb7\x7f\x45\xda\xf0\x09\xcb\xf2\x02\x07\x9a\x4e\xe3\x9d\x52\x52\x67\xe2\xa6\xeb\x53\xca\x3b\x57\x95\xbf\xc8\x53\xfd\xee\x20\xae\xcf\xf1\x37\x1e\x7f\x67\x4e\x67\xcd\x94\xaa\x04\x50\xd6\x93\xb7\xa4\x35\xed\x1a\x5d\xa3\x3f\x01\x00\x00\xff\xff\x68\xb8\x5d\xc5\x25\x06\x00\x00"

func transactionsNftForwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingCreate_forwarderCdc,
		"transactions/nft-forwarding/create_forwarder.cdc",
	)
}

func transactionsNftForwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0x10, 0x83, 0x2b, 0x12, 0xd8, 0x6b, 0xb2, 0xd, 0x89, 0xca, 0x4c, 0x6e, 0xb2, 0x9b, 0xa9, 0xd3, 0x53, 0x63, 0x87, 0x39, 0x3, 0x5, 0xde, 0x8c, 0xb4, 0x5, 0xd8, 0xed, 0x40, 0x9d, 0xe0}}
	return a, nil
}

var _transactionsNftForwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x6e\xdb\x38\x10\xbd\xeb\x2b\x66\x75\x48\x24\x60\x23\x5f\x16\x7b\x30\x9c\x04\xa9\x8d\x00\x39\xd4\x2d\x52\x37\x3d\xd3\xd4\xc8\x62\x2b\x93\x02\x39\xb2\x1b\x04\xf9\xf7\x82\x12\x45\x8b\x92\x93\xa0\x3a\x09\x43\xce\xcc\x9b\xf7\x1e\x47\xec\x6b\xa5\x09\xd6\x4a\xde\x37\x72\x27\xb6\x15\x6e\xd4\x2f\x94\x50\x68\xb5\x87\x78\x1c\x8e\x23\x77\xff\x49\xe0\xf1\x11\x8d\xaa\x0e\xa8\xdd\xdd\x61\xc8\xdf\xfb\x8c\xc4\x72\x46\xcc\x1e\x1a\x77\x31\x88\xc5\x51\x34\x9b\xcd\x60\x53\x0a\x03\xa4\x99\x34\x8c\x93\x50\x12\x84\x81\x42\xe9\x2e\x54\xa0\xd6\x42\xee\x80\x49\x58\xdf\x6f\xba\x2a\x4a\x22\x30\xce\x55\x23\x09\x48\x01\x95\x08\x1a\xb9\xa8\x05\x4a\xba\x34\xf0\x88\x1c\xc5\x01\xb5\x2d\x1e\x0d\xea\x26\x11\x00\x00\x57\x92\x34\xe3\x74\x97\xe7\x1a\x8d\x99\x83\xfb\xf9\x37\x38\x5d\xb3\x3d\xce\xe1\x1b\xd9\xde\xdd\x89\xef\x30\xca\x38\x0a\x2a\x73\xcd\x8e\x0f\xab\x39\x7c\x7f\x90\xf4\xff\x7f\x51\x0a\x2f\x51\x7b\x36\x9b\x81\xc6\x02\x35\x4a\x8e\x3d\xd2\xfe\x3e\xea\x4b\x03\x5c\x55\x15\xb6\xe0\xda\xfb\x15\x92\x3f\x7f\xc4\x62\x0e\xac\xa1\x32\xf9\xe1\x22\x6c\x5b\x61\x0a\x17\x2f\x63\x61\xb2\xa5\xaf\xf2\x3a\x6d\xab\x8a\xb6\x6d\x4f\x8a\x85\x91\x63\xad\x8c\xa0\x36\x6e\x49\x25\xe5\xbb\xbb\xa3\xb6\xf9\x99\x4e\x7d\x95\xd7\x6e\xbe\x5a\x63\xcd\x34\x26\x46\xec\x24\x6a\x07\xf7\x93\xd2\x5a\x1d\x9f\x58\xd5\x58\xb4\x77\x9d\x4e\x9e\x12\x87\x6f\x87\x5d\xfb\x13\x01\x60\x6d\xd1\xe9\xdb\xe3\xea\xc5\xf0\x89\x16\xa1\x2c\x68\xe9\xe2\x70\x6d\xeb\xb8\x0e\xc9\x48\xd8\x34\xeb\x03\x26\xdb\xb6\x90\x16\x17\x43\x9b\xde\x24\xb2\xd5\x78\xa8\x78\xea\x3b\xd9\xef\xf6\x16\x6a\x26\x05\x4f\xe2\xa5\x6a\xaa\x1c\xa4\x22\xe8\x2a\x85\x4f\x60\x22\x71\x5f\x32\x4e\x03\xe4\xa7\x59\x57\x76\xd4\xeb\xe1\x28\x99\xee\xaa\xd9\xc2\xc9\xe6\xb9\xc6\x45\xf0\x52\xb2\xf5\xfd\x66\x19\xa4\xdf\x24\x69\x0a\xcc\xc0\x07\xd7\x6e\x3f\x9c\xc8\x35\x86\x49\x2a\x1c\x04\x1e\xe3\x34\x90\xcd\x8d\xcf\xa6\x33\x77\x16\xb8\x34\x4e\xb8\xc0\xd6\xf6\x33\x58\x15\xd9\xc0\xdb\x70\xed\x52\x32\x43\x4a\xb3\x1d\xf6\x22\xfd\xb5\xe5\x6f\x92\x60\x46\xfb\x59\x17\xcd\x47\x7c\xf7\x7d\xbe\x32\x2a\x83\x84\x74\x40\x8b\xf3\x12\xe4\x0a\x4d\xcb\x8e\x4d\x42\xbb\x7c\xd4\xf6\x27\x72\x02\xd6\xd9\xd6\xd4\xc8\x45\x21\x30\x87\x9a\x51\xf9\x16\x49\x75\xb3\xad\x04\x9f\x72\x75\x76\x59\x05\x44\x9d\x9e\x61\xe8\x71\x9f\x99\x66\x9c\xd5\x6c\x2b\x2a\x41\x02\x4f\x06\x7f\xe7\xc5\x9e\xa1\x69\x44\x50\x07\xf7\x5d\x7e\x26\x0f\xe1\x8c\x13\xce\x4d\xe7\x5e\x82\x5b\x1b\xf8\x1b\x79\x43\x38\x5a\x09\xbd\x39\xfc\xf3\xf7\xbb\x40\x1d\xe5\xb9\x6d\x39\xd8\x08\xb0\xb8\x9a\x38\xcc\xff\x27\xc3\x15\x7d\xfa\x0f\x45\x5b\x8d\x76\xa2\x90\xe1\x30\x6f\xe9\xd3\xff\x26\x64\xe9\x9e\xc3\xe2\x4a\x16\x14\x4c\x5b\x2b\x43\xf0\xe2\xf3\xff\x99\xe0\xdc\x21\x3d\xac\x4c\xd2\x2d\x2c\x26\xa4\x19\x00\x4e\xe7\x10\x7f\xd1\x62\x27\x24\xab\x3a\x1e\xc0\x94\x5e\x84\x92\x1d\xd0\x23\x66\xf2\x79\xaf\x34\xc6\xae\xf7\x6b\xf4\x27\x00\x00\xff\xff\xf1\xef\xc9\x48\xdf\x07\x00\x00"

func transactionsNftForwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingTransfer_nft_to_receiverCdc,
		"transactions/nft-forwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftForwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0xb4, 0x1c, 0xee, 0x7b, 0x2c, 0x0, 0xa7, 0xc9, 0x62, 0xfa, 0xf1, 0x33, 0x91, 0x20, 0xdf, 0xe4, 0x81, 0x5c, 0x97, 0x80, 0x5c, 0xdb, 0xc2, 0x86, 0x18, 0x77, 0xc3, 0x42, 0x8b, 0x11, 0x38}}
	return a, nil
}

var _transactionsNftForwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x4f\xab\xda\x40\x10\xbf\xe7\x53\xfc\xfa\x0e\xa2\x60\x93\xbb\xd4\x42\x11\x84\x1e\x2a\x8f\xd6\xf6\x3e\x26\x63\x32\x34\xee\x86\xd9\xc9\x13\x79\xf8\xdd\x4b\x34\x59\xa3\x95\x36\xa7\x75\x9c\xf9\xfd\x9b\x49\xe4\xd0\x78\x35\x6c\xbc\x5b\xb7\xae\x94\x5d\xcd\x5b\xff\x9b\x1d\xf6\xea\x0f\x78\x79\x2c\xbf\x0c\xfd\xdf\xd8\xa8\x20\xa3\x5f\xc2\xc7\xd0\x37\xdf\xd5\x62\xe7\x66\xbd\x5d\x7b\x3d\x92\x16\xe2\xca\x01\x76\x5c\x7b\x49\x92\x2c\xc3\xb6\x92\x00\x53\x72\x81\x72\x13\xef\xa0\xdc\xd4\x94\x73\x18\x01\xb0\xe2\x3b\xe7\x2c\x6f\xac\x58\x51\x43\x3b\xa9\xc5\x84\x03\x8e\x62\x15\x08\xb9\xaf\x6b\xbe\x4e\x9b\x87\x58\x40\xd3\xee\x6a\xc9\x11\xcc\x2b\x95\x0c\xda\x1b\x2b\x2a\x7a\xeb\xa4\xe4\xde\xed\xa5\x6c\x95\x8b\x8e\xbf\xeb\x1e\x33\x25\x59\x96\x25\x23\x3d\xd3\x1b\xf8\x8f\x2b\xda\x2b\x59\xb5\xc0\xe8\xc7\x1c\xda\xab\x7b\xbd\xd0\x5e\x1b\x6e\xef\x19\xde\x93\x04\x00\x1a\xe5\x86\x94\xa7\x41\x4a\xc7\xba\x00\xb5\x56\x4d\xbf\x86\xd0\x72\x8f\x16\xcd\x9d\x56\xde\x99\x76\xcc\x3a\xbf\x22\x85\xaa\xff\xd3\x4e\x29\x7e\xba\xe6\xa1\x36\xc3\xe4\x4b\x9e\xfb\xd6\x59\xc7\x86\xfe\x8b\x8f\x2c\xbb\x8f\x49\x02\xa8\x56\xa6\xe2\x84\x1e\x89\x8b\x39\x0a\x0f\xe7\xad\xea\x42\xfa\x08\xe5\x03\x1f\x76\xac\x48\xef\x16\xe1\x5d\x7d\xba\x44\xe8\xf5\x10\xba\xb8\x37\xeb\x6d\x3a\x6c\x27\xf2\xc9\x1e\x57\x93\x69\x3e\xda\x57\x5a\xb2\x7d\x9a\xbc\x3f\x1e\x57\xba\x8a\xc2\xce\x9f\xa7\x7f\x67\x39\xc3\x87\x25\x9c\xd4\x23\x63\xdd\xa7\x6c\xad\xba\x58\x3a\x27\x63\xb7\xde\x2a\xd6\xa3\x04\x9e\xa3\x1d\xc2\x82\x55\x7c\xb3\x7b\xbb\xa4\x53\x1c\x7c\xa6\x39\x8e\x3f\x53\x76\xc7\x99\x2b\x93\x31\x26\x03\x47\x17\x79\xe4\xc0\xde\xeb\x45\xc0\x6d\x0b\x71\xb6\x66\x1b\x95\x57\xd4\x60\xf9\x54\x4a\x7f\xce\xa9\x74\x27\xf3\xdf\x20\x9f\x1e\xee\xec\x9f\x5e\x07\xa7\x77\x62\xe6\x20\x5b\x3c\x39\xf1\xde\xfc\x39\x39\x27\xcb\x3f\x01\x00\x00\xff\xff\x91\x18\x3f\x0a\x4f\x04\x00\x00"

func transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
		"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftForwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0xfd, 0xa5, 0xa4, 0x56, 0xc0, 0xe2, 0x85, 0x46, 0x9e, 0x2, 0x41, 0xbe, 0xef, 0xdf, 0xd4, 0x8f, 0x90, 0xd6, 0xba, 0x66, 0xd2, 0x37, 0xc0, 0x9e, 0x91, 0x3f, 0x9, 0xb9, 0x65, 0x97, 0x2c}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\x4d\x6f\xda\x40\x10\xbd\xfb\x57\xbc\x72\x88\x6c\x89\xc0\x1d\x91\xa4\x2d\x0d\x52\x0f\x45\x51\xe3\xe6\x3e\x98\x01\xaf\xba\xec\x5a\xbb\x63\x28\x8a\xf2\xdf\xab\xb5\xc1\x5f\x21\xd9\xc3\x1e\x66\xdf\xcc\xbc\xf7\x66\x76\x3a\x9d\x22\xcd\x95\x87\x38\x32\x9e\x32\x51\xd6\x40\x79\x1c\x73\x12\x90\x01\x65\x99\x2d\x8d\xe0\x68\x4b\xbd\x81\x2b\x4d\x14\x32\xc4\xc2\xb3\x40\x89\x67\xbd\x45\x59\x84\x80\xe3\x8c\xd5\x81\xb1\x5a\xa6\x3e\x8a\xd4\xbe\xb0\x4e\xb0\xb2\x66\x59\x9a\x9d\x5a\x6b\x4e\xed\x5f\x36\xd8\x3a\xbb\xc7\x68\x18\x1e\x5d\xf0\xbf\x58\x68\x43\x42\x2f\x8a\x8f\xfe\x0c\xee\xc5\x1a\xe4\xe3\x3f\xda\x17\x9a\x57\xcb\xf4\x0c\x6b\x03\xa3\x28\xea\xaa\x79\x8d\x22\x00\x28\x1c\x17\xe4\x38\xf6\x6a\x67\xd8\xcd\x40\xa5\xe4\xf1\x77\xeb\x9c\x3d\xbe\x90\x2e\x79\x8c\x9f\xde\x97\xfc\x2c\xd6\xd1\x8e\x17\x54\xd0\x5a\x69\x25\xa7\x85\x35\xe2\xac\xd6\xec\xc6\x78\x2a\xd7\x5a\xf9\xbc\x7d\x1c\xe3\x99\x0e\x7c\xce\xff\x63\x8a\xe1\x7b\x82\x9b\x6f\xb5\x83\x09\x5e\x2b\x1a\xe1\x68\x16\x64\xa1\x64\x45\xf0\x07\x09\xcd\xfa\xca\x27\xab\x65\xba\xe8\x01\x70\xd7\x51\x3c\xd9\xb1\xf4\x9f\x63\xb3\x95\xf4\x54\xf0\x0c\xe1\x9e\x7f\xed\x60\x57\xcb\xf4\x3e\x4e\x92\xa6\x79\x38\x0f\x0f\x28\xc8\xa8\x2c\xee\xb8\x86\x8d\xda\xc0\x58\x81\x63\x6f\x75\x3d\xc8\x01\x87\x83\xe2\xe3\xa8\xad\x34\x9d\xe2\x37\x4b\xe9\x0c\x98\x9c\x3e\x41\x6d\x21\x39\x37\x2b\x43\xda\x31\x6d\x4e\xc8\xc9\x83\x3a\x7a\x9b\x7c\xb5\x45\x3d\x8c\x89\xaf\x4d\x9f\xac\xab\x71\xcc\x6f\x3a\xf4\x5b\x0a\xf7\x71\x18\xf4\x6c\xe0\xdc\x25\xf7\x89\x24\x4f\xf0\xe5\x0e\x46\xe9\x8e\xd5\xe1\xb8\x8a\x64\x13\x7a\x8b\xba\x0a\x16\x8e\x49\x18\x04\xc3\x47\xf0\xbe\x90\xd3\x35\xaa\xfd\x89\x61\x7e\xdb\x9d\x46\x56\x95\x78\x0c\xb9\x2d\xdb\xb8\x85\x7f\x30\x98\xae\xb2\x24\xe9\x91\xf2\x74\x60\x28\x09\xdf\xaa\xe3\x68\x83\x18\xb8\x16\xd0\xf1\xfc\xb6\x6d\x38\x86\xd8\x4f\x7d\xea\x35\xcb\x2e\x0e\x54\xdb\x9b\x21\x6b\xb6\x17\x5b\xeb\x2a\x02\x57\x1c\x39\x73\x68\xc0\x8a\xfd\xa4\xbc\x7c\x80\x78\xd0\xbb\xae\x5c\xb7\xbe\x6e\xe9\x82\x0a\xdc\x5d\x2d\x7a\x51\xa9\xc2\xef\xfc\x70\x35\x3e\x13\xfb\x19\xe5\xf7\x84\x17\x54\x8c\x41\xf2\xce\xbf\xa1\x86\xb7\xe8\x2d\xfa\x1f\x00\x00\xff\xff\xfb\x12\x4c\x22\x3e\x05\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x15, 0xea, 0x8b, 0xbd, 0x84, 0x31, 0xe9, 0x65, 0xc4, 0x12, 0x23, 0x45, 0xa4, 0xd8, 0xa0, 0xf0, 0x99, 0x87, 0x44, 0xb4, 0xf1, 0xe3, 0xf4, 0xc7, 0xbf, 0x2d, 0x1a, 0x6, 0x4, 0x37, 0xba, 0x6a}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xc1\x4e\xe3\x30\x10\xbd\xe7\x2b\x1e\x3d\xa0\x44\x2a\xe9\x65\xb5\x87\xaa\x05\xa1\xee\x22\x71\x58\x84\x96\x2e\xf7\x69\x32\x6d\x2c\x82\x1d\xd9\x93\x46\x08\xf1\xef\x2b\xc7\x49\xda\x64\x17\xe1\x93\x65\xbf\x79\xf3\x66\xe6\xcd\x62\xb1\xc0\xb6\x50\x0e\x62\x49\x3b\xca\x44\x19\x0d\xe5\xd0\x14\x24\x20\x0d\xca\x32\x53\x6b\x41\x63\xea\x32\x87\xad\x75\xe4\x23\xc4\xc0\xb1\x40\x89\xe3\x72\x8f\xba\xf2\x0f\x96\x33\x56\x47\xc6\xc3\xdd\xd6\xa5\x81\x73\x5f\xeb\x96\xb0\x8d\xa9\x1d\x3b\x1c\x15\x37\xce\xa3\x5f\xb4\x69\xd0\x14\x6c\xb9\x27\xf3\x2c\x05\x23\x33\x65\xc9\xa7\x28\xa5\xe1\xc4\x58\x3a\x30\x48\xe7\x1e\x9b\x59\x26\xe1\x16\xcb\xaf\x95\xbc\x9d\x45\xa4\x51\xa4\x5e\x2b\x63\x05\x0f\x46\xdf\xd5\xfa\xa0\x76\x25\x6f\xcd\x0b\x6b\xec\xad\x79\xc5\x6c\xfa\x3c\xeb\xf1\xbf\x58\x28\x27\xa1\xe7\x56\x5f\x00\x8f\xde\x66\x51\x74\xd6\xa1\x98\xf2\xdc\xb2\x73\x4b\xdc\x86\xcb\x1c\x55\xbd\x2b\x55\xf6\x48\x52\x2c\xf1\x38\xdc\xe7\x50\xf9\x12\x7f\xee\xb5\x7c\xff\x96\xe0\x3d\x8a\x00\xa0\xb2\x5c\x91\xe5\xd8\xa9\x83\x66\xbb\x04\xd5\x52\xc4\xf7\xce\xd5\xfc\x14\x4a\xdd\x50\x45\x3b\x55\x2a\x79\xdb\x18\x2d\xd6\xd7\x67\xe7\x81\xd5\x15\xa7\xcf\x39\x9e\xe8\xc8\xcf\x54\xd6\x9c\xe0\xf2\x36\x4c\xca\x67\x41\x77\x4a\x96\xb3\xee\x60\x8d\x03\x4b\x07\xeb\x2b\x48\xd2\x2c\xf0\x89\x62\x97\xee\x8c\xb5\xa6\x59\x5d\xbe\x4f\x1b\x95\x6e\x06\x9a\x8f\xeb\xf8\x54\x6b\x32\xe4\xf2\xe7\xe6\x06\x15\x69\x95\xc5\xb3\x4d\x6b\x17\x6d\x04\x81\x12\x04\xcb\x7b\xb6\xac\xb3\x76\xe0\xe3\x49\xcf\x92\x68\xa4\xd9\xb2\x33\xe5\x91\x2d\xd6\xe7\xc3\x0d\x4c\x7e\x1a\xbf\xbb\xff\xd8\x37\x57\xe5\xc9\xc5\x27\x15\xff\x20\x21\xac\x07\xba\xb4\xbb\x78\x8a\x78\xfb\x56\xf1\x6a\x34\xe2\xf4\xe1\x6e\xbb\x19\xc5\x5e\xc7\x49\x72\x01\x72\x17\xf8\x02\x78\x92\xbf\x58\x60\x13\x0c\x4a\xd0\xdc\xfc\x63\x51\x37\x92\xda\xfe\x9e\xa8\xb0\xba\x9a\xa8\x4f\x83\xdb\x7f\x8e\x71\x71\x32\x4a\xe8\xe8\xc8\x50\xd2\xf7\xb5\x5b\xd9\x01\x11\x6c\x96\x76\x6b\x94\x7a\x74\xbc\xba\x9a\xa4\x9e\x43\xcc\x72\x9a\xbc\x0b\x09\x83\x3e\xcf\x98\xf5\x25\x06\x27\x20\x1b\x3c\x89\xbd\xb1\xd3\x3d\xfe\xff\x70\x36\x54\x61\xdd\x8b\x1b\x08\xbc\x0b\x7b\xa5\xca\xaf\xc4\x97\x66\x1c\x39\xd0\x9f\xcf\x8b\x18\x41\x93\x69\x83\x46\x1a\xaa\xb0\x6c\xf1\x48\xef\x1c\x24\x4b\x4c\xdd\xff\x11\x7d\x44\x7f\x03\x00\x00\xff\xff\x4d\xbb\x66\x1c\x47\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0xd2, 0xd7, 0xe0, 0xe, 0x9e, 0xfc, 0xe1, 0x66, 0xbb, 0x1c, 0x1c, 0x67, 0xd2, 0xf3, 0xbf, 0x79, 0xdc, 0x8c, 0xbe, 0x84, 0x89, 0x8b, 0xa8, 0xd8, 0xbc, 0xc6, 0x2d, 0x8c, 0x1e, 0x36, 0x20}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x6b\x2b\x37\x10\x7d\xdf\x5f\x31\xf8\x21\xb1\x61\xb1\xdf\x4d\x53\x48\x5d\x02\x81\x96\x86\x7c\xf5\xd5\x63\xed\xec\xee\x10\x59\x12\xd2\x28\xce\x12\xf2\xdf\x8b\xb4\x1f\xf6\x96\xdc\x0b\xd7\x6f\x96\x66\xce\x9c\x39\xe7\x68\x37\x9b\x0d\x3c\xb7\x1c\x40\x3c\x9a\x80\x4a\xd8\x1a\xe0\x00\x08\x42\x47\xa7\x51\x08\x6a\xeb\xd3\xdf\xf3\x7d\x91\x9a\xc4\x82\xf2\x94\xee\x11\x0c\x9d\x40\xb3\x79\x03\x36\x20\x2d\xb1\x07\x54\xca\x46\x23\xa9\xea\x40\x10\x03\x55\x19\xc6\x93\x22\x7e\x67\xd3\x80\xb7\x1d\x6a\x61\x0a\xc5\xb7\x0c\x14\x9a\x59\x23\x9a\x0e\xea\x68\x1a\x3e\x68\x02\xb1\x6f\x64\x4a\x38\xb5\xac\xda\xc4\x35\x38\x52\x5c\x33\x55\x70\xe8\xd2\x7c\xd8\xbf\x63\xd4\xf2\x80\xd2\xee\x01\x7d\x13\x8f\x64\x24\xcd\xc9\xb3\xee\xeb\x5c\x33\x32\x3c\xa1\x91\x90\x78\xf6\xdc\xe8\xcc\x2c\x6d\x73\xf7\xd7\x3f\xff\x96\xa9\xbe\xbb\xd6\x3a\xd1\x81\xfd\x26\x88\xf5\xd8\xd0\xa6\xd6\xf6\xf4\x9c\xa8\xbc\xa6\x69\xfb\x0b\xf0\x2e\xa3\x5e\x82\xb2\x24\xb4\x97\xa7\x3f\x77\xe5\x50\x60\xa3\xae\x32\xe0\x1d\xa3\x64\x98\x75\xc6\x79\xea\xd1\x13\xf9\x8c\x88\xa6\x82\x60\xc1\x9a\xf5\xa0\x14\x81\x43\x69\xcf\xd2\xa4\x65\x5c\x3c\x68\x56\x83\x07\x61\x70\x24\x97\x49\x8b\x32\xd8\x02\x75\x94\xe8\xa9\x4c\x15\xf4\xe1\x48\x09\x55\x17\x1c\xa7\x69\x0d\x19\xf2\xac\xe6\x32\xab\xcc\xf7\x90\xd3\x70\x42\x5f\xf5\xad\x59\x48\xe7\xbc\x75\x9e\x53\x14\xb2\xee\x45\xc1\x47\x67\xbd\xc0\xdd\x60\x58\xde\x0e\x6a\x6f\x8f\xb0\x98\x9d\x2d\xc6\xca\xbf\x49\xb0\x42\xc1\x57\xa6\x53\x18\x2a\x67\x67\x8b\xa2\xb8\x88\xc7\x72\xf2\x77\x0b\x17\x7a\xad\xe0\xb3\x28\x00\x00\x9c\x27\x87\x9e\x96\x81\x1b\x43\x7e\x0b\x18\xa5\x5d\xfe\x61\xbd\xb7\xa7\x57\xd4\x91\x4a\xb8\x0f\x21\xd2\xd0\xba\x43\x87\x07\xd6\x2c\xdd\xce\x1a\xf1\x56\x6b\xf2\x25\x3c\x24\x49\x43\x7b\xbe\x2c\xe1\xc5\xb8\xff\x1f\xae\xe0\xea\xb6\x0f\xd2\x34\x3c\xfd\x36\x1b\x78\x24\x89\xde\x00\xa1\xd7\x1d\xf0\x3c\x73\x95\xa5\x60\xae\x05\x5a\x7c\x4f\xcf\x67\xae\x53\x4e\xc1\x84\xc4\x35\xf4\x5b\xac\x87\xd8\xad\x0f\x79\x8f\xdf\xae\x3e\x67\x6d\x7d\x78\xbe\x7e\x5f\x26\xf1\xb6\x30\x09\xb4\x82\x9b\x1b\x30\xac\xe1\x73\x82\xcc\x0a\xa1\x61\xb5\x5c\xdc\xf6\x85\x53\x8e\xce\x2f\x69\xfe\xd8\xfa\x2c\x25\xda\x60\xac\x00\x7d\x70\x90\xc5\x6a\x42\xfc\x9a\x6d\xbe\x1b\x3f\x0b\x43\x2a\xd5\xa4\xd6\x18\x99\xcc\xb5\x8f\xa6\x35\xba\x4b\x69\xb4\x81\xc2\x25\x48\x2a\xab\xc8\xd9\xc0\x92\xb8\xf4\x5f\x05\x69\xbd\x8d\x4d\x9b\x2f\x1f\xfb\xd4\x7a\x60\x23\xe4\x6b\x54\x34\xb5\x0f\x82\x4d\x73\x99\xc2\x3a\x8e\xde\x2d\x67\xb9\x5a\x37\x24\x8f\xf9\xc1\x77\x23\x60\x36\x5e\x25\xed\x96\xab\xf3\x8a\x9a\xa4\xd7\x6a\x87\x0e\x6e\xbe\x1d\x31\x1a\xc4\x29\x5b\x3f\xf4\xe7\xec\xcc\x4f\xf9\x8e\x6c\xc7\x99\x25\xa0\x6c\xe1\xd7\xb8\x17\xbd\x37\x5f\xc5\x7f\x01\x00\x00\xff\xff\x99\x16\x3c\x22\xe5\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0xa6, 0x1f, 0xc0, 0xae, 0x68, 0x2e, 0xa0, 0xa, 0x60, 0x7c, 0x4c, 0xb6, 0x27, 0xe9, 0xbd, 0xca, 0x61, 0x5b, 0xaf, 0xe6, 0x67, 0xfd, 0x87, 0xf5, 0x8c, 0x10, 0x47, 0x56, 0x2, 0x78, 0x30}}
	return a, nil
}

var _transactionsTestUpgrade_nft_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\xca\xc2\x40\x10\x84\xfb\x7b\x8a\x25\xc5\xcf\x05\x7e\x52\x4b\x3a\x11\x04\x1b\x2b\x53\x89\x84\x75\xb3\xe8\x61\xb2\x7b\x5c\xf6\x40\x90\xbc\xbb\x5c\x14\xa7\x98\xea\xfb\x86\x71\x96\x50\x66\x24\x0b\x2a\x9e\x74\xe0\x16\xce\xdd\x41\x6c\x73\xa9\xe1\xe5\x1c\x00\x40\x4c\x1c\x31\xb1\x47\x22\x6b\x01\xb3\xdd\x7d\x17\x07\x34\xde\xa9\x58\x42\xb2\x1a\xfe\xb6\x44\x9a\xc5\x7e\x4e\x49\xe1\x1b\xfa\x32\x73\x93\x57\xa7\xef\xf9\x19\x39\x85\x89\xc5\x70\xf4\x82\x13\xb7\x50\x1d\x55\xf6\x59\x6e\xe1\x3a\xf2\x49\x1f\x2c\xd5\x3f\x7c\xbe\x94\xae\xd7\xc5\xc5\x2d\xef\x00\x00\x00\xff\xff\x9c\x3c\x3c\xe2\xac\x00\x00\x00"

func transactionsTestUpgrade_nft_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTestUpgrade_nft_contractCdc,
		"transactions/test/upgrade_nft_contract.cdc",
	)
}

func transactionsTestUpgrade_nft_contractCdc() (*asset, error) {
	bytes, err := transactionsTestUpgrade_nft_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/test/upgrade_nft_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x6c, 0xb5, 0xe2, 0x88, 0x49, 0xf5, 0xa6, 0x52, 0xd8, 0x7a, 0x41, 0x8f, 0x7e, 0xc9, 0x1, 0x30, 0x49, 0x4d, 0x1e, 0x84, 0xe2, 0x4c, 0xb2, 0x13, 0x96, 0x6d, 0xca, 0x1f, 0xa1, 0x17, 0x6c}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4f\x6f\xe3\xb6\x13\xbd\xfb\x53\xcc\xfa\xb0\x91\x00\xff\x94\xcb\x0f\x3d\x08\x71\x82\xad\xd3\x00\x39\x34\x5d\xa4\xee\xf6\x3c\x96\x46\x12\x5b\x99\x14\x66\xa8\x78\x83\x20\xdf\xbd\xa0\x48\xd1\x92\xbc\xdb\x3d\xd4\x27\x8b\x7c\x33\xf3\xe6\xcd\x1f\x5e\x5f\x5f\xc3\xbe\x51\x02\x96\x51\x0b\x16\x56\x19\x0d\x4a\xa0\x32\xec\x8f\x2a\x62\x56\xba\x06\xd4\xf0\xcb\x57\x3c\x76\x2d\x3d\x3d\xec\xa1\x62\x73\x04\xa3\x09\xb0\x28\x4c\xaf\x2d\x58\x03\xa8\x8d\x6d\x88\x57\x2b\x75\xec\x0c\x5b\xf8\xa2\xe8\xf4\x4c\x62\xda\x17\x62\x6f\xb0\x9e\x1e\xad\x47\xdc\x93\xd1\x0f\xbd\xae\xd5\xa1\xa5\xbd\xf9\x9b\x74\xc0\x2e\x8f\x23\xfe\x57\xb2\x58\xa2\x45\xe7\x4c\x02\x78\x76\xb6\x5e\xad\x26\xd9\x24\x85\xd1\x96\xb1\xb0\x9f\xca\x92\x49\x24\x87\xf0\x67\x03\xe3\xcd\x13\x1e\x29\x87\xdf\xad\x4b\x74\x03\x4c\x85\xea\x14\x69\x3b\x41\x9e\x94\x6d\x4a\xc6\xd3\xe3\x7d\x0e\x7f\x3c\x6a\xfb\xd3\xff\x53\x78\x5b\xad\x00\x00\x9c\x82\xcf\x54\x11\x93\x2e\xc8\xe9\x60\x1b\x8a\x78\xe2\x2b\x81\xc2\xb4\x2d\x0d\x5c\x06\x83\x96\x6c\xbc\x7f\xa6\x2a\x07\xec\x6d\x93\x2c\xd3\xcd\xfe\x0c\x10\x3c\xb4\x94\xc2\xc7\xb7\x0b\xc0\x2e\xba\x7d\xff\x16\x13\x53\x0d\x4c\xce\xc1\x1d\xb7\x92\x3a\x23\xca\x0e\x37\xae\x8e\xd6\x44\x4a\x4c\x05\xa9\x17\xe2\x1d\x76\x39\xec\xb0\xc3\x83\x6a\x95\x7d\xbd\xf9\x46\xe4\xe7\x00\x7d\xbf\xf5\x81\x3b\xa6\x0e\x99\x12\x51\xb5\x26\x0e\x09\xfd\x6c\x98\xcd\xe9\x0b\xb6\xbd\xa3\xff\xc9\xf7\x49\x54\xcd\xf3\x85\xc3\x00\x8a\x74\xc6\x82\x00\xca\xbc\x7d\x78\x4c\x2b\x1a\x3b\xca\x2f\x53\xc8\x16\x6a\xb2\x21\xcc\xb2\xe6\x69\x36\x1e\x48\xe6\x43\xde\x7c\x9c\xfa\xbf\x4d\xf4\xd0\x02\xd3\x86\x48\x63\x28\xf7\xbb\xbb\x83\x0e\xb5\x2a\x92\xf5\xce\xf4\x6d\x09\xda\xd8\x91\xfc\x8c\xa8\xa9\xa0\x56\x2f\xa4\xc1\x39\xf4\xcd\x89\x9e\xc3\x3a\x9d\x65\xce\xde\x62\x92\x7a\xac\x93\x6b\x64\x6f\xba\xd4\x65\x96\xfd\xd9\xe2\xde\x19\x6c\x67\x72\x64\xc1\xbf\x23\x97\xec\x5f\x3b\xba\x99\x8d\x48\xf6\xf4\xb0\xdf\xcd\xec\x6f\x93\x34\x05\x94\x0f\xf0\x03\xdc\xdd\x77\x64\x99\xa9\x50\x1a\x92\x41\xa2\x31\xcb\x0b\x37\x03\xd9\x85\x24\x41\x4f\x3c\x57\x7b\x1c\x27\xdf\x58\x57\xb2\x50\x2a\x1a\x0b\xb5\x55\x36\x99\x29\xd8\x06\x93\x4c\xac\x61\xac\x69\xac\xfa\x7f\x1f\xb5\xdb\x64\x26\x80\xfb\xb9\x52\xe5\x8b\x72\x8c\x81\x3f\xa3\x6d\x66\x06\xe9\x44\xb3\xd0\xad\x67\xb9\x9c\x11\xb9\x55\x6b\x0e\x7f\x91\x1b\x03\x3f\xa9\xd2\x51\xa1\x2a\x45\x25\x74\x68\x9b\x85\x6a\x35\x79\x50\x5c\x5b\x02\x5d\x7f\x68\x55\x11\x77\xb3\x77\x36\xeb\x9d\x08\x9e\x8f\x4d\x3c\xfe\x4e\x61\x82\xe3\x8b\xfa\x8c\xbb\xe3\x62\xd7\xc5\xe2\x4c\xb6\x0b\x6c\xcf\xe1\xb3\x62\x5c\x34\x8a\x24\xab\xc9\xfe\xfb\xba\x49\x16\x22\x7b\x3e\x4e\xe3\x1f\x4f\xeb\x85\x4e\x57\x32\x7c\x8f\xde\x27\x3b\x6f\x54\x38\xec\x55\xfa\x4a\x45\x6f\x69\xb1\xba\xf6\xe1\x75\x8c\x43\x7a\x20\x7b\x22\xd2\xc3\x77\x90\x5e\xe0\x7f\xc0\x64\x7b\xd6\xee\x81\xed\x09\x54\x05\xc4\x6c\x78\x03\x15\xb6\x32\x7c\x4b\x5f\x14\x24\x52\xf5\xed\xac\x42\x03\xcc\xf5\xf1\xa2\xb5\xb3\xf1\x55\x4e\x54\x99\x4f\xde\xa5\x4d\x2c\x42\x7e\xa1\xf8\x59\x1c\x14\x21\xb6\x49\x70\xbe\xf5\x2c\x36\x70\x24\x11\xac\x29\x87\xf5\x67\x36\x87\x96\x8e\x21\x67\xf7\xf0\x8f\xf1\x16\xa2\x74\x46\x2c\xbc\x45\xc7\x1f\x2e\x78\xd6\x64\x1f\xef\x25\xf1\xab\x17\x95\x96\xe4\x4c\x36\xcd\x61\xfd\x1b\xab\x5a\x69\x6c\xc1\x9c\x34\x31\x48\x13\x2b\xd5\xe0\x64\x2f\xa2\x7e\x3d\x1a\xa6\x75\x88\xfd\xbe\xfa\x27\x00\x00\xff\xff\x2a\x43\xf9\xf2\xb2\x08\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4, 0x6e, 0xc8, 0x3b, 0x45, 0x2d, 0xef, 0x9a, 0x3, 0x8f, 0x53, 0x29, 0xa5, 0xb0, 0x30, 0x2a, 0x54, 0xb9, 0xa6, 0x2c, 0x58, 0x57, 0xa4, 0xbe, 0xaf, 0x40, 0xc0, 0xd4, 0x97, 0xd6, 0x20, 0x5}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x4e\xc3\x30\x10\x86\x77\x3f\xc5\x4f\x06\x48\x96\x74\x47\x40\x85\x0a\xdd\xa8\x2a\x14\xd8\xaf\xee\x41\x2c\x5c\xdb\xb2\x2f\x2d\x15\xea\xbb\xa3\x34\x49\xdb\x88\x81\x1b\x2f\xff\x7d\xf9\x7c\x37\x99\x4c\x50\xd5\x26\x41\x22\xb9\x44\x5a\x8c\x77\x68\x9c\x35\xee\x2b\x21\x99\x4f\xc7\xf1\x26\x21\x34\x2b\x6b\x34\x66\x14\x68\x65\xac\x91\x3d\x48\xa0\xc9\x79\x67\x34\xd9\xe1\x73\x20\xa9\x95\x32\x9b\xe0\xa3\xe0\x85\x85\xd6\x24\xf4\x6e\x78\x97\xf0\x11\xfd\x06\xd9\xa8\x97\x0d\xc9\xe7\x6f\xda\x04\xcb\x8b\x79\xd5\xc7\xce\x8d\x4c\xa9\x4b\xaf\x1f\x05\x00\x21\x72\xa0\xc8\x79\x67\x77\x0b\x6a\xa4\xce\xdf\xdc\x51\x22\xd5\xbd\xa3\xec\x0b\x5c\x3f\x6a\xed\x1b\x27\x45\x3f\xd8\x96\x65\x81\xf6\xd6\xf2\x91\xf8\x44\x42\xb8\xbf\x30\x28\x23\x27\x6f\xb7\xdc\x1a\xe6\xd5\x3e\xf0\xdd\xc8\xb9\x5c\xcc\xab\xd9\x68\xfa\x21\x2f\x0a\x50\xba\xc2\x3f\xb9\xe9\xc9\xa0\xad\xe9\x14\x81\x9c\xd1\x79\xd6\xc6\x5f\xbb\x7f\x46\xac\x3d\x27\x38\x2f\xe8\x2d\xf0\x07\x83\xad\xe1\x5d\x56\x9c\x60\xdd\x0e\x4a\x3d\x1c\xc6\x70\x2a\x9b\x61\x15\xf9\xc5\xbb\xce\x98\xe5\xf1\x58\x4b\x92\xba\xc3\x1c\xd4\x41\xfd\x06\x00\x00\xff\xff\xe0\x54\x0c\x3f\x06\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xca, 0x9a, 0xbf, 0x6c, 0x3d, 0x7c, 0xbb, 0x23, 0x9e, 0x58, 0xb8, 0x35, 0xf3, 0xab, 0x95, 0x5, 0x56, 0xca, 0x34, 0x97, 0x42, 0xb7, 0x4b, 0xc, 0xa6, 0x95, 0x8d, 0x18, 0x7a, 0xb4, 0xcd, 0x7e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                           scriptsBorrow_nftCdc,
	"scripts/get_collection_data.cdc":                                  scriptsGet_collection_dataCdc,
	"scripts/get_collection_ids.cdc":                                   scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                                scriptsGet_collection_lengthCdc,
	"scripts/get_contract_storage_path.cdc":                            scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                     scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                         scriptsGet_nft_viewCdc,
	"transactions/destroy_nft.cdc":                                     transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                        transactionsMint_nftCdc,
	"transactions/nft-forwarding/change_forwarder_recipient.cdc":       transactionsNftForwardingChange_forwarder_recipientCdc,
	"transactions/nft-forwarding/create_forwarder.cdc":                 transactionsNftForwardingCreate_forwarderCdc,
	"transactions/nft-forwarding/transfer_nft_to_receiver.cdc":         transactionsNftForwardingTransfer_nft_to_receiverCdc,
	"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc": transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
	"transactions/setup_account.cdc":                                   transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":                transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":                transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/test/upgrade_nft_contract.cdc":                       transactionsTestUpgrade_nft_contractCdc,
	"transactions/transfer_nft.cdc":                                    transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                               transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_data.cdc": {scriptsGet_collection_dataCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"nft-forwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftForwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftForwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftForwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftForwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"test": {nil, map[string]*bintree{
			"upgrade_nft_contract.cdc": {transactionsTestUpgrade_nft_contractCdc, map[string]*bintree{}},
		}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
