// Code generated by go-bindata. DO NOT EDIT.
// sources:
// scripts/borrow_nft.cdc (807B)
// scripts/get_collection_data.cdc (249B)
// scripts/get_collection_ids.cdc (464B)
// scripts/get_collection_length.cdc (628B)
// scripts/get_collection_length_from_storage.cdc (722B)
// scripts/get_contract_storage_path.cdc (518B)
// scripts/get_nft_metadata.cdc (5.622kB)
// scripts/get_nft_view.cdc (4.367kB)
// transactions/destroy_nft.cdc (1.277kB)
// transactions/mint_nft.cdc (2.829kB)
// transactions/nft-forwarding/change_forwarder_recipient.cdc (1.298kB)
// transactions/nft-forwarding/create_forwarder.cdc (1.594kB)
// transactions/nft-forwarding/transfer_nft_to_receiver.cdc (2.091kB)
// transactions/nft-forwarding/unlink_forwarder_link_collection.cdc (1.104kB)
// transactions/setup_account.cdc (1.361kB)
// transactions/setup_account_from_nft_reference.cdc (1.442kB)
// transactions/setup_account_to_receive_royalty.cdc (1.474kB)
// transactions/test/upgrade_nft_contract.cdc (172B)
// transactions/transfer_nft.cdc (2.189kB)
// transactions/unlink_collection.cdc (555B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _scriptsBorrow_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x6b\xdb\x40\x10\xc5\xef\xfa\x14\x2f\x3a\x14\x09\x82\x7c\x29\x3d\x98\x38\x26\x75\x2b\xe8\xa1\xa2\x04\xb5\xd7\x32\x5e\x8d\xe2\xa1\xeb\x5d\xb1\x3b\x8a\x13\x42\xbe\x7b\x91\x15\xcb\x76\x63\xe8\x1e\x84\x76\x77\xfe\xfc\xde\xdb\x99\xcd\x50\x6f\x24\x22\x9a\x20\x9d\x62\xed\x43\xf0\xbb\x08\x72\xa8\xca\x1a\x6d\xf0\x5b\x10\x8c\xb7\x96\x8d\x8a\x77\x49\x22\xdb\xce\x07\x45\x5a\x79\x57\xf6\xee\x41\xd6\x96\x6b\xff\x87\x5d\x3a\xdd\x7c\x7d\xa2\x6d\x67\xb9\x2a\xeb\xe3\xd9\x77\x56\x6a\x48\xe9\x97\xf0\x2e\xa6\x49\x42\xc6\x70\x8c\x19\x59\x9b\xa3\xed\x1d\xb6\x24\x2e\xa3\xa6\x09\x1c\xe3\x1c\x77\xe3\xcf\x35\xa4\x99\xe3\xe7\x37\xa7\x9f\x3e\xe6\x78\x49\x00\xc0\xb2\x82\x8c\xf1\xbd\x53\x2c\xf0\xc0\x7a\x37\x6e\x0e\xc9\x79\x32\x85\x1d\xa9\xbf\x90\x12\x16\x38\x82\x15\x81\xa3\xb7\x8f\xbc\xf2\x4e\x03\x19\x1d\xb0\xb2\xe1\xac\x0f\x86\xeb\xe7\x8e\xe7\x70\x62\xaf\xf1\x28\xbc\x1b\xb7\xc3\xf7\xe6\x4c\x45\x51\x95\xf5\xea\xac\xc5\x6d\x96\xe7\xa0\x78\x85\xff\xc4\x2d\xf7\x88\xc3\x5a\x2e\xd1\x91\x13\x93\xa5\x43\xe8\xfd\x08\x15\xd0\x78\x8e\x70\x5e\xf1\x86\x89\x77\x25\xf6\x64\xe9\x45\xb1\xf7\xdc\x62\x71\xf0\xa8\x30\xd4\xd1\x5a\xac\xa8\x70\x2c\xc6\xd7\xbd\xf9\xf0\xf2\xef\xe3\x15\xc7\xea\xaf\xb7\xd9\x84\x37\xac\x73\x17\x8b\xae\x5f\x5b\x31\x3f\x48\x37\x53\x54\x7e\x22\x63\xe5\x7b\xdb\xec\xd1\xc7\x5e\x98\xfa\x3f\x8f\xc3\x34\xe6\x9f\x54\x3d\x88\x98\xcd\xf0\x79\x4c\x21\x04\x6e\x39\xb0\x33\x0c\xf5\x20\xc4\x8e\x8d\xb4\x62\xf6\x23\x29\x0e\xba\xe1\xd3\x91\x3c\x58\xf0\x1b\x8b\x73\x1b\xde\xf4\x56\x65\x9d\x49\x93\x5f\x30\x7d\xa8\x37\x79\xcd\x4f\x12\xf5\x7d\xf9\xab\x34\x4f\x5e\x93\xbf\x01\x00\x00\xff\xff\x08\xdd\x96\x13\x27\x03\x00\x00"

func scriptsBorrow_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsBorrow_nftCdc,
		"scripts/borrow_nft.cdc",
	)
}

func scriptsBorrow_nftCdc() (*asset, error) {
	bytes, err := scriptsBorrow_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/borrow_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xcc, 0x49, 0x70, 0x34, 0x62, 0x60, 0xa0, 0xc0, 0x2e, 0xb3, 0x11, 0x50, 0xd0, 0xe1, 0x66, 0x97, 0xf7, 0xe9, 0x17, 0x64, 0xfe, 0x84, 0x75, 0x13, 0xd1, 0x82, 0x6b, 0x34, 0x33, 0xde, 0x20}}
	return a, nil
}

var _scriptsGet_collection_dataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\xbf\x0a\xc2\x30\x10\xc7\xf1\x3d\x4f\xf1\xa3\x53\xb2\xf4\x01\x8a\xa8\xa0\x76\xb3\x53\x70\x3f\xea\x55\x02\xf9\x53\x92\x2b\x2a\xe2\xbb\x8b\x50\xb0\x9d\x5c\x6e\xf8\xf1\xe1\xbe\x2e\x8c\x29\x0b\xce\x2c\x74\x25\xa1\x8b\xe3\x7b\xc1\x90\x53\x40\xb5\xda\x2a\x35\xcb\xd3\x83\xc2\xe8\xb9\x6b\xed\xcc\x7e\x43\xa5\x14\xf5\x3d\x97\xa2\xc9\x7b\x83\x61\x8a\x08\xe4\xa2\x36\xcd\xfa\x7f\xdd\xb5\xf6\x90\xbc\xe7\x5e\x5c\x8a\x47\x12\xda\xe1\xa5\x00\x20\xb3\x4c\x39\x2e\x1a\xf5\x8d\x65\x4d\x75\x1c\xc4\x3e\x47\x6e\xf0\xbd\x9b\xfd\xc2\x76\xad\xdd\x6a\x63\x40\xe5\x6f\x4f\xbd\x3f\x01\x00\x00\xff\xff\xb1\x9c\x4d\xb5\xf9\x00\x00\x00"

func scriptsGet_collection_dataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_dataCdc,
		"scripts/get_collection_data.cdc",
	)
}

func scriptsGet_collection_dataCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_dataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_data.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0x65, 0x71, 0xe4, 0x18, 0xa1, 0xec, 0x42, 0xe9, 0x76, 0xea, 0xa0, 0x89, 0x8f, 0x83, 0xeb, 0x97, 0xd8, 0x6e, 0x93, 0x33, 0x3a, 0xa8, 0x2c, 0xe3, 0x97, 0xee, 0xac, 0xd4, 0x88, 0xdc, 0x15}}
	return a, nil
}

var _scriptsGet_collection_idsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x6b\xeb\x30\x10\x84\xef\xfa\x15\x83\x0f\xef\xd9\xf0\x70\x2e\x8f\x1e\x42\xd3\x10\x92\x06\x72\x09\xa1\x4d\x4f\xa5\x07\x59\x5e\x27\xa2\xf2\x4a\x48\x6b\xda\x12\xf2\xdf\x4b\x9b\xda\x49\x4b\x75\x5a\xb1\x3b\xdf\xcc\x8c\x46\x23\xdc\x9b\x68\x83\x40\x3c\x76\x24\x58\x2f\xb7\x58\x2d\x12\x2c\x43\x33\xb4\x31\xbe\x63\xf9\x9b\x60\xbc\x73\x64\xc4\x7a\x56\xca\xb6\xc1\x47\x41\xb6\xf6\xbc\xec\x78\x67\x2b\x47\x5b\xff\x4c\x9c\x0d\x9b\xdb\x57\xdd\x06\x47\xeb\xe5\x36\x53\x4a\x1b\x43\x29\xe5\xda\xb9\x02\x4d\xc7\x68\xb5\xe5\x5c\xd7\x75\xa4\x94\xc6\x98\x9d\x86\x7f\x17\x0e\x9b\xae\x72\xd6\x6c\xb4\xec\xc7\x38\xcf\xc5\x18\x8f\x0f\x2b\x96\xab\xff\x4f\x38\x28\x00\x70\x24\x7d\x42\x4c\x3e\xd2\xcf\x4e\x9f\x1e\x5e\xa8\xe1\xec\x0c\xbf\xa3\x06\x93\x5e\x56\x1a\x1d\x74\x65\x9d\x15\x4b\xa9\xac\x7c\x8c\xfe\xe5\xfa\xcf\xe1\x67\xb1\x72\x3e\xc8\x8f\x37\xf9\x27\xb4\x7f\xbf\xa5\x1e\x0e\x0a\x4c\xa7\x08\x9a\xad\xc9\xb3\xb9\xef\x5c\x0d\xf6\x82\x93\x0d\x06\xeb\x37\x34\xd1\xb7\x17\x24\x68\x41\x0a\x64\x6c\x63\xa9\x46\xd0\xb2\xcf\xbe\xaa\x44\x92\x2e\xf2\xf7\x36\xe5\x8e\x64\xb5\x48\x79\xa1\x8e\xea\x3d\x00\x00\xff\xff\xbd\x0f\x9a\x7e\xd0\x01\x00\x00"

func scriptsGet_collection_idsCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_idsCdc,
		"scripts/get_collection_ids.cdc",
	)
}

func scriptsGet_collection_idsCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_idsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_ids.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0x82, 0x9f, 0x84, 0xef, 0x6d, 0x1a, 0x4, 0x5d, 0x4f, 0x4b, 0x30, 0x9f, 0x84, 0x8c, 0x59, 0x9a, 0x47, 0x98, 0x70, 0x24, 0xbf, 0x56, 0x75, 0xfc, 0xee, 0x9b, 0x44, 0xad, 0x57, 0x5f, 0xf3}}
	return a, nil
}

var _scriptsGet_collection_lengthCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xdf\x6a\xab\x40\x10\xc6\xef\x7d\x8a\x39\x5e\x1c\x14\x0e\x3e\x40\xc8\x1f\x42\x4e\x03\x85\x36\x94\x20\xbd\x1f\xd7\x89\x59\xba\xee\xc8\xee\x6c\xd2\x10\xf2\xee\xc5\x58\x4d\x6c\x0b\x9d\x0b\x71\xc6\x6f\x66\x7e\xdf\xa8\xeb\x86\x9d\x40\xbc\x61\xbb\x0e\xb6\xd2\x85\xa1\x9c\xdf\xc8\xc6\x51\xff\xe5\xe1\x1d\xeb\xc6\xd0\x66\x9d\xdf\x6a\xcf\x24\x58\xa2\xe0\xab\xa6\xa3\x8f\xa3\x08\x95\x22\xef\x13\x34\x26\x85\x5d\xb0\x50\xa3\xb6\x09\x96\xa5\x23\xef\x27\xb0\xec\x5e\xd2\x09\x3c\x5a\x81\x73\x04\x00\x60\x48\x00\x95\xe2\x60\x05\x66\x50\x91\x2c\xbb\xa4\xef\x4a\xa3\x41\xa6\xd8\x18\x52\xa2\xd9\xfe\x47\x41\x98\xc1\x8d\x28\x73\xe4\xd9\x1c\x68\xc5\x56\x1c\x2a\x69\x79\x92\xb6\x16\x9c\xa2\xfc\xd4\xd0\x04\xac\x36\xff\xe0\xa0\xe9\xd8\xa5\xed\x73\x3a\xc2\xcf\x36\xeb\x7c\x35\x5a\x31\x4f\xd2\x14\xd0\xff\x81\x5f\x74\x8b\x2b\x62\x1b\x8b\x05\x34\x68\xb5\x4a\xe2\x56\xba\xed\xa0\x1c\x94\x4c\x1e\x2c\x0b\x7c\x62\xc2\xb7\x11\x57\xb2\xf8\x47\xb3\x5b\xda\xc1\xac\xbf\x51\xa6\xb0\xc1\x42\x1b\x2d\x9a\x7c\x56\xb0\x73\x7c\x9c\xfe\x3d\x7f\xfd\x6b\xd9\x6d\xfa\x65\x9e\x0c\x78\x6d\x8c\xaf\x98\x35\xa1\x30\x5a\xbd\xa0\xec\x07\x55\x7a\x67\x63\xc5\xc1\x94\x57\xf4\x6e\x17\x0c\xfb\x4f\xb0\x73\x5c\x43\xd7\x7f\x37\xb5\x37\xe1\x48\x82\xb3\x63\x1f\x59\x45\xf2\x44\xb6\x92\x7d\x92\x46\x97\xe8\x23\x00\x00\xff\xff\x0d\x59\xc7\x16\x74\x02\x00\x00"

func scriptsGet_collection_lengthCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_lengthCdc,
		"scripts/get_collection_length.cdc",
	)
}

func scriptsGet_collection_lengthCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_lengthCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0xe8, 0xde, 0x78, 0xf2, 0xf, 0x47, 0x19, 0x4, 0xbf, 0x1b, 0x55, 0x2f, 0x63, 0x49, 0xae, 0x20, 0x35, 0x9f, 0xf6, 0xa5, 0x32, 0xc2, 0x2f, 0x8d, 0xbd, 0x45, 0x61, 0x6a, 0xe1, 0xb6, 0x87}}
	return a, nil
}

var _scriptsGet_collection_length_from_storageCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x5d\x8b\xdb\x30\x10\x7c\xf7\xaf\xd8\xfa\xe1\x90\xa0\xf8\x07\x84\x7c\x90\xa6\x0d\x14\xda\x50\x8e\x70\xef\x7b\xf2\xc6\x16\x95\xb5\x46\x5a\x5d\x5a\x8e\xfb\xef\xc5\x9f\x17\xa7\x85\xea\xc1\xd8\xe3\x61\x76\x66\x56\xb6\x69\x39\x08\x9c\xd8\x1f\x93\xaf\xec\xb3\xa3\x33\xff\x24\x0f\x97\xc0\x0d\xe4\xf7\x70\x9e\x8d\xfc\xef\x24\x58\xa2\xe0\x93\xa5\x6b\x1c\xc9\x0b\x6c\x66\x7e\xf9\x85\x4d\xeb\xe8\x74\x3c\x8f\xb4\x77\x20\xcf\x32\x34\x86\x62\x54\xe8\x9c\x86\x4b\xf2\xd0\xa0\xf5\x0a\xcb\x32\x50\x8c\x2b\xd8\x0f\x2f\x7a\x05\x5f\xbd\xc0\x6b\x06\x00\xe0\x48\x00\x8d\xe1\xe4\x05\x36\x50\x91\xec\x93\xd4\xfb\x01\x58\x63\x92\x5a\x7d\xe2\x10\xf8\xfa\x84\x2e\x91\x86\x87\xf1\xd7\x76\x52\xd5\xd9\x2c\x63\xd8\x39\x32\x62\xd9\x7f\x46\x41\xd8\xdc\x78\x2d\x02\x45\x76\x2f\x74\x60\x2f\x01\x8d\x74\x99\x54\x87\xa5\x60\xe8\xfc\xbb\xa5\x15\x78\xeb\x3e\xc2\x8b\xa5\xeb\xf0\xd9\x3d\xd7\x8b\x0a\x8a\xd3\xf1\x7c\x58\x8c\xd8\x2a\xad\x01\xe3\x07\xf8\x0f\x6f\xd7\x5b\xec\xce\x6e\x07\x2d\x7a\x6b\x54\xde\x51\x1f\x07\x53\x01\x4a\xa6\x08\x9e\x05\x46\x9b\xf0\x97\x44\xef\x2c\xff\x67\xd8\x47\xba\xc0\x66\xea\xb0\x88\xc2\x01\x2b\x2a\x9e\xfb\xd6\xd6\x0f\xaf\xf7\x3b\x2f\xde\x85\xdf\xb6\x6a\x76\xd6\x9d\x6e\xa1\xab\xbb\x1a\x27\xc1\x1f\x28\xf5\x4c\xd6\x37\x41\x0e\x9c\x5c\xd9\x9b\x1f\x46\x42\xa0\x0b\x05\xf2\x86\x40\xf8\x46\x6c\xb8\x2e\xa3\xda\x94\x24\x90\xa4\xe0\x97\x61\x8a\x8a\xe4\x1b\xf9\x4a\x6a\xa5\xb3\xb7\xec\x4f\x00\x00\x00\xff\xff\xff\x54\x7d\x90\xd2\x02\x00\x00"

func scriptsGet_collection_length_from_storageCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_collection_length_from_storageCdc,
		"scripts/get_collection_length_from_storage.cdc",
	)
}

func scriptsGet_collection_length_from_storageCdc() (*asset, error) {
	bytes, err := scriptsGet_collection_length_from_storageCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_collection_length_from_storage.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0x49, 0xf, 0xf9, 0x9f, 0x53, 0xae, 0x86, 0x7, 0x0, 0x95, 0x20, 0x95, 0x33, 0x36, 0xde, 0xf2, 0xcc, 0xa3, 0x64, 0x3, 0x2f, 0xa4, 0xfe, 0xe, 0x64, 0x28, 0x3b, 0x36, 0x94, 0x1e, 0x12}}
	return a, nil
}

var _scriptsGet_contract_storage_pathCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\xcd\x6a\xc3\x30\x0c\xbe\xfb\x29\xd4\x1c\x46\x02\x25\x0f\x50\x9a\x96\xd2\xb1\xdb\xc6\xd8\xca\xee\xaa\xac\x76\x06\xd7\x2e\xb2\xd2\x32\x46\xdf\x7d\x38\xee\xdf\xd8\x61\x3a\x84\xe8\x8b\xbe\x1f\x29\x6e\xb7\x8f\xa2\x50\x3d\xb3\xa2\x45\xc5\x0f\xc7\xc7\x54\x99\x0b\x9c\xdb\x37\x4e\xd1\x1f\x58\x2a\x63\x90\x88\x53\xaa\xd1\xfb\x06\x36\x7d\x80\x1d\xba\x50\xa3\xb5\x32\x81\x85\xb5\xc2\x29\x8d\x21\xe0\x8e\x27\xf0\xae\xe2\xc2\xb6\xc9\x2f\x51\x70\xcb\xaf\xa8\x9f\x73\xf8\x36\x00\x00\x9e\x15\x14\x3a\x58\x7d\xed\x79\xfa\xcb\xb8\x7d\x79\x5a\x2d\xa3\xf7\x4c\xea\x62\x78\x44\xc5\x59\xdd\x5c\x39\xeb\x28\x12\x8f\x6c\x97\x31\xa8\x20\x65\x89\x2d\xeb\x82\x28\xf6\x41\x87\x18\x4d\x4b\xe7\x6f\xa9\x2d\xd3\xd3\x87\xfb\x15\x66\x75\x49\x97\x9f\x45\x37\xd7\x7c\x0e\x7b\x0c\x8e\xea\xea\xc2\x06\x8a\xbd\xb7\x10\xa2\xc2\x9a\xaf\xbe\x55\x63\xae\x59\x0e\x8e\x8f\xd0\xfd\x89\xd4\x4a\x71\xba\xf4\xd9\xbc\xce\x58\x2f\xc4\x79\xdf\x09\x04\xe7\xc7\x03\xbd\xb4\x5a\x72\xb8\xcd\x59\xb2\xcb\x03\xe7\x43\xe5\x12\xd6\x5e\x42\x06\x07\xe8\x74\x8b\x40\x16\xba\x81\x34\x02\x4c\x23\xf8\xe7\x90\xe6\x4e\x8c\x6c\x9b\x6e\xbf\xc5\x9c\xcc\x4f\x00\x00\x00\xff\xff\x4c\xda\xcc\xe8\x06\x02\x00\x00"

func scriptsGet_contract_storage_pathCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_contract_storage_pathCdc,
		"scripts/get_contract_storage_path.cdc",
	)
}

func scriptsGet_contract_storage_pathCdc() (*asset, error) {
	bytes, err := scriptsGet_contract_storage_pathCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_contract_storage_path.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x33, 0x1, 0xe9, 0x3e, 0x8c, 0xe, 0x3e, 0x11, 0x74, 0xf0, 0x70, 0x27, 0x6e, 0xba, 0x39, 0x7, 0xd5, 0xca, 0xc3, 0x6, 0x4d, 0x2b, 0x56, 0x8b, 0x6e, 0xd5, 0x1b, 0x9, 0x11, 0xc6, 0x3c}}
	return a, nil
}

var _scriptsGet_nft_metadataCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x4d\x6f\xdb\x38\x13\xbe\xfb\x57\x4c\x7c\x78\x61\x01\x7d\x95\x3d\x2c\xf6\x60\x54\x0d\xba\x4d\xb2\x28\x90\x1a\x45\xe2\xee\xa5\xe8\x81\x96\x46\x0e\x11\x9a\xf2\x92\x54\x53\x23\xc8\x7f\x5f\x90\x94\x44\x52\x22\xad\x6c\x0e\x91\x34\xf3\xcc\x0c\x3f\xe6\xe1\x70\x7c\x79\x79\x09\xdb\x47\x2a\x41\x96\x82\x1e\x15\xec\x51\x49\x20\x8c\x81\x7a\x44\xf8\x49\xf1\xf9\xff\x3b\x22\xb1\x82\x03\x2a\x52\x11\x45\x80\x48\xd9\x94\x94\x28\xac\xe0\x99\xaa\x47\x83\x93\x47\x2c\x69\x4d\xb1\x82\xcd\xed\x76\xa1\x5d\x12\x5e\x81\x40\xd5\x0a\x2e\x81\x2a\x20\x12\x08\x48\xca\xf7\x0c\x41\x2a\xd1\x96\x6a\xb1\xa0\x87\x63\x23\x14\x2c\x6f\x7e\x91\xc3\x91\xe1\xe6\x76\xbb\x1c\x64\x5f\xba\x68\x7f\x53\x7c\x96\xcb\xc5\x82\x94\x25\x4a\xb9\x22\x8c\x65\x9d\xbd\x8e\x04\x2f\x0b\x00\x00\x5f\xc9\x50\x01\x27\x07\x5c\xc3\x83\x12\x94\xef\xa3\x80\x0a\xed\x64\x69\xc3\xcf\xe2\xd4\x63\x7b\xd8\x71\x42\xd9\x59\x54\xf3\xcc\x51\xac\xe1\x63\x55\x09\x94\x32\xee\xe8\x74\x3c\x3f\x22\xd1\x9c\x08\x53\x14\xe5\x1a\xbe\x07\x73\xcf\xef\x8d\xe6\xf4\x23\x6a\x86\xbf\x14\x0a\x4e\xd8\xb7\xfb\xbb\xb3\xee\x25\x0a\x4a\xd8\xa6\x3d\xec\xf4\x48\xbf\x7d\xe6\xea\x8f\xdf\xa3\xc0\xb2\x61\x0c\x4b\xbd\x30\x5f\xdb\x1d\xa3\xe5\x57\xa2\x1e\xd7\xe0\xde\x67\x8c\x1e\x54\x23\xc8\x1e\xad\x95\xf7\xf1\xa6\x58\x67\x67\x30\x06\xdf\x51\xfe\x84\xd5\x76\x6e\x5d\x9d\xd9\x66\x2e\x29\x1c\xf4\xfa\x8d\xe9\xe1\x2c\x6e\xde\xb8\x0f\xde\x4a\xfd\xd3\x12\x81\x9f\x0f\x64\xff\xd6\x51\xfd\x49\x38\x47\xf1\x5f\x2c\x1e\x34\x4f\x99\x5c\xc3\x8b\x85\xf7\x66\xaf\xf1\x5c\xaa\xa8\x9d\x71\x98\x7f\x37\x56\x1c\x4f\x6b\x41\xa8\x92\x63\x8b\xad\x91\x46\x0d\x0e\x58\x51\x32\x31\xf8\x62\xa4\x57\x51\x0b\x46\x4b\xe4\x12\xc7\x26\x77\x56\x7c\xb5\x30\x46\x94\x53\xb5\x32\x6f\xfa\xcf\xa7\xff\xbb\x41\x1a\xe1\xbc\x53\x4e\x88\xee\x54\x21\xbb\x9d\x9c\xd7\xca\xcf\x3e\xa7\x98\xa7\xb2\xc3\x46\xf8\xeb\x94\x31\xd2\x3a\xed\x1c\x53\x63\xc8\x14\x3d\xd3\x5e\xa7\xa3\x9a\x27\x62\x0c\xbb\x89\xee\xc9\x59\xca\xc5\x60\x11\x9e\x45\xe7\x39\x25\x57\x0c\x16\x61\x54\xd4\x5b\x8a\x46\xde\x3e\x9e\xe5\x8e\x97\x67\x67\x08\xe3\x50\x1d\x4b\xa2\x24\x71\xa8\x9e\x19\x09\x62\x68\x48\xd6\x15\x48\x9b\x4d\xac\xce\x35\x35\xa0\x30\x0c\x09\x15\x1e\x3b\xa0\xf0\xb9\x12\xc2\x06\x9e\x40\xe1\x38\x13\x42\x0c\x5f\xa0\xb0\xbc\x19\x59\x9f\x8e\x26\xba\x65\x4e\xa8\x1b\x58\x03\x85\x63\x50\x08\xf1\xc8\x02\x85\x4f\x9d\x10\xe6\xd3\x06\x8a\x80\x45\x21\x30\xc6\x20\x28\xa2\xc4\x4a\x19\x7a\x1c\x0a\x2c\xc7\xa5\x2f\x19\x33\x12\xef\xbc\x81\xa3\x5b\xc4\xd4\x29\x53\x4e\x36\x36\x01\x42\x41\x0a\x7c\x1d\x24\x45\x54\x9e\x32\xbd\x09\xf6\x2a\x2a\x4f\xae\xa9\x23\x6f\xb8\xa6\x4e\x9e\x32\xf5\x08\x1d\x98\x7a\xf2\x64\x54\x4b\xf2\x30\xa2\x95\x8d\xb2\xd0\x72\x5a\x67\xa0\x57\x19\x5d\x8e\x1b\x2e\x6b\x7a\xb8\x2a\x38\x28\x2d\xb1\x0b\xfb\x08\x55\x1d\x9b\x8b\xee\x69\x94\xaf\x8b\xd7\xf0\xe6\x5b\xb7\x1c\x0e\x84\xf2\x15\xb1\xd5\xc8\x95\x25\xa0\x55\x5f\x22\xb2\xb5\x77\x35\xd6\x25\x94\x94\x65\xd3\x72\x05\x85\xbe\xdb\x7f\xb4\x1f\xbd\x87\x6c\x31\xc0\xbc\xfd\xd5\xd7\xfc\x02\xdc\xbd\x3c\x17\x28\x1b\xf6\x13\x3f\x35\x5c\x09\x52\x2a\x7d\xd4\xac\xb4\xac\x15\x25\xda\xa3\x9f\x53\xf6\xce\xb4\x0b\xf6\x53\xff\x7f\x1f\x9e\x4c\x9b\xdb\xed\xa7\x20\xc4\x87\x55\x96\x01\x91\x17\x30\x83\xbb\x1a\x56\xea\xea\x0a\x8e\x84\xd3\x72\xb5\xd4\xd0\x7b\x3b\x28\x01\x55\x83\x12\x78\xa3\xa0\x1b\x26\x4c\x5c\x98\x91\x2d\x33\xe3\x28\x32\x61\x28\xfa\x45\xca\x4b\x72\x24\x3b\xca\xa8\x3e\x7e\xf2\x5d\x23\x44\xf3\xfc\xfe\x7f\xde\x4a\x38\xbf\x1f\xdc\x8d\x03\xc2\x5a\x46\x14\xc9\x8f\xd3\xb3\x23\xf3\xc6\xff\xa9\x69\x59\x65\xc6\x6c\x63\x00\x01\x81\x35\x0a\xe4\x25\x82\x6a\x4c\x53\xe5\x3c\x2e\xbd\x6d\xe2\xb5\x0a\x92\xb4\x1b\xe4\xe6\x76\xbb\xa2\x55\x16\x59\xaa\xb9\x50\x84\x9b\x7c\x19\x7a\xb9\x3d\xfd\x89\x1c\x3e\x5f\xf7\x41\x2f\x2f\xe1\x2f\xd3\x0b\x21\xec\x88\xa4\x25\x54\x54\x1e\x19\x39\x01\xe5\x75\x23\x0e\xc4\x2c\x60\xdd\x08\x50\xba\x8b\xd4\xfd\x5f\x3f\xd4\x1e\x58\x8c\x76\x78\x8f\xea\xda\xaa\x56\xbc\x56\xd9\xc5\x24\x8e\x2d\x00\xb1\x08\xfd\xf0\xfc\x30\x1d\x5a\xfb\x8e\x85\xba\xef\xab\x89\x1f\x6c\xd4\x3c\xc5\xec\xbc\xa3\x6a\x6c\xe9\xed\x75\x7a\x8a\x61\x12\x06\xf3\xf5\xf6\xd2\x41\x52\xe3\x9f\x24\xf3\x78\x34\xbc\x56\xdd\x45\x23\xe5\xa2\x53\xcb\x51\x78\xbf\x34\xa6\x4c\x1f\x0c\x66\x1c\x32\xbc\x14\xdb\x9a\x6e\x2b\xff\x45\xde\x9d\x2c\xc1\x2c\xb7\x43\xe5\xd7\x3e\xf5\xd7\x2a\x7a\xf2\x24\xaf\x5a\x50\xc0\x8b\x6d\x5b\x74\x1e\x3c\xa1\xce\x8d\xe9\x36\xe4\xd2\xda\xe7\x4f\x78\x92\xde\xdd\x67\x12\xe0\xfb\x13\x9e\x7e\x84\x35\x2d\xf4\x60\x00\x17\x79\x2b\x58\x77\x12\x0f\x83\x1d\x0e\xf8\xc9\x52\xd9\x6b\xdc\x78\xa9\xba\x33\x7f\x82\xb6\xf7\x39\x83\x1e\xb0\x7d\x11\x98\x80\xbb\x5b\x9d\x45\x1b\xb8\xfd\x6d\x45\xf3\x60\xdc\xf8\x74\xac\x33\x77\xbd\x44\xfb\xd3\x43\x3c\x61\xb4\x17\xea\x71\x83\x28\x6f\x05\x5d\x65\x93\xe6\xc8\x3c\x22\xad\x51\xf7\x92\xd3\x0a\xb9\xa2\x35\xf5\x41\x5e\x9b\xe4\x11\x38\x24\x6c\x96\xe8\x94\xbc\x0f\xbd\x45\xa9\x96\x69\x9c\xdf\x39\x37\xaf\x73\x3d\xd4\x84\x95\xde\x61\x3e\xdb\x55\x4d\x8d\xe5\xdb\xfa\xac\x54\x54\x27\x8c\x2e\xe3\xb9\x76\x2c\xe5\xd2\x61\x66\x5c\xda\xae\x6d\x4a\x92\x30\xb5\x12\x5d\xdc\xd4\x2c\x9a\x6e\x89\xe6\x6e\x6a\x9d\xdc\xf4\x44\xdf\x17\xe1\xb6\x53\xe7\x35\x65\x38\xce\xe6\x44\x67\x38\x75\xb4\x73\xea\x19\x47\xc3\x81\x36\x11\x45\x9a\xc7\xf0\x20\xcf\x75\xf5\xbb\xa3\x52\x7d\xff\xed\xc7\xb4\x83\x54\xf1\x9e\xd1\x3e\xa6\x4d\xa2\x7f\xad\xcc\x16\xaf\x8b\x7f\x03\x00\x00\xff\xff\x18\x41\xfc\xa0\xf6\x15\x00\x00"

func scriptsGet_nft_metadataCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_metadataCdc,
		"scripts/get_nft_metadata.cdc",
	)
}

func scriptsGet_nft_metadataCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_metadataCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_metadata.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf4, 0x6a, 0x92, 0x13, 0x12, 0xfb, 0x44, 0xc, 0xaf, 0x54, 0x97, 0x7f, 0x78, 0xd0, 0xda, 0xd0, 0xdf, 0x78, 0xe1, 0x2c, 0x48, 0x87, 0x7f, 0xa5, 0xa, 0x14, 0x9f, 0x2b, 0x62, 0x9e, 0xc3, 0xb0}}
	return a, nil
}

var _scriptsGet_nft_viewCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xcd\x6e\xdb\x38\x10\xbe\xeb\x29\xc6\x39\x2c\x2c\x20\xd0\x69\xb1\x07\xa1\x6a\xd1\x4d\x13\xa0\x40\xd7\x28\x12\x77\x2f\x45\x0f\xb4\x34\x76\x06\xa1\x29\x2f\x49\x25\x35\x82\xbc\xfb\x82\x92\x25\x92\x16\x29\x39\x39\x04\xe6\xcc\x37\x3f\x9a\xf9\x86\x1c\xda\x1f\x6a\xa9\xe1\xea\xf6\x37\xdb\x1f\x38\xae\xee\xd6\x57\x49\x2f\xfb\x07\x35\xab\x98\x66\xff\x12\xbe\x28\x2b\x36\xc7\x7b\x54\x35\x7f\x46\x79\x95\x24\xac\x2c\x51\xa9\x25\xe3\x3c\x05\xa5\x65\x53\x6a\x58\xdd\xad\x0d\x08\x5e\x13\x00\x00\x17\xc0\x51\x03\x55\x39\xfc\xf8\x2a\xf4\x5f\x7f\x06\xd5\x4d\x33\x03\x10\x6c\x8f\x39\x3c\x68\x49\x62\x17\x04\x54\xa8\x4a\x49\x07\x4d\xb5\x98\xc4\xe9\xc7\x66\xbf\x11\x8c\xf8\x24\x4a\xd6\x47\xc6\x35\xa1\xca\xe1\xa7\x57\x91\xec\xbe\xd5\x1c\x7f\x05\xcd\xf0\xb7\x46\x29\x18\xff\x71\xff\x6d\xd2\x7d\x59\x73\x8e\xa5\xc9\xf5\x7b\xb3\xe1\x54\x7e\x67\xfa\x31\x07\xfb\x7b\xc6\xe8\x41\xd7\x92\xed\xb0\xb3\x72\x0e\x17\xc5\x7a\x57\x62\xdf\x48\x3c\x61\xb5\x3e\x1e\xa6\x8b\x6f\xcd\x56\x73\x7d\xb2\xd0\x2f\x17\x76\xcc\x5a\xdc\xbe\xbb\xbc\x0f\xff\x35\x4c\xe2\xd7\x3d\xdb\x5d\x9a\xd5\xdf\x4c\x08\x94\xef\xb1\x78\xa8\x4b\x62\x5c\xe5\xf0\xda\xc1\x7b\xb3\xb7\x30\xff\x24\x23\xad\x72\xf0\x59\xb5\x6e\xa5\x49\x6b\x41\x82\xf4\xb2\xfd\xd5\x9e\x86\xb9\xb8\x1e\x64\xee\xb4\x58\xa9\x3b\x22\x56\x1a\x98\x0b\xab\x1c\x0d\x83\x55\xcd\x4f\x80\xc5\x06\x68\x6f\x95\x73\x5c\x0f\x21\x63\x04\x8f\x7b\x9d\x8f\x3b\xa6\x72\x08\xbb\x0a\x16\x71\x92\xb4\x21\x58\x80\xa9\xc1\xef\x1c\xd3\x33\x04\x0b\x70\x32\xe8\x2d\x46\x44\xa7\xe1\x53\xec\x33\x80\xf4\x74\x7f\x9b\x3f\x85\x7c\x9b\x51\x05\x05\x50\xe5\x0b\x0d\x01\xa1\x68\x79\xe8\x2b\x0c\x07\xa1\x68\xa9\xe8\x2b\x1c\x1a\x42\xe1\x92\xd2\x87\x0d\x84\x84\xc2\x92\xd3\x87\x0c\xc4\x84\xc2\x92\xd4\x87\x38\x7c\x84\xc2\x65\xa7\x0f\x0b\x31\x13\x8a\x20\x61\x63\x86\x0e\x37\x3d\xcb\xf3\x4b\x39\x1a\x33\x10\x6f\xda\xc0\xd2\x38\x60\x6a\x95\x31\x27\xab\xae\x41\xbe\x20\x06\xfe\xe2\x35\x2d\x28\x8f\x99\xde\x7a\x2d\x08\xca\xa3\x35\xb5\x43\xe1\xd7\xd4\xca\x63\xa6\xce\xa0\x78\xa6\x8e\x3c\x1a\xb5\x1b\x1e\x3f\x62\x27\x3b\xa3\x68\x3b\x2c\x86\x9f\x76\x6a\xde\x92\x37\x7f\x27\xda\x36\x02\xf6\x8c\xc4\x92\x55\x95\x44\xa5\x72\xf8\xdc\xfd\xb8\x76\x2e\xf4\x34\x3f\x5b\x9a\xcc\xfb\xc0\xca\xb2\x6e\x84\x86\x02\x76\xa8\x3f\x77\x87\xde\x4b\x9a\x0c\x30\xa7\x19\x4c\x33\x28\xc0\xee\x72\x99\xec\xf6\xb4\x9b\x5a\x68\xc9\x4a\x6d\x02\x2c\x8d\xac\x91\x25\x76\xf7\x9f\x20\x7e\x0d\xcf\x84\x2f\xdd\xd1\xfc\xff\xe0\x5f\x09\xab\xbb\xf5\x8d\x17\xe2\xe3\x32\x4d\x81\xa9\x05\xcc\xe0\x3e\x0d\xd5\xfa\xf4\x09\x0e\x4c\x50\xb9\xf4\x96\x47\xa8\x6a\x54\x20\x6a\x0d\xa7\x34\x61\xe4\xa2\xcd\xec\x2a\xf8\xb1\x50\xf4\x05\xca\x4a\x76\x60\x1b\xe2\x64\xc6\x3f\xdb\xd4\x52\xd6\x2f\x1f\xfe\x70\xaa\x60\x7d\x7e\xb4\xaf\xa9\x7f\x61\x9a\x60\xd9\x61\x3c\xe4\xa9\x93\xfb\x4d\xdd\xf0\xaa\xcd\xb7\x8b\x01\x0c\x24\x6e\x51\xa2\x28\x11\x74\x0d\xfa\x11\x1d\x8f\x6e\xd6\xcf\xee\x57\xbb\xb4\x3a\x65\xeb\x56\x65\x69\x58\x41\xd5\x64\x60\xd9\xfb\x7a\x21\xfd\x08\x3b\x7a\x46\x01\x54\xb9\x11\xc5\xb6\x6d\x36\x14\x67\x4d\xda\xa1\x3e\x11\xed\x14\xe7\xda\x4f\x2e\xf7\x8e\xc1\xc2\x47\xdf\x16\x28\xe0\xb5\xdb\x74\xb6\xb5\x84\x27\x3c\x02\x89\x3e\x11\xf7\x2a\x21\x75\xe0\xec\xb8\xc8\x54\xe7\x28\x7b\xc2\xa3\x72\xde\x9a\x51\xa4\x9f\x4f\x78\xfc\x65\x9e\x92\x59\x57\x2d\x72\x91\x35\x92\x9f\x66\xb1\xcb\x5f\xa2\x6e\xa4\xe8\x27\xcc\x5f\xa8\x7a\xa7\x54\x9d\x2f\x55\xbd\xc6\x9c\xce\x57\xab\x5e\x57\xf5\x09\x18\x71\x64\xd3\x1a\x61\x1d\x6d\x70\xff\x1a\x19\x0c\xba\xac\x91\xb4\x4c\x83\x9b\x59\x6f\x34\x88\x16\xa6\xd7\xf7\xfd\xc9\xb5\xf2\x76\xb4\xde\xce\x11\xb6\x05\x9c\xdb\xda\x02\xcd\x60\x9a\x2d\x9c\x19\x9a\xdd\xe6\x62\x2e\xd4\x65\x5b\xde\x74\x06\x76\xe6\x33\xaa\x50\x68\xda\x12\xca\xcb\x56\xc2\x69\xc7\x16\x39\xe3\x78\xe5\x31\x25\x40\x5a\x9f\x33\x91\xc5\x72\xc2\x3e\xc8\xa3\xc8\xe2\x39\xe1\xc6\xe9\x7c\xac\xf1\xde\x72\x3a\x35\x86\x16\x97\x6d\x89\xe3\x39\x5f\x23\x7b\xec\x84\xc7\x8d\xc5\xcd\x78\x1c\xae\xa5\x91\x68\xbc\xf3\xf6\x01\xbb\xf3\xa2\x03\xa4\xc9\x5b\xf2\x7f\x00\x00\x00\xff\xff\xda\x82\x25\x02\x0f\x11\x00\x00"

func scriptsGet_nft_viewCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_nft_viewCdc,
		"scripts/get_nft_view.cdc",
	)
}

func scriptsGet_nft_viewCdc() (*asset, error) {
	bytes, err := scriptsGet_nft_viewCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_nft_view.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x9a, 0x39, 0x5e, 0x7a, 0xc6, 0x87, 0x9a, 0xd2, 0xc9, 0xab, 0xe6, 0x93, 0x72, 0x88, 0x66, 0xa1, 0xcf, 0x5, 0x78, 0xb6, 0xf0, 0x9a, 0xa0, 0x93, 0x27, 0x77, 0xc9, 0x45, 0x8e, 0x72, 0x67}}
	return a, nil
}

var _transactionsDestroy_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x6f\xdb\x3e\x0c\xbd\xfb\x53\xbc\xfa\xd0\x9f\x0d\xfc\xe6\x5c\x86\x1d\x82\xfe\xc1\xd6\xac\x40\x0e\x2b\x86\x22\xeb\xce\x8c\x45\xc7\xda\x54\xc9\x90\xe8\xb8\xc5\xd0\xef\x3e\x28\x76\x12\x3b\x2b\x3a\x60\x3c\x24\x11\x41\x3e\x3e\x3e\x92\x99\xcd\x66\x58\xd5\x3a\x40\x3c\xd9\x40\xa5\x68\x67\xd1\x69\xa9\x95\xa7\x2e\x80\x2c\xee\x6e\x57\xa8\xbc\x7b\x84\xd4\x8c\xa0\x37\x96\x7d\x40\xe9\x8c\xe1\x3e\x98\xac\x82\xe2\x20\xde\x3d\x07\x68\x49\x12\xfd\xd8\x38\x2f\xb8\x73\xf6\xb6\xb5\x1b\xbd\x36\xbc\x72\x3f\xd9\xf6\x20\xe9\xa9\x3b\xdd\xc7\x7f\x61\x21\x45\x42\x0f\x9a\xbb\x30\x04\x4f\x7c\x87\xc8\xcf\x4f\xf4\xd8\x18\x3e\x10\x4b\x8f\x8e\x34\x49\x46\x8d\x64\x5a\xcd\xf1\x6d\x69\xe5\xc3\xfb\x1c\xbf\x92\x04\x00\x62\xc3\xf7\x5c\xb1\x67\x5b\x32\xa4\x26\x41\xa7\x8d\xc1\x9a\xd1\x06\x56\xa8\x9c\xdf\x75\xea\x3a\xcb\xfe\xbf\x71\xa7\xbb\x74\xc3\x32\x72\xdd\x73\x35\x07\xb5\x52\x67\xa7\x6d\x15\xdf\x07\x0d\x73\x9c\x1f\xe9\x15\x37\x47\xb4\x1d\x5c\xe3\xb9\x21\xcf\x59\xaf\xeb\x80\xf5\xc9\x79\xef\xba\x07\x32\x2d\xe7\x38\xff\x58\x96\xae\xb5\x12\x1b\xc0\x60\x53\x12\x0b\x12\xc2\xe5\x48\x95\xc2\x73\x70\x66\xcb\x37\xce\x8a\xa7\x52\xa2\x7a\x59\xf4\xb5\xbe\xe4\xd5\x73\xc3\x73\x58\x6d\xfe\xc7\x56\x73\xd7\x3f\xe3\xe7\xc5\x44\xec\xe2\xee\x76\x75\x33\x29\x71\x95\xe5\x39\x28\x9c\xe1\x2f\x71\xd7\x07\x9a\xd1\xae\xaf\xd1\x90\xd5\x65\x96\xc6\xf0\xfb\x9e\x98\x87\x72\x1c\x60\x9d\x60\xa0\x8a\x3f\x60\x76\xec\xd2\x7c\x02\x76\x78\xcc\x66\x58\xef\x44\x02\xc1\x1f\x87\xe9\xde\x9a\x5c\xb4\xc0\xa6\x2a\x26\xe3\xc3\xe5\xb0\xd3\x45\x10\xe7\x69\xc3\x45\x0f\x7c\xf1\x6f\x53\xbd\xca\x26\x84\xa3\xc5\x15\x9d\x9f\x8c\x6b\x5f\xec\x2b\x49\x3d\x49\xc8\x47\x82\x0d\x83\x3f\x6a\x15\x93\x38\x9e\xa4\x5b\xff\xe0\x52\x40\xd2\xdf\x64\xc3\xa5\xae\x34\x2b\x34\x24\x75\x9a\xf7\x9b\xf5\xd2\x7f\xf1\x13\x97\xad\xf0\x7e\xfb\x07\xf1\xf6\x07\xbe\xcb\x9f\x1c\xf8\x1b\xe2\xc5\xad\xb3\x95\xe0\xe2\xdd\x2b\x3a\x16\x7b\xc8\x6c\xff\x63\xb9\x98\x43\xab\xfc\x58\x77\xf8\x93\x88\x18\x63\x86\x8d\x0b\x32\xda\xed\xb3\x57\xb0\x37\x2c\xcb\x45\xc8\xf2\xa2\x74\x56\x48\xdb\x90\x69\x95\xcf\x91\xae\x06\xf6\xb1\xe4\x89\x14\xcb\x05\x42\xed\x5a\xa3\x50\xd3\x96\xb1\x66\xb6\x50\x6c\x58\x58\xa5\x43\xf5\x97\xe4\x77\x00\x00\x00\xff\xff\x8a\xb2\x98\xa2\xfd\x04\x00\x00"

func transactionsDestroy_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsDestroy_nftCdc,
		"transactions/destroy_nft.cdc",
	)
}

func transactionsDestroy_nftCdc() (*asset, error) {
	bytes, err := transactionsDestroy_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/destroy_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0xc4, 0xe0, 0xc2, 0xae, 0x67, 0x72, 0x60, 0x17, 0x3a, 0x73, 0x43, 0x52, 0xe6, 0xe5, 0x55, 0xd0, 0x45, 0x1f, 0x13, 0x1a, 0x2e, 0x2a, 0xb1, 0xb0, 0x47, 0xbb, 0x79, 0x52, 0x4c, 0x88, 0x96}}
	return a, nil
}

var _transactionsMint_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x41\x6f\xe3\x36\x13\xbd\xeb\x57\xcc\xe7\x83\x57\xc6\x97\xb5\x5b\xa0\xe8\x41\x88\x13\x24\xde\x06\xe8\x61\x83\x45\xd6\xdd\x4b\x90\xc3\x58\x1a\x4b\x6c\x69\x52\x25\x47\x76\x8c\x20\xff\xbd\xa0\x28\xd1\xa2\xa3\xa4\xf5\xc1\x96\xc9\x99\xc7\x99\x37\x6f\x86\x5a\x2c\x16\xb0\xae\x84\x05\x9b\x1b\x51\x33\x34\x96\x2c\x70\x45\x70\x7f\xb7\xfe\x2a\x14\x93\x01\x43\x56\x37\x26\x27\x60\x0d\x3b\xa1\x18\x10\x14\x1d\x9c\x41\xe2\xbc\x7f\x67\xd8\x35\x96\x61\x43\x60\x1a\x05\x07\xc1\x55\x0b\x80\x79\xae\x1b\xc5\xc0\x15\x32\x54\xe8\x51\x77\x31\x64\x0b\x60\x59\x1b\x2a\x40\x28\x58\xb8\x47\x2c\x69\x11\x0e\x4f\x12\xb1\xab\xb5\x61\x98\xdc\x6b\x75\xd7\xa8\x52\x6c\x24\xad\xf5\x5f\xa4\x26\x61\xe7\xb7\x67\xdc\xd5\x92\xee\xef\xd6\xa7\xb5\xaf\xc4\x58\x20\xe3\x0f\x41\x07\x7b\x5a\x3e\x43\x48\xd8\xa0\xb2\x98\xb3\xd0\x2a\x4d\x00\x00\x0c\xe5\xa2\x16\xa4\x38\x83\x9b\xa2\x30\x64\xed\x45\xbb\xae\x70\x47\x19\x7c\x67\x23\x54\xe9\x57\x0a\xf2\x8c\x09\xad\xe2\x0d\xae\x9a\xdd\x46\xa1\x90\xf1\x72\xde\xb0\xcd\xe0\xf1\x8f\x3b\xf1\xfc\xeb\x2f\x4f\x7e\xcd\xe8\x23\x4a\x3e\x7e\x39\x41\x39\x13\xef\x15\x9b\xdc\x92\xa2\xad\xc8\x05\x1a\x41\xce\xa6\x0b\xee\x29\x99\xc1\x4b\xd2\x1a\x3a\x26\xa5\xce\x51\xc2\x1e\x8d\xc0\x8d\x24\xd8\x6a\xd3\x92\x2b\x54\x19\x93\xbf\x25\x43\x2a\xa7\xd6\x4f\x12\x77\x1b\x19\x4c\x4f\x54\xce\x07\x25\xe8\xe1\x1f\x7a\x47\xa7\x04\x07\x68\x28\x27\xb1\x27\xf3\xc9\x42\xae\xa5\xa4\x96\xc8\x80\x1a\xb8\x5c\x85\xbd\x07\xda\x66\x30\x7d\x39\xaf\xe5\xfc\xa1\x03\x7a\xf5\x87\xd5\x86\x6a\x34\x94\x5a\x51\x2a\x17\x17\x36\x5c\xa5\xb7\xda\x18\x7d\xf8\x81\xb2\xa1\x19\x4c\x6f\xbc\xba\x42\xfa\xfd\xa1\xa7\x38\xbe\x20\x23\x2c\x61\x90\x92\x53\x9d\xdc\xd3\x4a\x2b\x36\x98\xb3\xd3\x46\xda\x2b\x71\x7d\xac\x29\x03\x25\xe4\x05\xec\x05\x1d\xfc\x5f\xf7\x7d\x19\x49\xc9\xd1\xb2\x8a\x8e\xb8\x4a\x67\x33\x40\xfb\x3f\xf8\x17\xbb\xeb\x10\xa6\xfb\x5c\x5f\x43\x8d\x4a\xe4\xe9\xc4\x99\x3f\xf8\xc0\x0c\x14\x9a\x2c\x28\xcd\xd0\x85\x0a\x6f\x60\xda\xe8\x26\xb3\x00\x16\x1e\x16\x0b\xd8\xb4\x0c\x01\x9e\x2a\xdc\x17\x6a\xa4\x99\x85\x82\xae\xdb\x02\x84\x25\xb9\x9d\x77\x22\x59\x82\x27\x7f\xde\x19\xcd\x3d\xf8\xe5\xa8\x44\xae\xd2\xad\xd1\xbb\x6c\xc8\xb5\xdf\xf8\xee\x9d\xbf\x21\x57\xb3\x77\xf2\xef\x0a\x79\x4a\xbd\x1d\x07\x80\x0a\xf4\xe6\x4f\xca\x19\x90\xdb\x14\x6c\x4d\xb9\xd8\x0a\x2a\xa0\x46\xae\x26\xb3\x64\x98\xb9\xd7\x46\xaf\x49\xaf\xba\x4f\x16\xea\x66\x23\x45\xee\xb2\x1f\xe8\xe2\x4c\xff\x21\xf1\x71\xb9\xc2\x12\x4a\xe2\x2e\xc8\x34\xd8\xcc\xe6\x39\xd6\xb8\x11\x52\xb0\x20\x1b\xc8\xf9\x40\xd9\x57\x69\x44\x40\x3b\x12\xa2\xca\xce\x7d\xb4\x8e\xab\xc8\x72\x36\x20\x6b\xa5\x1b\x59\xb4\x2c\x95\xbe\xc1\x5a\xec\xd1\x7a\xc3\x29\x8d\x4e\x2e\xa7\xe6\x82\x97\x70\x82\x1b\x4b\x73\x49\xaa\xe4\x0a\x96\xcb\xb1\x89\xd4\xef\x4e\xa7\xef\x18\x47\xb3\xa9\xdb\xce\x60\x72\x63\x0c\x1e\xa1\xb3\xb6\x55\x1b\xf9\x86\x80\xfe\x6e\x50\xb6\xa3\xa9\x73\x07\x43\x12\x99\x0a\x28\x88\x51\x48\x3b\x19\x06\x4b\xcf\x94\x37\x4c\xc3\x2e\x5f\x2c\x60\x65\x08\x99\x7c\xb9\x3b\x90\xce\x39\x58\xed\xd1\x80\x17\xd6\x12\x7e\x8a\x56\xbd\x87\x1f\xa3\x71\xcf\x3e\x78\xac\x27\x58\xc2\xe3\x53\xf0\x39\x54\x42\xd2\x47\xb9\xc2\x55\x77\xd2\x4b\x54\x37\x37\x8d\x36\xc1\xfc\x08\xe3\x7c\x3d\xb6\xae\x4f\x1f\x79\xae\x7a\xa5\x1d\x63\x31\x0e\x4c\xce\xe4\x58\x12\x5f\x4e\x5f\xfe\xbb\x10\xdd\x27\xa6\xa2\x24\xee\xd8\xe8\xfd\xbe\x05\x75\xa6\xb3\x37\x00\x43\x8d\xde\x0e\x72\x0e\x4d\x5d\xe1\x9e\xa0\x87\x82\x5c\xab\xad\x28\x1b\x77\xeb\x23\xc3\xbb\x07\x0d\x9b\x1c\xc2\x5d\xe8\x12\xc4\xba\x26\x55\xbc\x4d\x64\xb4\x9e\xe3\xf9\xf6\xcd\x93\x8d\x53\x7d\x31\xea\x94\x37\x9c\xb5\x5d\xd0\x95\x6d\xdc\x2a\x7a\x35\x18\xe9\xa8\xb1\x9a\xb7\x2c\x26\xef\xff\xeb\xb5\xec\x7f\xff\x0f\x3f\x87\xdd\xd7\x24\xea\x0d\x37\x78\xc3\x0c\x40\xe5\xda\xaa\xd6\x56\x30\x08\x1e\x5c\xdb\x61\x44\x9e\xdd\xdb\x30\x7c\x23\x28\x1c\xc4\xe5\xe7\xe1\xbd\xd0\xfe\xdc\xdf\xad\x63\x4e\xfd\xdb\x91\xfb\x8e\x09\x89\x88\x18\xfc\x89\xad\x06\x2f\x4c\xe1\xf1\x62\xbc\xf0\xd9\xe9\x31\x79\xcb\xd3\x07\x63\x7c\xde\xb1\x90\xb2\x6b\x86\x0c\x2e\x3f\x87\x0c\xc3\x70\x7c\x4d\xfe\x09\x00\x00\xff\xff\xbd\x5e\x5a\xa5\x0d\x0b\x00\x00"

func transactionsMint_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsMint_nftCdc,
		"transactions/mint_nft.cdc",
	)
}

func transactionsMint_nftCdc() (*asset, error) {
	bytes, err := transactionsMint_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/mint_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0xaa, 0x3e, 0x8b, 0x37, 0x8b, 0x16, 0x84, 0xf1, 0xaa, 0xfa, 0x31, 0x24, 0xac, 0x14, 0x5, 0x0, 0x1c, 0x13, 0x2, 0x12, 0x82, 0xbe, 0xe0, 0x9a, 0x7d, 0x9, 0x92, 0xc0, 0x11, 0xa2, 0x81}}
	return a, nil
}

var _transactionsNftForwardingChange_forwarder_recipientCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\x4f\x8f\x9b\x30\x10\xc5\xef\x7c\x8a\x11\x87\x15\x48\x15\xdc\xd1\xfe\xd1\x36\x52\x6e\xad\x56\x69\xd4\xbb\x31\x03\x58\xf5\xda\xc8\x1e\x97\x56\xab\x7c\xf7\xca\x80\x89\xa1\x51\xb7\x5a\x5f\x12\x99\xd1\xbc\x79\xbf\x79\x16\xaf\x83\x36\x04\x5f\xb5\x3a\x3a\xd5\x89\x5a\xe2\x59\xff\x40\x05\xad\xd1\xaf\x90\xee\xaf\xd3\x24\xd4\x1f\xcf\x47\x6d\x46\x66\x1a\xa1\xba\x50\x1c\xdf\xa5\x49\x52\x96\x25\x9c\x7b\x61\x81\x0c\x53\x96\x71\x12\x5a\x81\x1b\x1a\x46\x68\x81\x7a\x8c\x9a\xa0\x01\x83\x5c\x0c\x02\x15\x01\xe9\xe9\xab\x56\x08\x9d\xf8\x89\x0a\x18\x4d\x17\x76\x40\x2e\x5a\x81\x0d\xbc\xb8\x5a\x0a\xfe\xc2\xa8\xf7\x22\x49\xd4\x3f\x53\x38\x9e\x42\xa7\xe7\xa6\x31\x68\x6d\x05\xcb\x9f\x4f\xc0\xb5\x94\x38\x15\x5e\x5b\x54\x51\xbb\x1c\xde\x92\x04\x00\xa0\x2c\xc1\x60\x8b\x06\x15\xc7\x30\xd0\x34\xee\x32\xed\x09\xad\x76\x86\xe3\x54\x2c\x91\xa0\x0d\x46\x4e\xd8\x56\xc0\x1c\xf5\xd9\x86\x47\xf1\xc5\x11\xab\x25\xe6\x70\xb7\xbd\x8f\x21\x04\xe9\xc3\x3a\x26\x8c\x08\xa3\x90\x12\x1a\xb4\xa2\x53\x8c\x10\x98\x0d\x62\x1e\xfd\x8a\x6d\x9d\x24\x26\x70\x6d\x54\xc1\x81\x0d\xac\x16\x52\xd0\xef\xfb\xbb\xb7\xfd\x62\x8b\x6b\xe5\xe5\x71\x46\x30\x18\x1c\x98\xc1\xcc\xeb\xa2\x59\x3c\x7d\xd6\xc6\xe8\xf1\x3b\x93\xce\x3b\x79\xe6\x5c\x3b\x45\x9e\x1a\x2c\xa7\x2c\xa1\x9e\x6a\xb6\xfc\x76\xab\x8e\xe0\xf9\x63\x51\xb6\x45\x4c\x10\x1e\x60\x96\x2d\x2c\x69\xc3\x3a\x2c\xe6\xa6\xf7\x1f\x04\xfb\x98\xad\x5a\xe1\xf8\xcc\x56\xdb\x1c\x17\xdf\x66\xb1\x29\x58\x71\x6d\x0e\x4f\x4f\x30\x30\x25\x78\x96\x1e\xb4\x93\x0d\x28\x4d\xef\xfa\x4c\xf3\x24\xc6\xd2\x21\xc5\x8b\xbd\xae\x63\x7e\x3e\x3e\x61\x66\x97\x5c\x60\x33\xe0\x2d\xa8\xdb\x0b\x86\x07\xaf\xb0\x6c\xe4\xd6\x33\xc8\x0b\x1e\x24\x05\xda\xa2\x43\x7a\x2f\x07\x7f\x43\xbb\xf5\x7e\xfe\x83\xd4\xce\x3a\xdf\x59\x5f\x6d\x07\x62\x97\xf9\x07\x7f\x21\x77\x84\xdb\x74\xd9\x39\xe2\xbb\xe0\xdf\x4c\x51\xc1\x7b\xa6\x3a\x5c\x41\x64\xff\xc0\x97\x2f\xc2\x97\xe4\x4f\x00\x00\x00\xff\xff\x3b\x07\xa6\x67\x12\x05\x00\x00"

func transactionsNftForwardingChange_forwarder_recipientCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingChange_forwarder_recipientCdc,
		"transactions/nft-forwarding/change_forwarder_recipient.cdc",
	)
}

func transactionsNftForwardingChange_forwarder_recipientCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingChange_forwarder_recipientCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/change_forwarder_recipient.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0x22, 0x7d, 0x1, 0xf3, 0x90, 0xde, 0xec, 0xd2, 0x6a, 0xb0, 0x4f, 0xb7, 0xe5, 0xa0, 0xa9, 0x97, 0xf6, 0x8f, 0x22, 0xbe, 0xa7, 0xf9, 0x69, 0x69, 0x4c, 0x74, 0x1, 0xcf, 0x7f, 0x60, 0x8d}}
	return a, nil
}

var _transactionsNftForwardingCreate_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xe2\x30\x10\xbd\xe7\x57\x8c\x38\xd0\x20\xa5\x70\x47\xdd\x56\x5d\x24\xa4\x3d\x2c\xaa\x5a\xb6\xf7\x21\x19\x12\x6b\x83\x1d\x8d\xc7\x64\xab\x8a\xff\xbe\x32\xf9\x72\xd8\x6c\x73\x32\xf6\xf8\xbd\xe7\x37\x6f\x50\xa7\xca\xb0\xc0\xce\xe8\xad\xd3\xb9\x3a\x94\xb4\x37\xbf\x49\xc3\x91\xcd\x09\x66\xb7\xdb\xb3\xa8\xad\xff\x49\x82\x19\x0a\xbe\x2b\xaa\x6d\x5b\x3c\xda\xeb\x2b\x77\xdb\xfd\xd6\x70\x8d\x9c\x29\x9d\x77\xb0\xe1\xde\x2c\x8a\x56\xab\x15\xec\x0b\x65\x41\x18\xb5\xc5\x54\x94\xd1\xa0\x2c\xd4\x05\x0a\xa0\x06\x4c\x53\xe3\xb4\x40\x6d\x5c\x99\x01\x3b\x0d\x62\xc0\x92\x80\x12\x4b\xe5\x11\x5c\xe5\x37\x8e\x0d\xa4\x67\xb4\xfe\x37\x42\x46\x56\xe5\x1a\x85\x32\x60\x4a\x55\xa5\x48\xcb\x9d\x85\x2b\xdf\x6e\xbb\x5f\x6e\x4c\x59\x52\xc3\x86\xd6\xba\x93\x57\x28\x05\x0d\xc5\x5e\x44\x6a\xf4\x51\xe5\x8e\x29\xf3\x0c\xd7\xf3\x5c\x9d\x49\x7b\x04\x18\x10\x3c\x68\x14\xe8\x8f\x7b\x90\xe7\x2c\x63\xb2\x76\x0d\xed\x22\x81\xb4\xbf\xf5\xe2\x0e\xa5\x4a\x5f\x50\x8a\x35\x0c\xeb\x05\x7c\x46\x11\x00\x40\xc5\x54\x21\x53\xec\x9f\x41\xbc\x06\x74\x52\xc4\xdf\x0d\xb3\xa9\xdf\xb1\x74\x94\xc0\x0f\x6b\x1d\xbd\x89\x61\xcc\x69\x83\x15\x1e\x54\xa9\xe4\x63\x63\xb4\xb0\x27\xe1\xa4\x81\xb5\xc5\x70\x98\xc0\x1b\x9e\xa9\xbd\xff\x4b\x57\xb7\xe7\x0b\x98\x3f\x37\x86\x7b\x1d\xd0\x7e\xfd\x62\xb5\x82\x9c\x24\x78\x39\x0c\x57\x9b\xfe\x8e\x2c\x6c\x1f\xdd\xf5\xb0\x87\x29\x49\x86\xa2\x01\x6c\x83\x15\x7c\xf3\x04\xad\x84\x7f\x6c\x5c\x2c\xd3\x8e\x4e\x91\x5d\xe6\x24\x0f\xf3\xcf\xdb\x9c\x06\x9d\xbd\x3c\xc6\x3d\x67\xf7\x4d\xf9\x3f\x2a\x5a\xc0\xd3\x13\x54\xa8\x55\x1a\xcf\x5e\xc3\x30\x68\x23\x61\x20\x6a\x25\xc5\x4d\x0e\x00\x25\xc8\x48\x85\x52\xcc\x16\x51\x68\x5e\xca\x84\x42\x80\xa0\xa9\x0e\xa6\x83\x18\x98\xac\x71\x9c\x12\xcc\xc1\xe2\x99\x40\x69\xb0\x4d\x67\x93\x2e\xdc\xd7\x84\x9a\xb1\xc3\x77\x36\x8c\x61\xe8\xef\xb1\x87\x7e\xb8\x1f\x0f\xe2\xb2\x51\xb1\xa3\x3a\x54\x30\x98\xbd\xfe\x4f\x6f\x16\x3d\x7e\x13\xc9\x65\x2b\x70\xe9\x05\xc7\x0f\xf7\x3d\x63\x02\x62\xd6\x37\x9c\x6d\x4c\xaf\x09\x1f\x59\xe2\xba\x10\x02\xfd\x51\x56\xfc\x23\x03\x43\xc3\x7e\x37\x01\x9b\xe8\x5a\x2b\x67\x94\x8d\x1e\x36\x9e\x6a\xf8\x64\x57\xe6\xd0\x29\xc1\x81\xf7\xa3\x1f\xfc\xc1\xd0\xba\x20\xa6\xeb\xde\x80\xdd\xfe\x3f\x69\xc3\x27\x2c\xcb\x0f\x38\xd0\x74\x37\x5e\x29\x25\x75\x26\x6e\xb2\x3e\xa5\xbc\x73\x55\xf9\xe9\x9e\xca\x77\x07\x71\x79\x8c\xbf\xf0\xf8\x2b\x73\x3a\x6b\xa6\x54\x25\x80\xb2\x9e\x9c\x92\xd6\xb4\x4b\x74\x89\xfe\x06\x00\x00\xff\xff\xca\x59\xbf\x49\x3a\x06\x00\x00"

func transactionsNftForwardingCreate_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingCreate_forwarderCdc,
		"transactions/nft-forwarding/create_forwarder.cdc",
	)
}

func transactionsNftForwardingCreate_forwarderCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingCreate_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0xcd, 0x9a, 0xe9, 0x55, 0x66, 0xe1, 0x94, 0x74, 0x4d, 0xcd, 0xd1, 0x64, 0xbe, 0x45, 0x10, 0x96, 0x3f, 0xb5, 0xe0, 0x7b, 0xf7, 0xf, 0x62, 0x13, 0x17, 0xa5, 0xf1, 0x80, 0xb0, 0xa2, 0x76}}
	return a, nil
}

var _transactionsNftForwardingTransfer_nft_to_receiverCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x3f\x6f\xfb\x36\x10\xdd\xf5\x29\xae\x1a\x12\x09\x48\xe4\xa5\xe8\x20\x38\x09\x52\x1b\x01\x32\xd4\x2d\x52\x37\x9d\x69\xea\x64\xb1\x95\x49\x81\x3c\xd9\x0d\x82\x7c\xf7\x82\x12\x45\x8b\x92\x93\x0c\x3f\x0d\x06\x4d\xde\x9f\x77\xef\xdd\x9d\x38\x34\x4a\x13\x6c\x94\x7c\x6a\xe5\x5e\xec\x6a\xdc\xaa\x7f\x51\x42\xa9\xd5\x01\xe2\xe9\x75\x1c\x39\xfb\x57\x81\xa7\x17\x34\xaa\x3e\xa2\x76\xb6\xe3\x2b\x6f\xf7\x1b\x12\x2b\x18\x31\xfb\x68\x9c\x61\x70\x17\x47\xd1\x62\xb1\x80\x6d\x25\x0c\x90\x66\xd2\x30\x4e\x42\x49\x10\x06\x4a\xa5\xfb\xab\x12\xb5\x16\x72\x0f\x4c\xc2\xe6\x69\xdb\x47\x51\x12\x81\x71\xae\x5a\x49\x40\x0a\xa8\x42\xd0\xc8\x45\x23\x50\xd2\xb5\x81\x17\xe4\x28\x8e\xa8\x6d\xf0\x68\x14\x37\x89\x00\x00\xb8\x92\xa4\x19\xa7\xc7\xa2\xd0\x68\x4c\x0e\xee\x70\x13\xbc\x6e\xd8\x01\x73\xf8\x93\x6c\xee\xfe\xc5\x67\x98\x78\x9c\x04\x55\x85\x66\xa7\xe7\x75\x0e\x7f\x3d\x4b\xfa\xe5\xe7\x28\x85\xf7\xa8\x7b\x5b\x2c\x40\x63\x89\x1a\x25\xc7\x01\xe9\x60\x8f\xfa\xda\x00\x57\x75\x8d\x1d\xb8\xce\xbe\x46\xf2\xef\x2f\x58\xe6\xc0\x5a\xaa\x92\xa9\x10\xd9\xdf\xce\x24\x85\xab\xf7\xd9\xe3\xca\x87\xfc\x98\x63\x50\x65\x87\x61\x60\xc8\x62\x2a\xb0\x51\x46\x50\x77\x6f\x19\x26\xe5\xa1\xb8\xa7\x0e\xc9\x85\x4c\x43\x94\x8f\xbe\xd8\x46\x63\xc3\x34\x26\x46\xec\x25\x6a\x87\xfd\x57\xa5\xb5\x3a\xbd\xb2\xba\xc5\x14\xae\x1e\x7b\xd1\x3c\x3f\x0e\xdf\x1e\xfb\xf4\x67\x36\xc0\xf6\x48\x2f\xf6\x80\x6b\x50\xc6\x3b\x5a\x84\xb2\xa4\x95\xbb\x87\x3b\x1b\xc7\x65\x48\x26\x2a\xa7\xd9\x70\x61\xb2\x5d\x07\x69\x79\x35\xee\xd9\xfb\x44\x76\x82\x8f\xe5\x4f\x7d\x26\xfb\x3d\x3c\x40\xc3\xa4\xe0\x49\xbc\x52\x6d\x5d\x80\x54\x04\x7d\xa4\x70\x1e\x66\x7a\x0f\x21\xe3\x30\x5e\x50\xc6\xb9\xf0\xb5\xad\xfb\x6e\x5c\x57\xa6\xfb\xd0\xc3\x7f\x9b\x2d\xb1\x77\xad\xe6\xb8\x7d\x6b\x30\x07\x29\xea\x1b\x38\x0a\x3c\xf5\x7f\xed\xef\x32\x18\xb4\x6c\xf3\xb4\x5d\x05\x39\xee\x93\x34\x05\x66\xe0\x1b\xb3\x87\x6f\x39\x70\xe8\x60\xe6\xda\x01\x8a\xd3\x40\x68\x47\x18\x9b\xb3\xd4\x37\xcd\xb5\x71\x52\x07\x53\x61\x3f\x83\x75\x99\x8d\x46\x03\xee\x9c\x4b\x66\x48\x69\xb6\xc7\x41\xd6\x1f\x9b\x98\xfb\x24\x28\xd8\x7e\xb6\x09\xf3\x89\x42\x43\xd2\x3f\x18\x55\x81\x43\x3a\xe2\xc8\xb5\x22\x14\x0a\x4d\x47\x95\x75\x42\xbb\xc8\xd4\xee\x1f\xe4\x04\xac\xef\x7a\xd3\x20\x17\xa5\xc0\x02\x1a\x46\xd5\x67\x8c\x35\xed\xae\x16\x7c\x4e\xdc\xc5\xc5\x17\xb0\x76\x9e\xe2\x70\x44\xbc\x67\x9a\x71\xd6\xb0\x9d\xa8\x05\x09\x3c\xcf\xc7\x17\x03\x7f\x81\xa6\x09\x41\x3d\xdc\x2f\xf9\x99\xcd\xd1\x85\xb6\xb8\x54\x9d\x1b\x24\xb7\x75\xf0\x3f\xe4\x2d\xe1\x64\xa3\x0c\x9d\xe2\xb7\x87\x5f\x25\xea\x24\x2f\x6d\xde\xd1\x42\x81\xe5\xed\xac\xdd\xfc\x39\x19\xaf\xfb\xf3\x39\x14\x6d\x3d\x59\xa9\x42\x86\xc5\x7c\xa6\xcf\x70\x4c\xc8\xd2\x9d\xc3\xf2\x56\x96\x14\x54\xdb\x28\x43\xf0\xee\xfd\x7f\x9a\xe1\xdc\x23\x3d\xaf\x4d\xd2\xef\x3b\x26\xa4\x19\x01\x4e\x73\x88\x7f\xd7\x62\x2f\x24\xab\x7b\x1e\xc0\x54\x5e\x84\x8a\x1d\xd1\x23\x66\xf2\xed\xa0\x34\xc6\x2e\xf7\x47\xf4\x7f\x00\x00\x00\xff\xff\x18\xb7\x04\x80\x2b\x08\x00\x00"

func transactionsNftForwardingTransfer_nft_to_receiverCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingTransfer_nft_to_receiverCdc,
		"transactions/nft-forwarding/transfer_nft_to_receiver.cdc",
	)
}

func transactionsNftForwardingTransfer_nft_to_receiverCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingTransfer_nft_to_receiverCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/transfer_nft_to_receiver.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0xd4, 0xac, 0xf7, 0xd6, 0xbf, 0x2f, 0xbe, 0x56, 0x1a, 0xb4, 0xfc, 0x34, 0x8c, 0x26, 0x75, 0x32, 0x99, 0x16, 0xf1, 0x31, 0x2f, 0xb8, 0x11, 0x59, 0x7f, 0xc2, 0x6b, 0xb6, 0xcf, 0x7c, 0x1b}}
	return a, nil
}

var _transactionsNftForwardingUnlink_forwarder_link_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xcd\xaa\xda\x50\x10\xde\xe7\x29\xbe\xba\x10\x85\x34\xd9\x4b\x6f\xa1\x08\x42\x17\x95\x4b\x6b\xbb\x1f\x93\x31\x19\x1a\xcf\x09\x73\x26\x57\xe4\xe2\xbb\x97\x68\xfe\xb4\xd2\x66\x75\x1c\x67\xbe\xbf\x99\x48\x8e\xb5\x57\xc3\xd6\xbb\x4d\xe3\x0a\xd9\x57\xbc\xf3\xbf\xd9\xe1\xa0\xfe\x88\xd9\x63\x79\xd6\xf7\x7f\x63\xa3\x9c\x8c\x7e\x09\x9f\x42\xd7\x7c\x57\x1b\x3a\xb7\x9b\xdd\xc6\xeb\x89\x34\x17\x57\xf4\xb0\xd3\xda\x2c\x8a\xd2\x14\xbb\x52\x02\x4c\xc9\x05\xca\x4c\xbc\x83\x72\x5d\x51\xc6\x61\x02\xc0\x8a\xef\x9c\xb1\xbc\xb1\x62\x4d\x35\xed\xa5\x12\x13\x0e\x38\x89\x95\x20\x64\xbe\xaa\xf8\x36\x6d\x1e\x62\x01\x75\xb3\xaf\x24\x43\x30\xaf\x54\x30\xe8\x60\xac\x28\xe9\xad\x95\x92\x79\x77\x90\xa2\x51\xce\x5b\xfe\xb6\x7b\xca\x14\xa5\x69\x1a\x4d\xf4\x2c\x46\xf0\x1f\x37\xb4\x57\xb2\x72\x85\xc9\x8f\x18\xda\xa9\x7b\xbd\xd2\xde\x1a\xc6\xf7\x12\xef\x51\x04\x00\xb5\x72\x4d\xca\x8b\x20\x85\x63\x5d\x81\x1a\x2b\x17\x5f\x43\x68\xb8\x43\x1b\xcc\x9d\xd7\xde\x99\xb6\xcc\x1a\xdf\x90\x42\x39\xfe\x19\xe3\xa7\xab\x1f\x8b\x4b\xcc\xbf\x64\x99\x6f\x9c\xb5\x7c\xe8\xbe\xe1\x91\xa6\xf7\x41\x49\x00\x55\xca\x94\x9f\xd1\x41\x71\x1e\x23\xf7\x70\xde\xca\x36\xa6\x8f\x50\x3e\xf2\x71\xcf\x8a\xe4\x6e\x15\xde\x55\xe7\x6b\x88\x5e\x8f\xa1\x0d\x7c\xbb\xd9\x25\xfd\x7e\x06\x3e\x39\xe0\x66\x33\xc9\x26\x1b\x4b\x0a\xb6\x4f\xf3\xf7\xc7\xf3\x4a\xd6\x83\xb0\xcb\xe7\xc5\xdf\x69\x2e\xf1\xe1\x05\x4e\xaa\x89\xb1\xf6\x53\xb6\x46\xdd\x50\xba\x44\x53\xb7\xde\x4a\xd6\x93\x04\x8e\xd1\xf4\x69\xc1\x4a\x1e\xed\x8e\xb7\x74\x1e\x06\x9f\x69\x1e\xc6\x9f\x29\xbb\xe3\xcc\x94\xc9\x18\xf3\x9e\xa3\x8d\x7c\xe0\xc0\xc1\xeb\x55\xc0\xb8\x85\x61\xb6\x62\x9b\x94\xd7\x54\xe3\xe5\xa9\x94\xee\xa0\x13\x69\x8f\xe6\xbf\x41\x3e\x3d\xdd\xe5\x3f\xbd\xf6\x4e\xef\xc4\xc4\x20\x5b\x3d\x39\xf2\xce\xfc\x25\xba\x44\x7f\x02\x00\x00\xff\xff\x87\x72\xab\xef\x50\x04\x00\x00"

func transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
		"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc",
	)
}

func transactionsNftForwardingUnlink_forwarder_link_collectionCdc() (*asset, error) {
	bytes, err := transactionsNftForwardingUnlink_forwarder_link_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/nft-forwarding/unlink_forwarder_link_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x37, 0xe1, 0x63, 0x7e, 0x52, 0x13, 0xf8, 0xde, 0x62, 0x42, 0x10, 0x97, 0x8b, 0x96, 0x25, 0x17, 0x7f, 0xd, 0xd5, 0xa6, 0x9b, 0x28, 0x1b, 0x9c, 0x40, 0x78, 0x73, 0x9a, 0x74, 0x70, 0x1}}
	return a, nil
}

var _transactionsSetup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x4f\x6f\xe2\x3c\x10\xc6\xef\xf9\x14\x4f\x39\x54\x41\x4a\xe1\x5e\xd1\xf6\x7d\x97\x2d\xd2\x1e\x16\x55\x6d\xb6\xf7\x21\x0c\x8d\xb5\xc6\x8e\xec\x09\x2c\xaa\xf8\xee\x2b\x27\x90\x7f\xa0\xae\x0f\x88\xd8\x33\xe3\xdf\x3c\x8f\xed\xe9\x74\x8a\x34\x57\x1e\xe2\xc8\x78\xca\x44\x59\x03\xe5\xb1\xcf\x49\x40\x06\x94\x65\xb6\x34\x82\xbd\x2d\xf5\x1a\xae\x34\x51\xc8\x10\x0b\xcf\x02\x25\x9e\xf5\x06\x65\x11\x26\x1c\x67\xac\x76\x8c\xe5\x22\xf5\x51\xa4\xb6\x85\x75\x82\xd1\xd2\x9a\x45\x69\x3e\xd4\x4a\x73\x6a\x7f\xb3\x19\x35\x2b\xcf\x7f\x68\x5b\x68\x5e\x2e\xd2\x76\xee\x27\x0b\xad\x49\xe8\x5d\xf1\xde\x8f\xa2\xa8\x0b\xf5\x19\x45\x00\x50\x38\x2e\xc8\x71\xec\xd5\x87\x61\x77\x0f\x2a\x25\x8f\xbf\x59\xe7\xec\xfe\x9d\x74\xc9\x09\x7e\x78\x5f\xf2\x9b\x58\x47\x1f\x3c\xa7\x82\x56\x4a\x2b\x39\xcc\xad\x11\x67\xb5\x66\x97\xe0\xa5\x5c\x69\xe5\xf3\x76\x31\xc1\x1b\xed\xf8\x94\xff\xcb\x14\xc3\xf5\x31\x6e\xff\xaf\x85\x18\xe3\xb3\xc2\x08\xa3\xf9\xa3\x59\x90\x85\xda\x15\xe9\x77\x12\xc2\x03\xda\xfe\x26\x8e\xbd\xd5\x3b\xae\x10\x28\x93\xd0\x5d\x1c\xe6\x4a\x97\x71\x7a\x28\xf8\x1e\x46\xe9\x04\x3b\xc5\xfb\xfa\x33\xfc\xce\x7a\x62\x4c\x96\x8b\x74\xde\xdb\xe2\x31\x1e\x8f\x41\xfe\x06\xff\x88\x7b\x6a\x30\xc3\x78\x7a\x42\x41\x46\x65\xf1\x28\x84\xbf\xd6\x60\x0e\x6b\xcb\x1e\xc6\x0a\x4e\xa8\xb8\x28\x53\xd1\x8d\xc6\x51\x53\x6d\x3a\xc5\x2b\x4b\xe9\x0c\x98\x9c\x3e\x40\x6d\x20\x39\x37\x07\x86\xb4\x63\x5a\x1f\x90\x93\x07\x75\xd4\x69\xf2\xd5\x06\xb5\x87\x13\x5f\x7b\x35\x59\x55\x2e\xce\x6e\x3b\xca\xb5\x0c\x8f\xf1\xc6\xd9\xed\xfd\x40\xe7\x73\xee\x0b\x49\x3e\xc6\xcd\x43\x10\xb2\xe3\x50\x18\xae\x82\x6c\xa6\x8e\xbd\x0e\xe6\x8e\x49\x18\x04\xc3\x7b\xf0\xb6\x90\xc3\x35\xd4\xbe\xbf\x98\xdd\x75\xcd\xcd\xaa\x12\xcf\x21\xb7\xa5\x8d\xcd\x46\x3a\x56\xfe\xd7\x89\x5f\x2e\xd2\x60\x5d\x0f\xc3\xd3\x8e\xa1\x24\x5c\xa3\x8e\x86\x4d\xc4\x40\xa7\x10\x1d\xcf\xee\x5a\xa2\x04\x62\xbf\x54\xa6\xb7\x59\x76\xee\xb9\x3a\xe6\x19\xb2\xe6\x98\x63\x63\x5d\x05\x70\x45\x83\x13\x43\x13\xac\xd8\x4f\xca\xf3\x4d\x89\x07\x7b\xd7\x95\xeb\xad\xaf\x8b\x38\xa7\x02\x0f\x57\x8b\x9e\xbb\x54\xe1\x1a\xcf\x6e\x3f\x87\x2f\xc8\xe4\xb5\x7e\x68\x5c\x82\x8b\xa5\xd6\x80\xe3\xe3\x90\xa9\xa7\xc7\x57\x5d\x5d\xf6\x34\xa7\x22\x01\xc9\x85\xc4\xc3\x36\x8f\xd1\x31\xfa\x1b\x00\x00\xff\xff\xd8\x3b\x14\x7f\x51\x05\x00\x00"

func transactionsSetup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_accountCdc,
		"transactions/setup_account.cdc",
	)
}

func transactionsSetup_accountCdc() (*asset, error) {
	bytes, err := transactionsSetup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0x34, 0x69, 0xfc, 0xc2, 0x1, 0xf3, 0x4e, 0xb5, 0x41, 0x44, 0x38, 0x2b, 0x35, 0xb7, 0xaf, 0x1a, 0x98, 0xdf, 0x77, 0xaa, 0x8b, 0x94, 0x8a, 0x4f, 0xd5, 0x84, 0xe7, 0x94, 0xe7, 0xf2, 0x43}}
	return a, nil
}

var _transactionsSetup_account_from_nft_referenceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x41\x6b\xe3\x3c\x10\xbd\xfb\x57\xbc\xe6\x50\x6c\x48\x9d\xcb\xc7\x77\x08\x49\x4b\xf1\x6e\xa0\x87\x0d\xa5\xcd\xf6\x3e\xb1\xc7\xb1\xa8\x2b\x19\x49\x8e\x09\xa5\xff\x7d\x91\x15\x27\x91\xdb\xb2\x87\xd5\xc9\xc8\x6f\xde\xcc\x9b\x79\xa3\xd9\x6c\x86\x4d\x25\x0c\xac\x26\x69\x28\xb7\x42\x49\x08\x83\xae\x22\x0b\x92\xa0\x3c\x57\xad\xb4\xe8\x54\x5b\x17\xd0\xad\x8c\x5c\x84\x55\x30\x6c\x21\xac\xe1\xba\x44\xdb\xb8\x0b\xcd\x39\x8b\x3d\x63\xbd\xda\x98\xd4\x73\x96\xad\xec\x09\xfb\x98\xd6\xb0\xc1\x5e\x70\x67\x1c\xfa\x55\xaa\x0e\x5d\xc5\x9a\x07\x32\xc7\x52\x31\x72\x55\xd7\x7c\x8e\x12\x12\xc6\x2a\x4d\x3b\x06\xc9\xc2\x61\x73\xcd\x64\xb9\xc7\xf2\x5b\x63\x0f\x17\x11\x69\x14\x89\xb7\x46\x69\x8b\xb5\x92\xab\x56\xee\xc4\xb6\xe6\x8d\x7a\x65\x89\x52\xab\x37\x4c\xc6\xd7\x93\x01\xff\x8b\x2d\x15\x64\xe9\xa5\xaf\xcf\x83\x83\xbb\x49\x14\x5d\x74\x28\xa6\xa2\xd0\x6c\xcc\x1c\xf7\xfe\x63\x8a\xa6\xdd\xd6\x22\x7f\x24\x5b\xcd\xf1\x78\xfa\x9e\x42\x14\x73\xfc\x7e\x90\xf6\xff\xff\x12\xbc\x47\x11\x00\x34\x9a\x1b\xd2\x1c\x1b\xb1\x93\xac\xe7\xa0\xd6\x56\xf1\x83\x31\x2d\x3f\x7b\xa9\x19\x35\xb4\x15\xb5\xb0\x87\x4c\x49\xab\x9d\x3e\x3d\xf5\xac\xa6\x3a\xff\x9c\xe2\x99\xf6\xfc\x42\x75\xcb\x09\xae\xef\xfd\xa4\x5c\x16\x1c\x4f\xcd\xf6\xa2\x3b\x58\x62\xc7\xf6\x08\x1b\x14\x24\x69\x3e\xf0\x09\x36\xe9\x56\x69\xad\xba\xc5\xf5\xfb\xb8\x53\x69\x76\xe2\xf9\xb8\x8d\xcf\x62\x93\x53\x32\x77\xee\xee\xd0\x90\x14\x79\x3c\xc9\x7a\xbf\x48\x65\xe1\x29\x41\xd0\x5c\xb2\x66\x99\xf7\x13\x0f\x47\x3d\x49\xa2\xa0\x68\x59\xda\x27\x2e\xb1\xbc\x9c\xad\xe7\x59\xaf\x36\xb1\x28\xfe\x25\x6b\xc1\x46\x68\x2e\x9c\x4f\x27\x67\x9e\x6f\x7a\xf6\x83\x2c\x61\x79\xac\x27\xd5\x6c\x54\xbd\x67\x67\x88\x78\x73\x68\x78\x11\x58\x24\x5d\xaf\x36\x59\x10\x79\x1b\x27\xc9\x15\xc8\x5c\xe1\x2f\xc0\xb3\xfa\xd9\x0c\x99\x37\x38\x41\x72\xf7\xc9\xe2\x26\x28\xb4\xff\x7b\xa6\xc2\xe2\x66\x54\x7b\xea\xb7\xe5\x67\x88\x8b\x93\x20\xa1\xa1\x3d\x43\xd8\xa1\x41\xc7\x95\x3f\x21\xbc\x4d\xd3\xe3\x1a\xa6\x0e\x1d\x2f\x6e\x46\xa9\xa7\xb0\x6a\x3e\x4e\x7e\x0c\xf1\x3e\xb9\xcc\x98\x0f\x12\xbd\x91\x70\xf2\xe0\x01\xa5\xd2\xe3\x77\xe0\xeb\xd1\x64\xd4\x60\x39\x14\x17\x98\x78\xa8\x54\xb8\x95\xfa\xca\xcb\x4f\xfe\xa9\xd2\xd3\x4f\xef\x44\x68\xf3\xc0\x65\xee\x7c\xaf\x2f\x80\x26\xe3\xde\x05\xe5\x35\x7e\x8f\xe3\x40\xca\x14\x64\xe7\x18\xef\xd5\x47\xf4\x11\xfd\x09\x00\x00\xff\xff\x93\xe4\x1d\xb8\xa2\x05\x00\x00"

func transactionsSetup_account_from_nft_referenceCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_from_nft_referenceCdc,
		"transactions/setup_account_from_nft_reference.cdc",
	)
}

func transactionsSetup_account_from_nft_referenceCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_from_nft_referenceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_from_nft_reference.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x2, 0x7d, 0xd4, 0x7d, 0xc3, 0x0, 0xf, 0x6, 0xd, 0x9e, 0x48, 0x69, 0x8c, 0xcf, 0x6c, 0x19, 0x8d, 0x4c, 0x74, 0x9a, 0xad, 0xa5, 0xb2, 0x80, 0x61, 0xf1, 0xc3, 0x72, 0xfd, 0x8b, 0xef}}
	return a, nil
}

var _transactionsSetup_account_to_receive_royaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x6b\xdb\x40\x10\xbd\xeb\x57\x0c\x3e\x24\x36\x08\xfb\x6e\x9a\x40\xea\x12\x08\xb4\x34\xe4\xab\x57\x8f\x57\x23\x69\xc8\x7a\x57\xec\xce\xc6\x11\xc1\xff\xbd\xec\xea\xc3\x56\x1b\x0a\xf5\xcd\xda\x99\x37\x6f\xde\x7b\xb3\x5a\xad\xe0\xa9\x66\x0f\xe2\xd0\x78\x54\xc2\xd6\x00\x7b\x40\x10\xda\x37\x1a\x85\xa0\xb4\x2e\xfe\x3d\xbd\x67\xb1\x49\x2c\x28\x47\xf1\x1d\xc1\xd0\x01\x34\x9b\x57\x60\x03\x52\x13\x3b\x40\xa5\x6c\x30\x12\xab\x76\x04\xc1\x53\x91\x60\x1c\x29\xe2\x37\x36\x15\x38\xdb\xa2\x16\x26\x9f\x7d\xca\x40\xa1\x99\x34\xa2\x69\xa1\x0c\xa6\xe2\x9d\x26\x10\xfb\x4a\x26\x87\x43\xcd\xaa\x8e\x5c\x7d\x43\x8a\x4b\xa6\x02\x76\x6d\x9c\x0f\xdb\x37\x0c\x5a\xee\x51\xea\x2d\xa0\xab\xc2\x9e\x8c\xc4\x39\x69\xd6\x5d\x99\x6a\x06\x86\x07\x34\xe2\x23\xcf\x8e\x1b\x9d\x98\xc5\x6d\x6e\xbf\xff\xfc\x95\xc7\xfa\xf6\x52\xeb\x48\x07\xb6\x2b\x2f\xd6\x61\x45\xab\x52\xdb\xc3\x53\xa4\xf2\x12\xa7\x6d\xcf\xc0\xdb\x84\x7a\x0e\xca\x12\xd1\x9e\x1f\xbf\x6d\xf2\xbe\xc0\x06\x5d\x24\xc0\x5b\x46\x49\x30\xcb\x84\xf3\xd8\xa1\x47\xf2\x09\x11\x4d\x01\xde\x82\x35\xcb\x5e\x29\x82\x06\xa5\x3e\x49\x13\x97\x69\xc2\x4e\xb3\xea\x3d\xf0\xbd\x23\xa9\x4c\x6a\x94\xde\x16\x28\x83\x04\x47\x79\xac\xa0\xf7\x86\x94\x50\x71\xc6\x71\x9c\x56\x91\x21\xc7\x6a\x2a\xb3\x4a\x7c\x77\x29\x0d\x07\x74\x45\xd7\x9a\x84\x6c\x1a\x67\x1b\xc7\x31\x0a\x49\xf7\x2c\xe3\x7d\x63\x9d\xc0\xec\xb6\x77\x2c\xad\x37\x1b\x3f\xff\x20\xc1\x02\x05\x5f\x98\x0e\x7e\x96\x65\x67\xc6\xcf\x47\xe7\xd6\x70\xa6\xc4\x02\x3e\xb2\x0c\x00\xa0\x71\xd4\xa0\xa3\xb9\xe7\xca\x90\x5b\x03\x06\xa9\xe7\x5f\xad\x73\xf6\xf0\x82\x3a\x50\x0e\x77\xde\x07\xea\x5b\x37\xd8\xe0\x8e\x35\x4b\xbb\xb1\x46\x9c\xd5\x9a\x5c\x0e\xf7\x51\x2c\x5f\x9f\x1e\x73\x78\x36\xcd\x9f\x1f\x17\x70\x71\xd3\x45\x64\x1c\x1e\x7f\xab\x15\x3c\x90\x04\x67\x80\xd0\xe9\x16\x78\x9a\xa6\xc2\x92\x37\x97\x02\x35\xbe\xc5\xc3\x98\x08\x00\xc9\xdf\x11\x89\x4b\xe8\xb6\x58\xf6\x81\x5a\xee\xd2\x1e\x5f\x2e\x3e\x26\x6d\xcb\x87\xce\x1f\x77\xbc\x9e\x97\xce\xee\xd7\x30\x6a\xb4\x80\xab\x2b\x30\xac\xe1\x63\x44\x4d\x22\xa1\x61\x35\x9f\xdd\x74\x85\x63\x48\x4e\x67\x32\xbd\xa4\x2e\x28\x91\x39\x18\x2b\x40\xef\xec\x65\xb6\x18\x11\x8f\x93\xe5\x37\xc3\xcd\xf7\x91\x53\xa3\x60\x43\x1e\xd2\x96\x5d\xee\xac\xd1\x6d\x8c\x9a\xf5\xe4\xcf\x41\x62\x59\x41\x8d\xf5\x2c\x91\x4b\x77\xf2\x52\x3b\x1b\xaa\x3a\x3d\x0e\x2b\x03\x1b\x21\x57\xa2\xa2\xb1\xbd\xd7\x6c\x9c\xcb\xe4\x97\x61\xb0\x6f\x3e\x89\xd6\xb2\x22\x79\x48\xd7\xdc\x0e\x80\xc9\x7b\x15\xb5\x9b\x2f\x4e\x2b\x6a\x92\x4e\xab\x0d\x36\x70\xf5\xe9\x88\xc1\x23\x8e\xf1\xfa\xcb\xa2\xb4\xf3\xf1\xfa\x94\xde\xc5\x3f\xf9\x0e\x6c\x87\x99\x39\xa0\xac\xe1\xff\xb8\x67\x9d\x37\xc7\xec\x77\x00\x00\x00\xff\xff\x88\x90\xa3\xae\xc2\x05\x00\x00"

func transactionsSetup_account_to_receive_royaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsSetup_account_to_receive_royaltyCdc,
		"transactions/setup_account_to_receive_royalty.cdc",
	)
}

func transactionsSetup_account_to_receive_royaltyCdc() (*asset, error) {
	bytes, err := transactionsSetup_account_to_receive_royaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/setup_account_to_receive_royalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x30, 0x3f, 0x26, 0x1, 0x6e, 0x4c, 0x2c, 0xf5, 0x24, 0xac, 0x71, 0xda, 0xd0, 0xb1, 0x79, 0x89, 0x68, 0x55, 0x6e, 0x4a, 0x41, 0x7f, 0x67, 0xcf, 0xe7, 0x3a, 0xca, 0x7a, 0x0, 0x76, 0xd5, 0xe}}
	return a, nil
}

var _transactionsTestUpgrade_nft_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\xca\xc2\x40\x10\x84\xfb\x7b\x8a\x25\xc5\xcf\x05\x7e\x52\x4b\x3a\x11\x04\x1b\x2b\x53\x89\x84\x75\xb3\xe8\x61\xb2\x7b\x5c\xf6\x40\x90\xbc\xbb\x5c\x14\xa7\x98\xea\xfb\x86\x71\x96\x50\x66\x24\x0b\x2a\x9e\x74\xe0\x16\xce\xdd\x41\x6c\x73\xa9\xe1\xe5\x1c\x00\x40\x4c\x1c\x31\xb1\x47\x22\x6b\x01\xb3\xdd\x7d\x17\x07\x34\xde\xa9\x58\x42\xb2\x1a\xfe\xb6\x44\x9a\xc5\x7e\x4e\x49\xe1\x1b\xfa\x32\x73\x93\x57\xa7\xef\xf9\x19\x39\x85\x89\xc5\x70\xf4\x82\x13\xb7\x50\x1d\x55\xf6\x59\x6e\xe1\x3a\xf2\x49\x1f\x2c\xd5\x3f\x7c\xbe\x94\xae\xd7\xc5\xc5\x2d\xef\x00\x00\x00\xff\xff\x9c\x3c\x3c\xe2\xac\x00\x00\x00"

func transactionsTestUpgrade_nft_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTestUpgrade_nft_contractCdc,
		"transactions/test/upgrade_nft_contract.cdc",
	)
}

func transactionsTestUpgrade_nft_contractCdc() (*asset, error) {
	bytes, err := transactionsTestUpgrade_nft_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/test/upgrade_nft_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x96, 0x6c, 0xb5, 0xe2, 0x88, 0x49, 0xf5, 0xa6, 0x52, 0xd8, 0x7a, 0x41, 0x8f, 0x7e, 0xc9, 0x1, 0x30, 0x49, 0x4d, 0x1e, 0x84, 0xe2, 0x4c, 0xb2, 0x13, 0x96, 0x6d, 0xca, 0x1f, 0xa1, 0x17, 0x6c}}
	return a, nil
}

var _transactionsTransfer_nftCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\xbd\xfb\x57\x4c\x7c\x48\x24\x20\x51\x2e\x45\x0f\x82\xed\x20\x75\x1a\x20\x87\xba\x85\xeb\xa6\x67\x5a\x1a\x49\x6c\x65\x52\x20\x47\x76\x82\x20\xff\x7d\x41\x91\xa2\x28\x39\xd9\x2c\xb0\x3a\x18\x32\x39\x1f\x6f\xde\xcc\x3c\xdd\xde\xde\xc2\xae\xe2\x1a\x48\x31\xa1\x59\x46\x5c\x0a\xe0\x1a\x0a\xa9\xec\x51\x81\x4a\x71\x51\x02\x13\xf0\xfb\x0b\x3b\x34\x35\x6e\x1e\x77\x50\x28\x79\x00\x29\x10\x58\x96\xc9\x56\x10\x90\x04\x26\x24\x55\xa8\x66\x33\x7e\x68\xa4\x22\x98\x3f\x73\x3c\x6d\x51\xcb\xfa\x88\x6a\xee\x4f\xff\x40\x62\x39\x23\x66\x6e\xf5\x70\xbc\x91\xe2\xb1\x15\x25\xdf\xd7\xb8\x93\xff\xa3\x18\x6e\x86\xb4\xf3\xd9\x2c\x80\x19\x65\x52\x90\x62\x19\xdd\xe7\xb9\x42\xad\x53\x70\x2f\xd7\xd0\xdf\x6c\xd8\x01\x53\xf8\x9b\x4c\x05\xd7\xa0\x30\xe3\x0d\x47\x41\x81\xe5\x89\x53\x95\x2b\x76\x7a\x7a\x48\xe1\x9f\x27\x41\xbf\xfe\x12\xc3\xdb\x6c\x06\x00\x60\xa8\xd9\x62\x81\x0a\x45\x86\xa6\x40\xaa\xd0\xdb\xa3\xba\xd2\x90\xc9\xba\xc6\x0e\x4b\xe7\x50\x23\xf9\xfb\x2d\x16\x29\xb0\x96\xaa\x68\x5a\x58\xf2\xaf\x33\x89\xe1\xf2\xed\xec\x72\xed\x43\xbe\x7f\x84\x42\x16\x1d\x8a\x21\xb1\xc1\x95\x63\x23\x35\xa7\xee\xc6\x34\x87\xa4\x87\xa3\x30\x43\x7e\x44\xd5\xc1\xf9\x20\xdd\xd6\xdd\xbb\x64\x8d\xc2\x86\x29\x8c\x34\x2f\x05\x2a\x57\xc0\x6f\x52\x29\x79\x7a\x66\x75\x8b\x31\x5c\xde\xdb\x86\x7b\x96\x2c\x46\xd8\x77\x46\x1e\x42\xdf\x00\x60\x1a\xc2\x31\x00\xd5\x97\xe2\x9d\x0d\xcc\x63\x68\xb2\x84\x12\xc9\xa5\x99\xf6\x38\x4e\xfa\x03\x9d\xd8\x94\x8b\xcb\x30\xfe\x2a\x12\x5d\xcb\xc3\x01\x88\x7d\x2a\xf3\xdc\xdd\x41\xc3\x04\xcf\xa2\xf9\x5a\xb6\x75\x0e\x42\x52\x0f\x7e\x04\x54\x16\x50\xf2\x23\x0a\x30\x01\xed\xbc\x33\x8b\x61\x1e\x8f\x2a\x57\xd6\x23\x28\xdd\xf7\xc6\x8c\xb9\x75\x9d\xf2\x32\xaa\x7e\xf0\x78\x30\x0e\xcb\x11\x1d\x89\x8b\xbf\x76\x9e\x06\x64\x64\xce\x5a\x95\xe1\xee\xb5\xc1\x14\x04\xaf\xaf\x3b\x1f\xfb\xd7\xfc\x2e\x46\x5b\x96\x6c\x1e\x77\xeb\x51\x92\x55\x14\xc7\xc0\xf4\x05\x7c\x61\x77\xf7\x09\x77\x23\xaa\x72\x89\xba\xe3\xb1\xa7\xe2\x2c\x4c\x87\x6e\xc2\x9b\x23\x9d\x0d\x23\xd1\xef\x98\x9d\xbe\x2b\x3d\xa1\xd3\x3b\x6b\xac\x8b\x24\x58\x34\x58\x3a\x97\x44\x93\x54\xac\xc4\x7e\x34\x7e\x6e\xff\x56\xd1\xa8\x78\xf3\x98\x5e\xa6\x93\x7e\xf5\x49\xff\x62\x54\x8d\x1c\xe2\x80\x2f\x37\xce\x03\x55\xc6\x09\x8d\xa8\xca\xfd\x7f\x68\xf6\xc4\xae\xaf\x6e\x30\xe3\x05\xc7\x1c\x1a\x46\xd5\x84\xb1\x12\xad\x91\xd7\x31\x0d\x4d\xbb\xaf\x79\xe6\x55\xd8\x06\x1b\x0d\x97\x37\x1e\xef\x95\x3f\xfe\xa4\x29\x2e\xf0\x59\x6f\x7a\x41\x39\x13\xbf\xa9\xe2\xac\x59\x03\xcb\x21\x7b\x92\xb1\x86\xed\x79\xcd\x89\xa3\x4e\x4a\xa4\xc5\xf7\xd4\x68\x15\x4d\x38\xb6\x70\x0c\xc5\x5f\x6f\xf3\x19\x4d\x57\x1a\xfa\xc8\xb0\xee\x61\xbc\x86\xe4\x76\x13\x15\x68\xa5\x45\xde\xd7\xe1\xc6\x29\xfa\x61\x21\xf9\x88\x35\x0f\xa5\x0f\xdc\xe7\x77\xd2\x8b\x2f\x98\xb5\x84\xa1\xac\x1a\x3a\x45\x41\xb0\xb8\x39\x1b\x79\xff\x1e\x85\x1f\xb0\xe1\x3d\xfe\xb4\xb4\xc4\x7d\x2d\x22\x32\x94\xa7\xb0\xb8\x11\x05\x8d\xa1\x34\x52\x13\xbc\xf9\x08\x17\x67\xc9\x4b\xa4\xa7\x07\x1d\x59\x31\x66\x5c\xe8\x00\x45\x9c\xc2\xfc\x4f\xc5\x4b\x2e\x58\x0d\xf2\x24\x50\x81\xae\x3c\x41\x15\x0b\x94\x92\x89\xd7\x83\x54\x38\x77\xb9\xdf\x67\xdf\x02\x00\x00\xff\xff\xae\x20\xc8\x76\x8d\x08\x00\x00"

func transactionsTransfer_nftCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsTransfer_nftCdc,
		"transactions/transfer_nft.cdc",
	)
}

func transactionsTransfer_nftCdc() (*asset, error) {
	bytes, err := transactionsTransfer_nftCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/transfer_nft.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x22, 0xae, 0x4a, 0x9d, 0xca, 0xa, 0x5e, 0x1a, 0x3f, 0xfb, 0x89, 0x12, 0x0, 0x7e, 0xa3, 0xb1, 0xb, 0xa1, 0x2a, 0x5e, 0xb8, 0xa0, 0x6b, 0xd1, 0xdb, 0xbb, 0x15, 0x70, 0x72, 0xcd, 0x5b, 0x8d}}
	return a, nil
}

var _transactionsUnlink_collectionCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xcd\x4e\xeb\x30\x10\x85\xf7\x7e\x8a\x73\xb3\xb8\x37\x91\xae\xd2\x7d\x05\x54\xa8\xd0\x1d\x55\x85\x02\xfb\xa9\x3b\x10\x0b\xd7\xb6\xec\x49\x4b\x85\xfa\xee\x28\x7f\xfd\x11\x0b\x66\x11\x29\xc7\xc7\xc7\xdf\xcc\x4c\x26\x13\x54\xb5\x49\x90\x48\x2e\x91\x16\xe3\x1d\x1a\x67\x8d\xfb\x48\x48\xe6\xdd\x71\xfc\x97\x10\x9a\xb5\x35\x1a\x73\x0a\xb4\x36\xd6\xc8\x01\x24\xd0\xe4\xbc\x33\x9a\xec\x78\x1c\x48\x6a\xa5\xcc\x36\xf8\x28\x78\x62\xa1\x0d\x09\xbd\x1a\xde\x27\xbc\x45\xbf\x45\x76\xa5\x65\xa3\xf3\xf1\x93\xb6\xc1\xf2\x72\x51\x0d\xb6\xb3\x90\x29\x75\xc9\xf5\xa5\x00\x20\x44\x0e\x14\x39\xef\xe9\xa6\xa0\x46\xea\xfc\xc5\x75\x10\xa9\x1e\x18\xe5\x50\xe0\xef\xbd\xd6\xbe\x71\x52\x0c\x17\xdb\xb2\x2c\xd0\xde\x5a\xee\x12\x1f\x48\x08\xb7\x17\x04\x65\xe4\xe4\xed\x8e\xe7\xde\x49\x24\x2d\x2d\x69\xde\x6a\x4d\xd4\x5c\x1d\x02\x4f\xe1\x8c\xfd\x8f\x9d\xe1\x7d\xff\xdb\x7e\x6f\xae\x1a\x2b\x97\x8b\x6a\x7e\xf5\xc4\x5d\x5e\x14\xa0\xf4\x07\xbf\xf8\x66\x27\xcc\xb6\x66\x33\x04\x72\x46\xe7\x59\x6b\x7f\xee\xc1\x22\x36\x9e\x13\x9c\x17\x0c\xa8\xf8\x11\xd3\xd1\x65\xc5\x29\xac\x1f\x54\xa9\xc7\xed\x19\x4e\x65\x33\xce\x2b\xbf\x68\xfe\x1c\xb3\xea\x36\xba\x22\xa9\xfb\x98\xa3\x3a\xaa\xef\x00\x00\x00\xff\xff\xb8\x62\x07\x63\x2b\x02\x00\x00"

func transactionsUnlink_collectionCdcBytes() ([]byte, error) {
	return bindataRead(
		_transactionsUnlink_collectionCdc,
		"transactions/unlink_collection.cdc",
	)
}

func transactionsUnlink_collectionCdc() (*asset, error) {
	bytes, err := transactionsUnlink_collectionCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transactions/unlink_collection.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xea, 0xcf, 0x1c, 0x56, 0x78, 0x5e, 0xb1, 0x95, 0x11, 0xbd, 0x19, 0x9a, 0x7f, 0xc8, 0xa5, 0x74, 0x52, 0xc9, 0x7, 0xe9, 0x84, 0x6e, 0x34, 0x71, 0x29, 0x81, 0x84, 0x8b, 0x61, 0x72, 0x1d, 0xfa}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"scripts/borrow_nft.cdc":                                           scriptsBorrow_nftCdc,
	"scripts/get_collection_data.cdc":                                  scriptsGet_collection_dataCdc,
	"scripts/get_collection_ids.cdc":                                   scriptsGet_collection_idsCdc,
	"scripts/get_collection_length.cdc":                                scriptsGet_collection_lengthCdc,
	"scripts/get_collection_length_from_storage.cdc":                   scriptsGet_collection_length_from_storageCdc,
	"scripts/get_contract_storage_path.cdc":                            scriptsGet_contract_storage_pathCdc,
	"scripts/get_nft_metadata.cdc":                                     scriptsGet_nft_metadataCdc,
	"scripts/get_nft_view.cdc":                                         scriptsGet_nft_viewCdc,
	"transactions/destroy_nft.cdc":                                     transactionsDestroy_nftCdc,
	"transactions/mint_nft.cdc":                                        transactionsMint_nftCdc,
	"transactions/nft-forwarding/change_forwarder_recipient.cdc":       transactionsNftForwardingChange_forwarder_recipientCdc,
	"transactions/nft-forwarding/create_forwarder.cdc":                 transactionsNftForwardingCreate_forwarderCdc,
	"transactions/nft-forwarding/transfer_nft_to_receiver.cdc":         transactionsNftForwardingTransfer_nft_to_receiverCdc,
	"transactions/nft-forwarding/unlink_forwarder_link_collection.cdc": transactionsNftForwardingUnlink_forwarder_link_collectionCdc,
	"transactions/setup_account.cdc":                                   transactionsSetup_accountCdc,
	"transactions/setup_account_from_nft_reference.cdc":                transactionsSetup_account_from_nft_referenceCdc,
	"transactions/setup_account_to_receive_royalty.cdc":                transactionsSetup_account_to_receive_royaltyCdc,
	"transactions/test/upgrade_nft_contract.cdc":                       transactionsTestUpgrade_nft_contractCdc,
	"transactions/transfer_nft.cdc":                                    transactionsTransfer_nftCdc,
	"transactions/unlink_collection.cdc":                               transactionsUnlink_collectionCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"scripts": {nil, map[string]*bintree{
		"borrow_nft.cdc": {scriptsBorrow_nftCdc, map[string]*bintree{}},
		"get_collection_data.cdc": {scriptsGet_collection_dataCdc, map[string]*bintree{}},
		"get_collection_ids.cdc": {scriptsGet_collection_idsCdc, map[string]*bintree{}},
		"get_collection_length.cdc": {scriptsGet_collection_lengthCdc, map[string]*bintree{}},
		"get_collection_length_from_storage.cdc": {scriptsGet_collection_length_from_storageCdc, map[string]*bintree{}},
		"get_contract_storage_path.cdc": {scriptsGet_contract_storage_pathCdc, map[string]*bintree{}},
		"get_nft_metadata.cdc": {scriptsGet_nft_metadataCdc, map[string]*bintree{}},
		"get_nft_view.cdc": {scriptsGet_nft_viewCdc, map[string]*bintree{}},
	}},
	"transactions": {nil, map[string]*bintree{
		"destroy_nft.cdc": {transactionsDestroy_nftCdc, map[string]*bintree{}},
		"mint_nft.cdc": {transactionsMint_nftCdc, map[string]*bintree{}},
		"nft-forwarding": {nil, map[string]*bintree{
			"change_forwarder_recipient.cdc": {transactionsNftForwardingChange_forwarder_recipientCdc, map[string]*bintree{}},
			"create_forwarder.cdc": {transactionsNftForwardingCreate_forwarderCdc, map[string]*bintree{}},
			"transfer_nft_to_receiver.cdc": {transactionsNftForwardingTransfer_nft_to_receiverCdc, map[string]*bintree{}},
			"unlink_forwarder_link_collection.cdc": {transactionsNftForwardingUnlink_forwarder_link_collectionCdc, map[string]*bintree{}},
		}},
		"setup_account.cdc": {transactionsSetup_accountCdc, map[string]*bintree{}},
		"setup_account_from_nft_reference.cdc": {transactionsSetup_account_from_nft_referenceCdc, map[string]*bintree{}},
		"setup_account_to_receive_royalty.cdc": {transactionsSetup_account_to_receive_royaltyCdc, map[string]*bintree{}},
		"test": {nil, map[string]*bintree{
			"upgrade_nft_contract.cdc": {transactionsTestUpgrade_nft_contractCdc, map[string]*bintree{}},
		}},
		"transfer_nft.cdc": {transactionsTransfer_nftCdc, map[string]*bintree{}},
		"unlink_collection.cdc": {transactionsUnlink_collectionCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
